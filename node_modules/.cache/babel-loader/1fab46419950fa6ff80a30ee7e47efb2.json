{"ast":null,"code":"import React,{useEffect}from\"react\";import config from\"./config\";var squareSize=config.squareSize;var usePaintSquare=function usePaintSquare(canvas,hue){useEffect(function(){var ctx=canvas.current.getContext(\"2d\");ctx.fillStyle=\"hsl(\".concat(hue,\", 100%, 50%)\");ctx.fillRect(0,0,squareSize,squareSize);var gradientWhite=ctx.createLinearGradient(0,0,squareSize,0);gradientWhite.addColorStop(0,\"rgba(255, 255, 255, 1)\");gradientWhite.addColorStop(1,\"rgba(255, 255, 255, 0)\");ctx.fillStyle=gradientWhite;ctx.fillRect(0,0,squareSize,squareSize);var gradientBlack=ctx.createLinearGradient(0,0,0,squareSize);gradientBlack.addColorStop(0,\"rgba(0, 0, 0, 0)\");gradientBlack.addColorStop(1,\"rgba(0, 0, 0, 1)\");ctx.fillStyle=gradientBlack;ctx.fillRect(0,0,squareSize,squareSize);},[canvas,hue]);};export default usePaintSquare;","map":{"version":3,"sources":["C:/Tutorials/elp-app/src/components/Picker/usePaintSquare.js"],"names":["React","useEffect","config","squareSize","usePaintSquare","canvas","hue","ctx","current","getContext","fillStyle","fillRect","gradientWhite","createLinearGradient","addColorStop","gradientBlack"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,GAAQC,CAAAA,UAAR,CAAuBD,MAAvB,CAAQC,UAAR,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAASC,GAAT,CAAiB,CACtCL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,GAAG,CAAGF,MAAM,CAACG,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAZ,CACAF,GAAG,CAACG,SAAJ,eAAuBJ,GAAvB,iBACAC,GAAG,CAACI,QAAJ,CAAa,CAAb,CAAgB,CAAhB,CAAmBR,UAAnB,CAA+BA,UAA/B,EACA,GAAMS,CAAAA,aAAa,CAAGL,GAAG,CAACM,oBAAJ,CAAyB,CAAzB,CAA4B,CAA5B,CAA+BV,UAA/B,CAA2C,CAA3C,CAAtB,CACAS,aAAa,CAACE,YAAd,CAA2B,CAA3B,2BACAF,aAAa,CAACE,YAAd,CAA2B,CAA3B,2BACAP,GAAG,CAACG,SAAJ,CAAgBE,aAAhB,CACAL,GAAG,CAACI,QAAJ,CAAa,CAAb,CAAgB,CAAhB,CAAmBR,UAAnB,CAA+BA,UAA/B,EACA,GAAMY,CAAAA,aAAa,CAAGR,GAAG,CAACM,oBAAJ,CAAyB,CAAzB,CAA4B,CAA5B,CAA+B,CAA/B,CAAkCV,UAAlC,CAAtB,CACAY,aAAa,CAACD,YAAd,CAA2B,CAA3B,qBACAC,aAAa,CAACD,YAAd,CAA2B,CAA3B,qBACAP,GAAG,CAACG,SAAJ,CAAgBK,aAAhB,CACAR,GAAG,CAACI,QAAJ,CAAa,CAAb,CAAgB,CAAhB,CAAmBR,UAAnB,CAA+BA,UAA/B,EACD,CAdQ,CAcN,CAACE,MAAD,CAASC,GAAT,CAdM,CAAT,CAeD,CAhBD,CAkBA,cAAeF,CAAAA,cAAf","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport config from \"./config\"\r\n\r\nconst { squareSize } = config\r\n\r\nconst usePaintSquare = (canvas, hue) => {\r\n  useEffect(() => {\r\n    const ctx = canvas.current.getContext(\"2d\")\r\n    ctx.fillStyle = `hsl(${hue}, 100%, 50%)`\r\n    ctx.fillRect(0, 0, squareSize, squareSize)\r\n    const gradientWhite = ctx.createLinearGradient(0, 0, squareSize, 0)\r\n    gradientWhite.addColorStop(0, `rgba(255, 255, 255, 1)`)\r\n    gradientWhite.addColorStop(1, `rgba(255, 255, 255, 0)`)\r\n    ctx.fillStyle = gradientWhite\r\n    ctx.fillRect(0, 0, squareSize, squareSize)\r\n    const gradientBlack = ctx.createLinearGradient(0, 0, 0, squareSize)\r\n    gradientBlack.addColorStop(0, `rgba(0, 0, 0, 0)`)\r\n    gradientBlack.addColorStop(1, `rgba(0, 0, 0, 1)`)\r\n    ctx.fillStyle = gradientBlack\r\n    ctx.fillRect(0, 0, squareSize, squareSize)\r\n  }, [canvas, hue])\r\n}\r\n\r\nexport default usePaintSquare\r\n"]},"metadata":{},"sourceType":"module"}