{"ast":null,"code":"var _jsxFileName = \"c:\\\\Tutorials\\\\fabric-drawing\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { fabric } from \"fabric\"; // Or you can use:\n// const fabric = require(\"fabric\").fabric;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [gCanvas, setCanvas] = useState(null);\n  const canvasRef = React.useRef();\n  React.useEffect(() => {\n    //setCanvas(new fabric.Canvas(\"my-fabric-canvas\"));\n    const canvas = new fabric.Canvas(canvasRef);\n    setCanvas(gCanvas => canvas);\n    const rect = new fabric.Rect({\n      width: 50,\n      height: 50,\n      fill: \"blue\",\n      angle: 10,\n      top: 20,\n      left: 20\n    });\n    const textbox = new fabric.Textbox(\"Click on the Rectangle to move it.\", {\n      fontSize: 20,\n      left: 50,\n      top: 100,\n      width: 200\n    });\n    canvas.add(textbox);\n    canvas.add(rect); // UseEffect's cleanup function\n\n    return () => {\n      canvas.dispose();\n      setCanvas(null);\n    };\n  }, []);\n\n  const handleMouseClick = event => {\n    var pointer = gCanvas.getPointer(event);\n    console.log(pointer);\n  };\n\n  const handleMouseMove = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseMove: handleMouseMove,\n      onClick: handleMouseClick,\n      id: \"my-fabric-canvas\",\n      width: \"400\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"shnWpY9oR6gfOdJlgsNud8p2QPo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["c:/Tutorials/fabric-drawing/src/App.js"],"names":["React","useState","fabric","App","gCanvas","setCanvas","canvasRef","useRef","useEffect","canvas","Canvas","rect","Rect","width","height","fill","angle","top","left","textbox","Textbox","fontSize","add","dispose","handleMouseClick","event","pointer","getPointer","console","log","handleMouseMove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AAEA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBJ,QAAQ,CAAC,IAAD,CAArC;AACA,QAAMK,SAAS,GAAGN,KAAK,CAACO,MAAN,EAAlB;AACAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMC,MAAM,GAAG,IAAIP,MAAM,CAACQ,MAAX,CAAkBJ,SAAlB,CAAf;AACAD,IAAAA,SAAS,CAAED,OAAD,IAAaK,MAAd,CAAT;AACA,UAAME,IAAI,GAAG,IAAIT,MAAM,CAACU,IAAX,CAAgB;AAC3BC,MAAAA,KAAK,EAAE,EADoB;AAE3BC,MAAAA,MAAM,EAAE,EAFmB;AAG3BC,MAAAA,IAAI,EAAE,MAHqB;AAI3BC,MAAAA,KAAK,EAAE,EAJoB;AAK3BC,MAAAA,GAAG,EAAE,EALsB;AAM3BC,MAAAA,IAAI,EAAE;AANqB,KAAhB,CAAb;AAQA,UAAMC,OAAO,GAAG,IAAIjB,MAAM,CAACkB,OAAX,CAAmB,oCAAnB,EAAyD;AACvEC,MAAAA,QAAQ,EAAE,EAD6D;AAEvEH,MAAAA,IAAI,EAAE,EAFiE;AAGvED,MAAAA,GAAG,EAAE,GAHkE;AAIvEJ,MAAAA,KAAK,EAAE;AAJgE,KAAzD,CAAhB;AAMAJ,IAAAA,MAAM,CAACa,GAAP,CAAWH,OAAX;AACAV,IAAAA,MAAM,CAACa,GAAP,CAAWX,IAAX,EAnBoB,CAqBpB;;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACc,OAAP;AACAlB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAHD;AAID,GA1BD,EA0BG,EA1BH;;AA4BA,QAAMmB,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAIC,OAAO,GAAGtB,OAAO,CAACuB,UAAR,CAAmBF,KAAnB,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD;;AAIA,QAAMI,eAAe,GAAIL,KAAD,IAAW,CAAE,CAArC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AACE,MAAA,GAAG,EAAEnB,SADP;AAEE,MAAA,WAAW,EAAEwB,eAFf;AAGE,MAAA,OAAO,EAAEN,gBAHX;AAIE,MAAA,EAAE,EAAC,kBAJL;AAKE,MAAA,KAAK,EAAC,KALR;AAME,MAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjDD;;GAAMrB,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nimport { fabric } from \"fabric\";\n// Or you can use:\n// const fabric = require(\"fabric\").fabric;\n\nconst App = () => {\n  const [gCanvas, setCanvas] = useState(null);\n  const canvasRef = React.useRef();\n  React.useEffect(() => {\n    //setCanvas(new fabric.Canvas(\"my-fabric-canvas\"));\n    const canvas = new fabric.Canvas(canvasRef);\n    setCanvas((gCanvas) => canvas);\n    const rect = new fabric.Rect({\n      width: 50,\n      height: 50,\n      fill: \"blue\",\n      angle: 10,\n      top: 20,\n      left: 20,\n    });\n    const textbox = new fabric.Textbox(\"Click on the Rectangle to move it.\", {\n      fontSize: 20,\n      left: 50,\n      top: 100,\n      width: 200,\n    });\n    canvas.add(textbox);\n    canvas.add(rect);\n\n    // UseEffect's cleanup function\n    return () => {\n      canvas.dispose();\n      setCanvas(null);\n    };\n  }, []);\n\n  const handleMouseClick = (event) => {\n    var pointer = gCanvas.getPointer(event);\n    console.log(pointer);\n  };\n  const handleMouseMove = (event) => {};\n\n  return (\n    <div className=\"App\">\n      <canvas\n        ref={canvasRef}\n        onMouseMove={handleMouseMove}\n        onClick={handleMouseClick}\n        id=\"my-fabric-canvas\"\n        width=\"400\"\n        height=\"300\"\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}