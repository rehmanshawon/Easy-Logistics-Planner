{"ast":null,"code":"import _slicedToArray from\"C:/Tutorials/elp-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";export var parseHSL=function parseHSL(color){return color.replace(/[^\\d.,]/g,\"\").split(\",\").map(Number);};export var copyToClipboard=function copyToClipboard(input){var el=document.createElement(\"textarea\");el.value=input;el.setAttribute(\"readonly\",\"\");el.style.contain=\"strict\";el.style.position=\"absolute\";el.style.left=\"-9999px\";el.style.fontSize=\"12pt\";var selection=document.getSelection();var originalRange=false;if(selection.rangeCount>0){originalRange=selection.getRangeAt(0);}document.body.appendChild(el);el.select();el.selectionStart=0;el.selectionEnd=input.length;var success=false;try{success=document.execCommand(\"copy\");}catch(err){}document.body.removeChild(el);if(originalRange){selection.removeAllRanges();selection.addRange(originalRange);}return success;};export var convertRGBtoHSL=function convertRGBtoHSL(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}var l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[Math.round(h),Math.round(s*100),Math.round(l*100)];};var toHex=function toHex(c){var n=c.toString(16);return n.length===1?\"0\"+n.toUpperCase():n.toUpperCase();};export var convertHSLToRGB=function convertHSLToRGB(_ref){var _ref2=_slicedToArray(_ref,4),h=_ref2[0],s=_ref2[1],l=_ref2[2],a=_ref2[3];var r,g,b;h=h/360;s=s/100;l=l/100;if(s===0){r=g=b=l;}else{var hue2rgb=function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;};var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3);}var red=Math.round(r*255);var green=Math.round(g*255);var blue=Math.round(b*255);var rgb=\"rgb(\".concat(red,\", \").concat(green,\", \").concat(blue,\")\");var rgba=\"rgba(\".concat(red,\", \").concat(green,\", \").concat(blue,\", \").concat(a===1?1:a.toFixed(2),\")\");var hex=\"#\".concat(toHex(red)).concat(toHex(green)).concat(toHex(blue));var hexa=\"#\".concat(toHex(red)).concat(toHex(green)).concat(toHex(blue)).concat(toHex(Math.round(a*255)));return{rgb:rgb,rgba:rgba,hex:hex,hexa:hexa,red:red,green:green,blue:blue,a:a};};export var RGBAToHSLA=function RGBAToHSLA(rgba){var sep=rgba.indexOf(\",\")>-1?\",\":\" \";rgba=rgba.substr(5).split(\")\")[0].split(sep);// Strip the slash if using space-separated syntax\nif(rgba.indexOf(\"/\")>-1)rgba.splice(3,1);for(var R in rgba){var _r=rgba[R];if(_r.indexOf(\"%\")>-1){var p=_r.substr(0,_r.length-1)/100;if(R<3){rgba[R]=Math.round(p*255);}else{rgba[R]=p;}}}// Make r, g, and b fractions of 1\nvar r=rgba[0]/255,g=rgba[1]/255,b=rgba[2]/255,a=rgba[3];var cmin=Math.min(r,g,b),cmax=Math.max(r,g,b),delta=cmax-cmin,h=0,s=0,l=0;// Calculate hue\n// No difference\nif(delta===0)h=0;// Red is max\nelse if(cmax===r)h=(g-b)/delta%6;// Green is max\nelse if(cmax===g)h=(b-r)/delta+2;// Blue is max\nelse h=(r-g)/delta+4;h=Math.round(h*60);// Make negative hues positive behind 360Â°\nif(h<0)h+=360;// Calculate lightness\nl=(cmax+cmin)/2;// Calculate saturation\ns=delta===0?0:delta/(1-Math.abs(2*l-1));// Multiply l and s by 100\ns=+(s*100).toFixed(1);l=+(l*100).toFixed(1);return\"hsla(\"+h+\",\"+s+\"%,\"+l+\"%,\"+a+\")\";// console.log(rgba[0], rgba[1], rgba[2], a);\n// Rest of RGB-to-HSL logic\n//...\n};","map":{"version":3,"sources":["C:/Tutorials/elp-app/src/components/Picker/utils.js"],"names":["parseHSL","color","replace","split","map","Number","copyToClipboard","input","el","document","createElement","value","setAttribute","style","contain","position","left","fontSize","selection","getSelection","originalRange","rangeCount","getRangeAt","body","appendChild","select","selectionStart","selectionEnd","length","success","execCommand","err","removeChild","removeAllRanges","addRange","convertRGBtoHSL","rgb","r","g","b","min","Math","max","delta","h","s","l","round","toHex","c","n","toString","toUpperCase","convertHSLToRGB","a","hue2rgb","p","q","t","red","green","blue","rgba","toFixed","hex","hexa","RGBAToHSLA","sep","indexOf","substr","splice","R","cmin","cmax","abs"],"mappings":"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","sourcesContent":["export const parseHSL = (color) =>\n  color\n    .replace(/[^\\d.,]/g, \"\")\n    .split(\",\")\n    .map(Number);\n\nexport const copyToClipboard = (input) => {\n  const el = document.createElement(\"textarea\");\n  el.value = input;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.contain = \"strict\";\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  el.style.fontSize = \"12pt\";\n\n  const selection = document.getSelection();\n  let originalRange = false;\n  if (selection.rangeCount > 0) {\n    originalRange = selection.getRangeAt(0);\n  }\n\n  document.body.appendChild(el);\n  el.select();\n  el.selectionStart = 0;\n  el.selectionEnd = input.length;\n\n  let success = false;\n  try {\n    success = document.execCommand(\"copy\");\n  } catch (err) {}\n\n  document.body.removeChild(el);\n\n  if (originalRange) {\n    selection.removeAllRanges();\n    selection.addRange(originalRange);\n  }\n\n  return success;\n};\n\nexport const convertRGBtoHSL = (rgb) => {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const delta = max - min;\n  let h;\n  let s;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  const l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [Math.round(h), Math.round(s * 100), Math.round(l * 100)];\n};\n\nconst toHex = (c) => {\n  const n = c.toString(16);\n  return n.length === 1 ? \"0\" + n.toUpperCase() : n.toUpperCase();\n};\n\nexport const convertHSLToRGB = ([h, s, l, a]) => {\n  var r, g, b;\n  h = h / 360;\n  s = s / 100;\n  l = l / 100;\n\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    var hue2rgb = function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  const red = Math.round(r * 255);\n  const green = Math.round(g * 255);\n  const blue = Math.round(b * 255);\n\n  const rgb = `rgb(${red}, ${green}, ${blue})`;\n  const rgba = `rgba(${red}, ${green}, ${blue}, ${a === 1 ? 1 : a.toFixed(2)})`;\n  const hex = `#${toHex(red)}${toHex(green)}${toHex(blue)}`;\n  const hexa = `#${toHex(red)}${toHex(green)}${toHex(blue)}${toHex(\n    Math.round(a * 255)\n  )}`;\n\n  return { rgb, rgba, hex, hexa, red, green, blue, a };\n};\n\nexport const RGBAToHSLA = (rgba) => {\n  let sep = rgba.indexOf(\",\") > -1 ? \",\" : \" \";\n  rgba = rgba.substr(5).split(\")\")[0].split(sep);\n\n  // Strip the slash if using space-separated syntax\n  if (rgba.indexOf(\"/\") > -1) rgba.splice(3, 1);\n\n  for (let R in rgba) {\n    let r = rgba[R];\n    if (r.indexOf(\"%\") > -1) {\n      let p = r.substr(0, r.length - 1) / 100;\n\n      if (R < 3) {\n        rgba[R] = Math.round(p * 255);\n      } else {\n        rgba[R] = p;\n      }\n    }\n  }\n\n  // Make r, g, and b fractions of 1\n  let r = rgba[0] / 255,\n    g = rgba[1] / 255,\n    b = rgba[2] / 255,\n    a = rgba[3];\n  let cmin = Math.min(r, g, b),\n    cmax = Math.max(r, g, b),\n    delta = cmax - cmin,\n    h = 0,\n    s = 0,\n    l = 0;\n  // Calculate hue\n  // No difference\n  if (delta === 0) h = 0;\n  // Red is max\n  else if (cmax === r) h = ((g - b) / delta) % 6;\n  // Green is max\n  else if (cmax === g) h = (b - r) / delta + 2;\n  // Blue is max\n  else h = (r - g) / delta + 4;\n\n  h = Math.round(h * 60);\n\n  // Make negative hues positive behind 360Â°\n  if (h < 0) h += 360;\n  // Calculate lightness\n  l = (cmax + cmin) / 2;\n\n  // Calculate saturation\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n  // Multiply l and s by 100\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1);\n\n  return \"hsla(\" + h + \",\" + s + \"%,\" + l + \"%,\" + a + \")\";\n  // console.log(rgba[0], rgba[1], rgba[2], a);\n  // Rest of RGB-to-HSL logic\n  //...\n};\n"]},"metadata":{},"sourceType":"module"}