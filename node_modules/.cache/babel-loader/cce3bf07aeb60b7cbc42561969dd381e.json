{"ast":null,"code":"var _jsxFileName = \"c:\\\\Tutorials\\\\fabric-drawing\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { fabric } from \"fabric\"; // Or you can use:\n// const fabric = require(\"fabric\").fabric;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const canvasRef = useRef(); //const [gCanvas, setCanvas] = useState(null);\n  //const canvas = new fabric.Canvas(\"my-fabric-canvas\");\n\n  let canvas = null;\n  React.useEffect(() => {\n    //const canvas = canvasRef.current;\n    //setCanvas(new fabric.Canvas(\"my-fabric-canvas\"));\n    canvas = new fabric.Canvas(\"my-fabric-canvas\"); //setCanvas((gCanvas) => canvas);\n\n    const rect = new fabric.Rect({\n      width: 50,\n      height: 50,\n      fill: \"blue\",\n      angle: 10,\n      top: 20,\n      left: 20\n    });\n    const textbox = new fabric.Textbox(\"Click on the Rectangle to move it.\", {\n      fontSize: 20,\n      left: 50,\n      top: 100,\n      width: 200\n    });\n    canvas.add(textbox);\n    canvas.add(rect); // UseEffect's cleanup function\n\n    return () => {\n      canvas.dispose(); //setCanvas(null);\n    };\n  }, []);\n\n  const handleMouseClick = event => {\n    var pointer = canvas.getPointer(event);\n    console.log(pointer);\n  };\n\n  const handleMouseMove = event => {\n    var pointer = canvas.getPointer(event);\n    console.log(pointer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: handleMouseMove,\n    onClick: handleMouseClick,\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"my-fabric-canvas\",\n      width: \"400\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["c:/Tutorials/fabric-drawing/src/App.js"],"names":["React","useRef","useState","fabric","App","canvasRef","canvas","useEffect","Canvas","rect","Rect","width","height","fill","angle","top","left","textbox","Textbox","fontSize","add","dispose","handleMouseClick","event","pointer","getPointer","console","log","handleMouseMove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,cAAP;AAEA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAGJ,MAAM,EAAxB,CADgB,CAEhB;AACA;;AACA,MAAIK,MAAM,GAAG,IAAb;AACAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB;AACA;AACAD,IAAAA,MAAM,GAAG,IAAIH,MAAM,CAACK,MAAX,CAAkB,kBAAlB,CAAT,CAHoB,CAIpB;;AACA,UAAMC,IAAI,GAAG,IAAIN,MAAM,CAACO,IAAX,CAAgB;AAC3BC,MAAAA,KAAK,EAAE,EADoB;AAE3BC,MAAAA,MAAM,EAAE,EAFmB;AAG3BC,MAAAA,IAAI,EAAE,MAHqB;AAI3BC,MAAAA,KAAK,EAAE,EAJoB;AAK3BC,MAAAA,GAAG,EAAE,EALsB;AAM3BC,MAAAA,IAAI,EAAE;AANqB,KAAhB,CAAb;AAQA,UAAMC,OAAO,GAAG,IAAId,MAAM,CAACe,OAAX,CAAmB,oCAAnB,EAAyD;AACvEC,MAAAA,QAAQ,EAAE,EAD6D;AAEvEH,MAAAA,IAAI,EAAE,EAFiE;AAGvED,MAAAA,GAAG,EAAE,GAHkE;AAIvEJ,MAAAA,KAAK,EAAE;AAJgE,KAAzD,CAAhB;AAMAL,IAAAA,MAAM,CAACc,GAAP,CAAWH,OAAX;AACAX,IAAAA,MAAM,CAACc,GAAP,CAAWX,IAAX,EApBoB,CAsBpB;;AACA,WAAO,MAAM;AACXH,MAAAA,MAAM,CAACe,OAAP,GADW,CAEX;AACD,KAHD;AAID,GA3BD,EA2BG,EA3BH;;AA6BA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAIC,OAAO,GAAGlB,MAAM,CAACmB,UAAP,CAAkBF,KAAlB,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD;;AAIA,QAAMI,eAAe,GAAIL,KAAD,IAAW;AACjC,QAAIC,OAAO,GAAGlB,MAAM,CAACmB,UAAP,CAAkBF,KAAlB,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,WAAW,EAAEI,eADf;AAEE,IAAA,OAAO,EAAEN,gBAFX;AAGE,IAAA,SAAS,EAAC,KAHZ;AAAA,2BAKE;AAAQ,MAAA,GAAG,EAAEjB,SAAb;AAAwB,MAAA,EAAE,EAAC,kBAA3B;AAA8C,MAAA,KAAK,EAAC,KAApD;AAA0D,MAAA,MAAM,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApDD;;GAAMD,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./styles.css\";\n\nimport { fabric } from \"fabric\";\n// Or you can use:\n// const fabric = require(\"fabric\").fabric;\n\nconst App = () => {\n  const canvasRef = useRef();\n  //const [gCanvas, setCanvas] = useState(null);\n  //const canvas = new fabric.Canvas(\"my-fabric-canvas\");\n  let canvas = null;\n  React.useEffect(() => {\n    //const canvas = canvasRef.current;\n    //setCanvas(new fabric.Canvas(\"my-fabric-canvas\"));\n    canvas = new fabric.Canvas(\"my-fabric-canvas\");\n    //setCanvas((gCanvas) => canvas);\n    const rect = new fabric.Rect({\n      width: 50,\n      height: 50,\n      fill: \"blue\",\n      angle: 10,\n      top: 20,\n      left: 20,\n    });\n    const textbox = new fabric.Textbox(\"Click on the Rectangle to move it.\", {\n      fontSize: 20,\n      left: 50,\n      top: 100,\n      width: 200,\n    });\n    canvas.add(textbox);\n    canvas.add(rect);\n\n    // UseEffect's cleanup function\n    return () => {\n      canvas.dispose();\n      //setCanvas(null);\n    };\n  }, []);\n\n  const handleMouseClick = (event) => {\n    var pointer = canvas.getPointer(event);\n    console.log(pointer);\n  };\n  const handleMouseMove = (event) => {\n    var pointer = canvas.getPointer(event);\n    console.log(pointer);\n  };\n\n  return (\n    <div\n      onMouseMove={handleMouseMove}\n      onClick={handleMouseClick}\n      className=\"App\"\n    >\n      <canvas ref={canvasRef} id=\"my-fabric-canvas\" width=\"400\" height=\"300\" />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}