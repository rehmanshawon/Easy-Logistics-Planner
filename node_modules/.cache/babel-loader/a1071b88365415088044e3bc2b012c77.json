{"ast":null,"code":"var _jsxFileName = \"c:\\\\Tutorials\\\\fabric-drawing\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"rc-color-picker/assets/index.css\";\nimport React, { useRef, useState, useCallback } from \"react\"; ////import { PopoverPicker } from \"./PopoverPicker\";\n\nimport { fabric } from \"fabric\";\nimport \"./styles.css\";\nimport styles from \"./rightMenu.module.css\";\nimport tbStyles from \"./toolbar.module.css\"; //import { RgbaColorPicker } from \"react-colorful\";\n\nimport ColorPicker from \"rc-color-picker\"; //import \"react-colorful/dist/index.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  version: \"3.6.3\",\n  objects: [{\n    type: \"rect\",\n    version: \"3.6.3\",\n    originX: \"left\",\n    originY: \"top\",\n    left: 0,\n    top: 0,\n    width: 1,\n    height: 1,\n    fill: \"black\",\n    stroke: null,\n    strokeWidth: 1,\n    strokeDashArray: null,\n    strokeLineCap: \"butt\",\n    strokeDashOffset: 0,\n    strokeLineJoin: \"miter\",\n    strokeMiterLimit: 4,\n    scaleX: 1,\n    scaleY: 1,\n    angle: 0,\n    flipX: false,\n    flipY: false,\n    opacity: 1,\n    shadow: null,\n    visible: false,\n    clipTo: null,\n    backgroundColor: \"\",\n    fillRule: \"nonzero\",\n    paintFirst: \"fill\",\n    globalCompositeOperation: \"source-over\",\n    transformMatrix: null,\n    skewX: 0,\n    skewY: 0,\n    rx: 0,\n    ry: 0\n  }]\n};\nconst fontCheck = new Set([// Windows 10\n\"Arial\", \"Arial Black\", \"Bahnschrift\", \"Calibri\", \"Cambria\", \"Cambria Math\", \"Candara\", \"Comic Sans MS\", \"Consolas\", \"Constantia\", \"Corbel\", \"Courier New\", \"Ebrima\", \"Franklin Gothic Medium\", \"Gabriola\", \"Gadugi\", \"Georgia\", \"HoloLens MDL2 Assets\", \"Impact\", \"Ink Free\", \"Javanese Text\", \"Leelawadee UI\", \"Lucida Console\", \"Lucida Sans Unicode\", \"Malgun Gothic\", \"Marlett\", \"Microsoft Himalaya\", \"Microsoft JhengHei\", \"Microsoft New Tai Lue\", \"Microsoft PhagsPa\", \"Microsoft Sans Serif\", \"Microsoft Tai Le\", \"Microsoft YaHei\", \"Microsoft Yi Baiti\", \"MingLiU-ExtB\", \"Mongolian Baiti\", \"MS Gothic\", \"MV Boli\", \"Myanmar Text\", \"Nirmala UI\", \"Palatino Linotype\", \"Segoe MDL2 Assets\", \"Segoe Print\", \"Segoe Script\", \"Segoe UI\", \"Segoe UI Historic\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"SimSun\", \"Sitka\", \"Sylfaen\", \"Symbol\", \"Tahoma\", \"Times New Roman\", \"Trebuchet MS\", \"Verdana\", \"Webdings\", \"Wingdings\", \"Yu Gothic\", // macOS\n\"American Typewriter\", \"Andale Mono\", \"Arial\", \"Arial Black\", \"Arial Narrow\", \"Arial Rounded MT Bold\", \"Arial Unicode MS\", \"Avenir\", \"Avenir Next\", \"Avenir Next Condensed\", \"Baskerville\", \"Big Caslon\", \"Bodoni 72\", \"Bodoni 72 Oldstyle\", \"Bodoni 72 Smallcaps\", \"Bradley Hand\", \"Brush Script MT\", \"Chalkboard\", \"Chalkboard SE\", \"Chalkduster\", \"Charter\", \"Cochin\", \"Comic Sans MS\", \"Copperplate\", \"Courier\", \"Courier New\", \"Didot\", \"DIN Alternate\", \"DIN Condensed\", \"Futura\", \"Geneva\", \"Georgia\", \"Gill Sans\", \"Helvetica\", \"Helvetica Neue\", \"Herculanum\", \"Hoefler Text\", \"Impact\", \"Lucida Grande\", \"Luminari\", \"Marker Felt\", \"Menlo\", \"Microsoft Sans Serif\", \"Monaco\", \"Noteworthy\", \"Optima\", \"Palatino\", \"Papyrus\", \"Phosphate\", \"Rockwell\", \"Savoye LET\", \"SignPainter\", \"Skia\", \"Snell Roundhand\", \"Tahoma\", \"Times\", \"Times New Roman\", \"Trattatello\", \"Trebuchet MS\", \"Verdana\", \"Zapfino\"].sort()); // Or you can use:\n// const fabric = require(\"fabric\").fabric;\n//const canvas = new fabric.Canvas(\"my-fabric-canvas\");\n\nconst App = () => {\n  _s();\n\n  const canvasRef = useRef();\n  const [canvas, setCanvas] = useState();\n  const [canvasHistory, setCanvasHistory] = useState([initialState]); //const [canvasHistory, setCanvasHistory] = useState([]);\n\n  const [canvasState, setCanvasState] = useState(initialState); //const [canvasState, setCanvasState] = useState();\n\n  const [canvasTool, setCanvasTool] = useState(\"select\");\n  const [strokeWidth, setStrokeWidth] = useState(1);\n  const [stroke, setStrokeColor] = useState(\"black\");\n  const [fill, setFillColor] = useState(null);\n  const [dashSize, setDashSize] = useState(0);\n  const [gapSize, setGapSize] = useState(0);\n  const [opacity, setOpacity] = useState(100);\n  const [snap, setSnap] = useState(false);\n  const [font, setFont] = useState(\"\");\n  const [fontSize, setFontSize] = useState(30);\n  const [fontWeight, setFontWeight] = useState(\"normal\");\n  const [fontStyle, setFontStyle] = useState(\"regular\");\n  const [textHighlight, setHighlight] = useState(\"yellow\");\n  var newShape = true;\n  var Rectangle = null;\n  var ellipse = null;\n  var circle = null;\n  var line = null;\n  var triangle = null;\n  var origX, origY, deltaX, deltaY;\n  var x = 0;\n  var y = 0;\n  var roof = null;\n  var roofPoints = [];\n  var lines = [];\n  var lineCounter = 0;\n  var drawingObject = {};\n  drawingObject.type = \"\";\n  drawingObject.background = \"\";\n  drawingObject.border = \"\";\n  var pgPoints = [];\n  var polyline = null;\n  var polygon = null;\n\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  const initPolyline = () => {\n    if (drawingObject.type == \"roof\") {\n      drawingObject.type = \"\";\n      lines.forEach(function (value, index, ar) {\n        canvas.remove(value);\n      }); //canvas.remove(lines[lineCounter - 1]);\n\n      roof = makeRoof(roofPoints);\n      canvas.add(roof);\n      canvas.renderAll();\n    } else {\n      drawingObject.type = \"roof\"; // roof type\n    }\n  };\n\n  const onObjectModified = useCallback(e => {\n    const newCanvasState = e.target.canvas.toJSON();\n    setCanvasState(newCanvasState); // Limit history depth\n\n    setCanvasHistory(history => [...history, newCanvasState].slice(-32));\n  }, [setCanvasState, setCanvasHistory]);\n  React.useEffect(() => {\n    const fontAvailable = new Set();\n\n    for (const font of fontCheck.values()) {\n      if (document.fonts.check(`12px \"${font}\"`)) {\n        fontAvailable.add(font);\n        var x = document.getElementById(\"fonts\");\n        var option = document.createElement(\"option\");\n        option.text = font;\n        x.add(option);\n      } //console.log(\"Available Fonts:\", [...fontAvailable.values()]);\n\n    }\n  }, []);\n  React.useEffect(() => {}, [canvasState]);\n  React.useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current);\n    canvas.loadFromJSON(canvasState); //canvas.on(\"object:added\", onObjectModified);\n\n    canvas.on(\"object:modified\", onObjectModified);\n    canvas.on(\"mouse:up\", function (e) {\n      this.setViewportTransform(this.viewportTransform);\n      this.isDragging = false;\n      this.selection = true;\n\n      if (canvas.isDrawingMode) {\n        canvas.renderAll();\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n        setCanvasHistory(history => [...history, newCanvasState].slice(-32)); // }\n      }\n\n      if (canvasTool === \"text\") {\n        var pointer = canvas.getPointer(e);\n        var text = new fabric.IText(\"click to edit\", {\n          left: pointer.x,\n          top: pointer.y,\n          fontFamily: font,\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          stroke: stroke,\n          strokeWidth: strokeWidth\n        }); //console.log(text);\n\n        canvas.add(text);\n        canvas.setActiveObject(text);\n        canvas.renderAll(); // Save the canvas to State variable\n\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n        setCanvasHistory(history => [...history, newCanvasState].slice(-32));\n      }\n\n      if (canvasTool === \"line\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          var points = [pointer.x, pointer.y, pointer.x, pointer.y];\n          line = new fabric.Line(points, {\n            strokeWidth: strokeWidth,\n            fill: fill,\n            stroke: stroke,\n            originX: \"center\",\n            originY: \"center\"\n          });\n          canvas.add(line);\n          newShape = false;\n        } else {\n          pointer = canvas.getPointer(e);\n          line.set({\n            x2: pointer.x,\n            y2: pointer.y\n          });\n          canvas.setActiveObject(line);\n          canvas.renderAll();\n          newShape = true; // Save the canvas to State variable\n\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n          setCanvasHistory(history => [...history, newCanvasState].slice(-32));\n        }\n      }\n\n      if (canvasTool === \"rect\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          origX = pointer.x;\n          origY = pointer.y;\n          Rectangle = new fabric.Rect({\n            left: origX,\n            top: origY,\n            fill: fill,\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n            strokeDashArray: [dashSize, gapSize],\n            opacity: opacity\n          }); //console.log(Rectangle);\n\n          canvas.add(Rectangle);\n          setCanvas(canvas); //canvas.renderAll();\n          //setRect((prevState) => (prevState = false));\n\n          newShape = false; //setNewRectangle(false);\n        } else {\n          pointer = canvas.getPointer(e);\n\n          if (origX > pointer.x) {\n            Rectangle.set({\n              left: Math.abs(pointer.x)\n            });\n          }\n\n          if (origY > pointer.y) {\n            Rectangle.set({\n              top: Math.abs(pointer.y)\n            });\n          }\n\n          Rectangle.set({\n            width: Math.abs(origX - pointer.x)\n          });\n          Rectangle.set({\n            height: Math.abs(origY - pointer.y)\n          });\n          canvas.setActiveObject(Rectangle); //setNewRectangle(true);\n\n          newShape = true; // Render the Canvas\n\n          canvas.renderAll(); // Save the canvas to State variable\n\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n          setCanvasHistory(history => [...history, newCanvasState].slice(-32));\n        }\n      }\n\n      if (canvasTool === \"circle\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          origX = pointer.x;\n          origY = pointer.y;\n          circle = new fabric.Circle({\n            left: origX,\n            top: origY,\n            originX: \"left\",\n            originY: \"top\",\n            radius: pointer.x - origX,\n            angle: 0,\n            fill: fill,\n            stroke: stroke,\n            strokeWidth: strokeWidth\n          });\n          canvas.add(circle);\n          newShape = false;\n        } else {\n          pointer = canvas.getPointer(e);\n          var radius = Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) / 2;\n\n          if (radius > circle.strokeWidth) {\n            radius -= circle.strokeWidth / 2;\n          }\n\n          circle.set({\n            radius: radius\n          });\n\n          if (origX > pointer.x) {\n            circle.set({\n              originX: \"right\"\n            });\n          } else {\n            circle.set({\n              originX: \"left\"\n            });\n          }\n\n          if (origY > pointer.y) {\n            circle.set({\n              originY: \"bottom\"\n            });\n          } else {\n            circle.set({\n              originY: \"top\"\n            });\n          }\n\n          canvas.setActiveObject(circle); //setNewRectangle(true);\n\n          newShape = true; // Render the Canvas\n\n          canvas.renderAll(); // Save the canvas to State variable\n\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n          setCanvasHistory(history => [...history, newCanvasState].slice(-32));\n        }\n      }\n\n      if (canvasTool === \"ellipse\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          origX = pointer.x;\n          origY = pointer.y;\n          ellipse = new fabric.Ellipse({\n            left: origX,\n            top: origY,\n            originX: \"left\",\n            originY: \"top\",\n            rx: pointer.x - origX,\n            ry: pointer.y - origY,\n            angle: 0,\n            fill: fill,\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n            type: \"ellipse\" //uuid: generateUUID(),\n\n          });\n          canvas.add(ellipse);\n          newShape = false; //activeObj = ellipse;\n        } else {\n          pointer = canvas.getPointer(e);\n          var rx = Math.abs(origX - pointer.x) / 2;\n          var ry = Math.abs(origY - pointer.y) / 2;\n\n          if (rx > ellipse.strokeWidth) {\n            rx -= ellipse.strokeWidth / 2;\n          }\n\n          if (ry > ellipse.strokeWidth) {\n            ry -= ellipse.strokeWidth / 2;\n          }\n\n          ellipse.set({\n            rx: rx,\n            ry: ry\n          });\n\n          if (origX > pointer.x) {\n            ellipse.set({\n              originX: \"right\"\n            });\n          } else {\n            ellipse.set({\n              originX: \"left\"\n            });\n          }\n\n          if (origY > pointer.y) {\n            ellipse.set({\n              originY: \"bottom\"\n            });\n          } else {\n            ellipse.set({\n              originY: \"top\"\n            });\n          }\n\n          canvas.setActiveObject(ellipse); //setNewRectangle(true);\n\n          newShape = true; // Render the Canvas\n\n          canvas.renderAll(); // Save the canvas to State variable\n\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n          setCanvasHistory(history => [...history, newCanvasState].slice(-32));\n        }\n      } //check if user clicked an object\n\n\n      if (e.target) {\n        var activeShape = canvas.getActiveObject();\n\n        if (activeShape) {\n          setFillColor(activeShape.fill);\n          setStrokeColor(activeShape.stroke);\n          setStrokeWidth(activeShape.strokeWidth);\n          setOpacity(activeShape.opacity);\n          setFont(activeShape.fontFamily);\n          setFontSize(activeShape.fontSize);\n          setFontWeight(activeShape.fontWeight);\n          setFontStyle(activeShape.fontStyle);\n        }\n      }\n    });\n    canvas.on(\"mouse:wheel\", function (opt) {\n      var delta = opt.e.deltaY;\n      var zoom = canvas.getZoom();\n      zoom *= 0.999 ** delta;\n      if (zoom > 20) zoom = 20;\n      if (zoom < 0.01) zoom = 0.01;\n      canvas.zoomToPoint({\n        x: opt.e.offsetX,\n        y: opt.e.offsetY\n      }, zoom);\n      opt.e.preventDefault();\n      opt.e.stopPropagation();\n      var vpt = this.viewportTransform;\n\n      if (zoom < 400 / 1000) {\n        vpt[4] = 200 - 1000 * zoom / 2;\n        vpt[5] = 200 - 1000 * zoom / 2;\n      } else {\n        if (vpt[4] >= 0) {\n          vpt[4] = 0;\n        } else if (vpt[4] < canvas.getWidth() - 1000 * zoom) {\n          vpt[4] = canvas.getWidth() - 1000 * zoom;\n        }\n\n        if (vpt[5] >= 0) {\n          vpt[5] = 0;\n        } else if (vpt[5] < canvas.getHeight() - 1000 * zoom) {\n          vpt[5] = canvas.getHeight() - 1000 * zoom;\n        }\n      }\n    });\n    canvas.on(\"mouse:down\", function (opt) {\n      var evt = opt.e;\n\n      if (evt.altKey === true) {\n        this.isDragging = true;\n        this.selection = false;\n        this.lastPosX = evt.clientX;\n        this.lastPosY = evt.clientY;\n      }\n    });\n    canvas.on(\"mouse:move\", function (opt) {\n      if (this.isDragging) {\n        var e = opt.e;\n        var vpt = this.viewportTransform;\n        vpt[4] += e.clientX - this.lastPosX;\n        vpt[5] += e.clientY - this.lastPosY;\n        this.requestRenderAll();\n        this.lastPosX = e.clientX;\n        this.lastPosY = e.clientY;\n      }\n\n      if (newShape === true && canvasTool !== \"pen\") return; //canvas.renderAll();\n\n      if (canvasTool === \"rect\") {\n        var pointer = canvas.getPointer(opt);\n\n        if (origX > pointer.x) {\n          Rectangle.set({\n            left: Math.abs(pointer.x)\n          });\n        }\n\n        if (origY > pointer.y) {\n          Rectangle.set({\n            top: Math.abs(pointer.y)\n          });\n        }\n\n        Rectangle.set({\n          width: Math.abs(origX - pointer.x)\n        });\n        Rectangle.set({\n          height: Math.abs(origY - pointer.y)\n        });\n        canvas.renderAll();\n      }\n\n      if (canvasTool === \"line\") {\n        pointer = canvas.getPointer(opt);\n        line.set({\n          x2: pointer.x,\n          y2: pointer.y\n        });\n        canvas.renderAll();\n      }\n\n      if (canvasTool === \"circle\") {\n        pointer = canvas.getPointer(opt);\n        var radius = Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) / 2;\n\n        if (radius > circle.strokeWidth) {\n          radius -= circle.strokeWidth / 2;\n        }\n\n        circle.set({\n          radius: radius\n        });\n\n        if (origX > pointer.x) {\n          circle.set({\n            originX: \"right\"\n          });\n        } else {\n          circle.set({\n            originX: \"left\"\n          });\n        }\n\n        if (origY > pointer.y) {\n          circle.set({\n            originY: \"bottom\"\n          });\n        } else {\n          circle.set({\n            originY: \"top\"\n          });\n        } // Render the Canvas\n\n\n        canvas.renderAll();\n      }\n\n      if (canvasTool === \"ellipse\") {\n        pointer = canvas.getPointer(opt);\n        var rx = Math.abs(origX - pointer.x) / 2;\n        var ry = Math.abs(origY - pointer.y) / 2;\n\n        if (rx > ellipse.strokeWidth) {\n          rx -= ellipse.strokeWidth / 2;\n        }\n\n        if (ry > ellipse.strokeWidth) {\n          ry -= ellipse.strokeWidth / 2;\n        }\n\n        ellipse.set({\n          rx: rx,\n          ry: ry\n        });\n\n        if (origX > pointer.x) {\n          ellipse.set({\n            originX: \"right\"\n          });\n        } else {\n          ellipse.set({\n            originX: \"left\"\n          });\n        }\n\n        if (origY > pointer.y) {\n          ellipse.set({\n            originY: \"bottom\"\n          });\n        } else {\n          ellipse.set({\n            originY: \"top\"\n          });\n        } // Render the Canvas\n\n\n        canvas.renderAll();\n      }\n\n      if (canvasTool === \"polygon\") {\n        canvas.renderAll();\n      }\n    });\n    setCanvas(canvas);\n    return () => {\n      canvas.dispose();\n    };\n  }, [canvasRef, canvasTool, onObjectModified, setCanvas]);\n  const moveHistory = useCallback(step => {\n    const currentStateIndex = canvasHistory.indexOf(canvasState);\n    const prevState = canvasHistory[currentStateIndex + step];\n    canvas.loadFromJSON(prevState);\n    setCanvasState(prevState);\n  }, [canvas, canvasState, canvasHistory, setCanvasState]);\n  const onUndo = useCallback(() => moveHistory(-1), [moveHistory]);\n  const onRedo = useCallback(() => moveHistory(1), [moveHistory]);\n\n  var _FabricCalcArrowAngle = function (x1, y1, x2, y2) {\n    var angle = 0,\n        x,\n        y;\n    x = x2 - x1;\n    y = y2 - y1;\n\n    if (x === 0) {\n      angle = y === 0 ? 0 : y > 0 ? Math.PI / 2 : Math.PI * 3 / 2;\n    } else if (y === 0) {\n      angle = x > 0 ? 0 : Math.PI;\n    } else {\n      angle = x < 0 ? Math.atan(y / x) + Math.PI : y < 0 ? Math.atan(y / x) + 2 * Math.PI : Math.atan(y / x);\n    }\n\n    return angle * 180 / Math.PI + 90;\n  };\n  /*\n  const handleMouseClick = (event) => {\n    if (canvasTool === \"select\") {\n    }\n    if (canvasTool === \"text\") {\n      var pointer = canvas.getPointer(event);\n      var text = new fabric.IText(\"click to edit\", {\n        left: pointer.x,\n        top: pointer.y,\n        fontFamily: font,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n      });\n      //console.log(text);\n      canvas.add(text);\n      canvas.setActiveObject(text);\n      canvas.renderAll();\n      // Save the canvas to State variable\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Save state to History and Limit history depth to 32\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n    }\n    if (canvasTool === \"line\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        var points = [pointer.x, pointer.y, pointer.x, pointer.y];\n        line = new fabric.Line(points, {\n          strokeWidth: strokeWidth,\n          fill: fill,\n          stroke: stroke,\n          originX: \"center\",\n          originY: \"center\",\n        });\n        canvas.add(line);\n        newShape = false;\n      } else {\n        pointer = canvas.getPointer(event);\n        line.set({ x2: pointer.x, y2: pointer.y });\n         canvas.setActiveObject(line);\n        canvas.renderAll();\n        newShape = true;\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"arrow\") {\n      if (newShape) {\n        newShape = false;\n        pointer = canvas.getPointer(event);\n        points = [pointer.x, pointer.y, pointer.x, pointer.y];\n        line = new fabric.Line(points, {\n          strokeWidth: strokeWidth,\n          fill: fill,\n          stroke: stroke,\n          originX: \"center\",\n          originY: \"center\",\n          //id: \"arrow_line\",\n          //uuid: generateUUID(),\n          type: \"arrow\",\n        });\n        var centerX = (line.x1 + line.x2) / 2;\n        var centerY = (line.y1 + line.y2) / 2;\n        deltaX = line.left - centerX;\n        deltaY = line.top - centerY;\n        triangle = new fabric.Triangle({\n          left: line.get(\"x1\") + deltaX,\n          top: line.get(\"y1\") + deltaY,\n          originX: \"center\",\n          originY: \"center\",\n          selectable: false,\n          pointType: \"arrow_start\",\n          angle: -45,\n          width: 20,\n          height: 20,\n          fill: fill,\n          stroke: stroke,\n          //id: \"arrow_triangle\",\n          //uuid: line.uuid,\n        });\n        canvas.add(line, triangle);\n      } else {\n        pointer = canvas.getPointer(event);\n        line.set({\n          x2: pointer.x,\n          y2: pointer.y,\n        });\n        triangle.set({\n          left: pointer.x + deltaX,\n          top: pointer.y + deltaY,\n          angle: _FabricCalcArrowAngle(line.x1, line.y1, line.x2, line.y2),\n        });\n        var group = new window.fabric.Group([line, triangle], {\n          borderColor: \"black\",\n          cornerColor: \"green\",\n          lockScalingFlip: true,\n          typeOfGroup: \"arrow\",\n          userLevel: 1,\n          name: \"my_ArrowGroup\",\n          //uuid : activeObj.uuid,\n          type: \"arrow\",\n        });\n        canvas.remove(line, triangle); // removing old object\n        //activeObj = group;\n        canvas.add(group);\n        canvas.setActiveObject(group);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n         // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"polyline\") {\n      if (drawingObject.type == \"roof\") {\n        canvas.selection = false;\n        setStartingPoint(event); // set x,y\n        roofPoints.push(new Point(x, y));\n        var points = [x, y, x, y];\n        lines.push(\n          new fabric.Line(points, {\n            strokeWidth: strokeWidth,\n            selectable: false,\n            stroke: stroke,\n          })\n            .set(\"originX\", x)\n            .set(\"originY\", y)\n        );\n        canvas.add(lines[lineCounter]);\n        lineCounter++;\n        //canvas.on(\"mouse:up\", function (options) {\n        //  canvas.selection = true;\n        //});\n      }\n    }\n    if (canvasTool === \"rect\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        origX = pointer.x;\n        origY = pointer.y;\n        Rectangle = new fabric.Rect({\n          left: origX,\n          top: origY,\n          fill: fill,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n          strokeDashArray: [dashSize, gapSize],\n          opacity: opacity,\n        });\n        //console.log(Rectangle);\n        canvas.add(Rectangle);\n        setCanvas(canvas);\n        //canvas.renderAll();\n        //setRect((prevState) => (prevState = false));\n        newShape = false;\n        //setNewRectangle(false);\n      } else {\n        pointer = canvas.getPointer(event);\n        if (origX > pointer.x) {\n          Rectangle.set({ left: Math.abs(pointer.x) });\n        }\n        if (origY > pointer.y) {\n          Rectangle.set({ top: Math.abs(pointer.y) });\n        }\n        Rectangle.set({ width: Math.abs(origX - pointer.x) });\n        Rectangle.set({ height: Math.abs(origY - pointer.y) });\n        canvas.setActiveObject(Rectangle);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n         // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"circle\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        origX = pointer.x;\n        origY = pointer.y;\n        circle = new fabric.Circle({\n          left: origX,\n          top: origY,\n          originX: \"left\",\n          originY: \"top\",\n          radius: pointer.x - origX,\n          angle: 0,\n          fill: fill,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n        });\n        canvas.add(circle);\n        newShape = false;\n      } else {\n        pointer = canvas.getPointer(event);\n        var radius =\n          Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) /\n          2;\n        if (radius > circle.strokeWidth) {\n          radius -= circle.strokeWidth / 2;\n        }\n        circle.set({ radius: radius });\n         if (origX > pointer.x) {\n          circle.set({ originX: \"right\" });\n        } else {\n          circle.set({ originX: \"left\" });\n        }\n        if (origY > pointer.y) {\n          circle.set({ originY: \"bottom\" });\n        } else {\n          circle.set({ originY: \"top\" });\n        }\n        canvas.setActiveObject(circle);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"ellipse\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        origX = pointer.x;\n        origY = pointer.y;\n        ellipse = new fabric.Ellipse({\n          left: origX,\n          top: origY,\n          originX: \"left\",\n          originY: \"top\",\n          rx: pointer.x - origX,\n          ry: pointer.y - origY,\n          angle: 0,\n          fill: fill,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n          type: \"ellipse\",\n          //uuid: generateUUID(),\n        });\n        canvas.add(ellipse);\n        newShape = false;\n        //activeObj = ellipse;\n      } else {\n        pointer = canvas.getPointer(event);\n        var rx = Math.abs(origX - pointer.x) / 2;\n        var ry = Math.abs(origY - pointer.y) / 2;\n        if (rx > ellipse.strokeWidth) {\n          rx -= ellipse.strokeWidth / 2;\n        }\n        if (ry > ellipse.strokeWidth) {\n          ry -= ellipse.strokeWidth / 2;\n        }\n        ellipse.set({ rx: rx, ry: ry });\n         if (origX > pointer.x) {\n          ellipse.set({ originX: \"right\" });\n        } else {\n          ellipse.set({ originX: \"left\" });\n        }\n        if (origY > pointer.y) {\n          ellipse.set({ originY: \"bottom\" });\n        } else {\n          ellipse.set({ originY: \"top\" });\n        }\n        canvas.setActiveObject(ellipse);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n         // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"polygon\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        polygon = new fabric.Polygon(\n          [\n            {\n              x: pointer.x,\n              y: pointer.y,\n            },\n            {\n              x: pointer.x + 1,\n              y: pointer.y + 1,\n            },\n          ],\n          {\n            fill: fill,\n            stroke: stroke,\n            perPixelTargetFind: true,\n            top: pointer.y,\n            left: pointer.x,\n            strokeWidth: strokeWidth,\n          }\n        );\n        canvas.add(polygon);\n        newShape = false;\n      } else {\n        pointer = canvas.getPointer(event);\n        polygon.points.push({\n          x: pointer.x,\n          y: pointer.y,\n        });\n        canvas.remove(polygon);\n        var obj = polygon.toObject();\n        delete obj.top;\n        delete obj.left;\n        polygon = new fabric.Polygon(polygon.points, obj);\n        canvas.add(polygon);\n        canvas.renderAll();\n      }\n       canvas.setActiveObject(polygon);\n      // Save the canvas to State variable\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Save state to History and Limit history depth to 32\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n    }\n  };\n    const handleMouseMove = (event) => {\n    if (newShape === true && canvasTool !== \"pen\") return;\n    //canvas.renderAll();\n    if (canvasTool === \"rect\") {\n      var pointer = canvas.getPointer(event);\n      if (origX > pointer.x) {\n        Rectangle.set({ left: Math.abs(pointer.x) });\n      }\n      if (origY > pointer.y) {\n        Rectangle.set({ top: Math.abs(pointer.y) });\n      }\n      Rectangle.set({ width: Math.abs(origX - pointer.x) });\n      Rectangle.set({ height: Math.abs(origY - pointer.y) });\n       canvas.renderAll();\n    }\n    if (canvasTool === \"line\") {\n      pointer = canvas.getPointer(event);\n      line.set({ x2: pointer.x, y2: pointer.y });\n      canvas.renderAll();\n    }\n    if (canvasTool === \"arrow\") {\n      pointer = canvas.getPointer(event);\n      line.set({\n        x2: pointer.x,\n        y2: pointer.y,\n      });\n      triangle.set({\n        left: pointer.x + deltaX,\n        top: pointer.y + deltaY,\n        angle: _FabricCalcArrowAngle(line.x1, line.y1, line.x2, line.y2),\n      });\n      canvas.renderAll();\n    }\n    if (canvasTool === \"polyline\") {\n      if (\n        lines[0] !== null &&\n        lines[0] !== undefined &&\n        drawingObject.type == \"roof\"\n      ) {\n        setStartingPoint(event);\n        lines[lineCounter - 1].set({\n          x2: x,\n          y2: y,\n        });\n        canvas.renderAll();\n      }\n    }\n    if (canvasTool === \"circle\") {\n      pointer = canvas.getPointer(event);\n      var radius =\n        Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) / 2;\n      if (radius > circle.strokeWidth) {\n        radius -= circle.strokeWidth / 2;\n      }\n      circle.set({ radius: radius });\n       if (origX > pointer.x) {\n        circle.set({ originX: \"right\" });\n      } else {\n        circle.set({ originX: \"left\" });\n      }\n      if (origY > pointer.y) {\n        circle.set({ originY: \"bottom\" });\n      } else {\n        circle.set({ originY: \"top\" });\n      }\n      // Render the Canvas\n      canvas.renderAll();\n    }\n    if (canvasTool === \"ellipse\") {\n      pointer = canvas.getPointer(event);\n      var rx = Math.abs(origX - pointer.x) / 2;\n      var ry = Math.abs(origY - pointer.y) / 2;\n      if (rx > ellipse.strokeWidth) {\n        rx -= ellipse.strokeWidth / 2;\n      }\n      if (ry > ellipse.strokeWidth) {\n        ry -= ellipse.strokeWidth / 2;\n      }\n      ellipse.set({ rx: rx, ry: ry });\n       if (origX > pointer.x) {\n        ellipse.set({ originX: \"right\" });\n      } else {\n        ellipse.set({ originX: \"left\" });\n      }\n      if (origY > pointer.y) {\n        ellipse.set({ originY: \"bottom\" });\n      } else {\n        ellipse.set({ originY: \"top\" });\n      }\n       // Render the Canvas\n      canvas.renderAll();\n    }\n    if (canvasTool === \"polygon\") {\n      canvas.renderAll();\n    }\n  };\n  */\n\n\n  function setStartingPoint(options) {\n    //var offset = canvasRef.current.offset();\n    // console.log(options.pageX);\n    // console.log(canvas._offset.left);\n    x = options.pageX - canvas._offset.left;\n    y = options.pageY - canvas._offset.top;\n  }\n\n  function makeRoof(roofPoints) {\n    var left = findLeftPaddingForRoof(roofPoints);\n    var top = findTopPaddingForRoof(roofPoints);\n    roofPoints.push(new Point(roofPoints[0].x, roofPoints[0].y));\n    var roof = new fabric.Polyline(roofPoints, {\n      fill: fill,\n      stroke: stroke\n    });\n    roof.set({\n      left: left,\n      top: top\n    });\n    return roof;\n  }\n\n  function findTopPaddingForRoof(roofPoints) {\n    var result = 999999;\n\n    for (var f = 0; f < lineCounter; f++) {\n      if (roofPoints[f].y < result) {\n        result = roofPoints[f].y;\n      }\n    }\n\n    return Math.abs(result);\n  }\n\n  function findLeftPaddingForRoof(roofPoints) {\n    var result = 999999;\n\n    for (var i = 0; i < lineCounter; i++) {\n      if (roofPoints[i].x < result) {\n        result = roofPoints[i].x;\n      }\n    }\n\n    return Math.abs(result);\n  }\n\n  const handleMouseDown = event => {\n    if (canvas.isDrawingMode) {\n      canvas.freeDrawingBrush.color = stroke;\n      canvas.freeDrawingBrush.width = strokeWidth;\n    }\n  };\n  /*\n  const handleMouseUp = (event) => {\n    //console.log(\"mouseup\");\n    if (canvas.isDrawingMode) {\n      canvas.renderAll();\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Save state to History and Limit history depth to 32\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      // }\n    }\n  };\n  */\n\n\n  const setShapeAttributes = attributes => {\n    var activeShape = canvas.getActiveObject();\n\n    if (activeShape) {\n      var Attributes = attributes || {};\n      activeShape.set({\n        strokeWidth: Attributes.strokeWidth || activeShape.strokeWidth,\n        stroke: Attributes.stroke === \"nill\" ? null : Attributes.stroke || activeShape.stroke,\n        fill: Attributes.fill === \"nill\" ? null : Attributes.fill || activeShape.fill,\n        opacity: Attributes.opacity / 100 || activeShape.opacity,\n        strokeDashArray: Attributes.strokeDashArray || activeShape.strokeDashArray,\n        fontFamily: Attributes.fontFamily || activeShape.fontFamily,\n        fontSize: Attributes.fontSize || activeShape.fontSize,\n        fontWeight: Attributes.fontWeight || activeShape.fontWeight,\n        fontStyle: Attributes.fontStyle || activeShape.fontStyle,\n        textBackgroundColor: Attributes.textBackgroundColor || activeShape.textBackgroundColor\n      });\n      canvas.renderAll();\n      canvas.setActiveObject(activeShape); // Save the canvas to State variable\n      // if (attributes.fill === undefined) {\n\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n      setCanvasHistory(history => [...history, newCanvasState].slice(-32)); // }\n    }\n  };\n\n  function openHighlightHandler(colors) {\n    setHighlight(colors.color);\n  }\n\n  function closeHighlightHandler(colors) {\n    if (colors.color !== textHighlight) {\n      console.log(colors); // var rgba = hexToRGB(colors.color, colors.alpha / 100);\n\n      setHighlight(colors.color);\n      setShapeAttributes({\n        textBackgroundColor: colors.color\n      });\n    }\n  }\n\n  function openHandler(colors) {\n    setFillColor(colors.color);\n  }\n\n  function changeHandler(colors) {//setFillColor(colors.color);\n    //setShapeAttributes({ fill: colors.color });\n    //console.log(colors);\n  }\n\n  function closeHandler(colors) {\n    if (colors.color !== fill) {\n      console.log(colors);\n      var rgba = hexToRGB(colors.color, colors.alpha / 100);\n      setFillColor(rgba);\n      setShapeAttributes({\n        fill: rgba\n      });\n    }\n  }\n\n  function openStrokeHandler(colors) {\n    setStrokeColor(colors.color);\n  }\n\n  function closeStrokeHandler(colors) {\n    if (colors.color !== stroke) {\n      var rgba = hexToRGB(colors.color, colors.alpha / 100);\n      setStrokeColor(rgba);\n      setShapeAttributes({\n        stroke: rgba\n      });\n    }\n  }\n\n  function freeHand(event) {\n    setCanvasTool(\"pen\");\n    canvas.isDrawingMode = 1;\n    canvas.freeDrawingBrush.color = stroke;\n    canvas.freeDrawingBrush.width = strokeWidth;\n    canvas.renderAll();\n  }\n\n  function deleteObjects() {\n    canvas.getActiveObjects().forEach(obj => {\n      canvas.remove(obj);\n    });\n    canvas.discardActiveObject().renderAll();\n    const newCanvasState = canvas.toJSON();\n    setCanvasState(newCanvasState); // Save state to History and Limit history depth to 32\n\n    setCanvasHistory(history => [...history, newCanvasState].slice(-32));\n  }\n\n  function hexToRGB(hex, alpha) {\n    var r = parseInt(hex.slice(1, 3), 16),\n        g = parseInt(hex.slice(3, 5), 16),\n        b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n\n  let url = \"#\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    // onMouseMove={handleMouseMove}\n    // onClick={handleMouseClick}\n    // onMouseDown={handleMouseDown}\n    //onMouseUp={handleMouseUp}\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: tbStyles.propBar,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: tbStyles.buttontoolbar,\n          onClick: onUndo,\n          id: \"undo\",\n          disabled: canvasHistory[0] === canvasState,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: tbStyles.tooltipDown,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/undo2.png\",\n              alt: \"Undo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: tbStyles.tooltiptextDown,\n              children: \"Undo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: tbStyles.buttontoolbar,\n          onClick: onRedo,\n          id: \"redo\",\n          disabled: canvasHistory[canvasHistory.length - 1] === canvasState,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: tbStyles.tooltipDown,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/redo2.png\",\n              alt: \"Redo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: tbStyles.tooltiptextDown,\n              children: \"Redo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: tbStyles.buttontoolbar,\n          onClick: deleteObjects,\n          id: \"del\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: tbStyles.tooltipDown,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/delete2.png\",\n              alt: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: tbStyles.tooltiptextDown,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: tbStyles.dropdown,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: tbStyles.buttontoolbar,\n          id: \"wList\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/lineWidth2.png\",\n            alt: \"Line Width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"wlDropDown\",\n            className: tbStyles.dropdowncontent,\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(1);\n                setShapeAttributes({\n                  strokeWidth: 1\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke1.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1339,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(2);\n                setShapeAttributes({\n                  strokeWidth: 2\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke2.png\",\n                alt: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1350,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(4);\n                setShapeAttributes({\n                  strokeWidth: 4\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke4.png\",\n                alt: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1361,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(5);\n                setShapeAttributes({\n                  strokeWidth: 5\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke5.png\",\n                alt: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1372,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(10);\n                setShapeAttributes({\n                  strokeWidth: 10\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke10.png\",\n                alt: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1383,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(12);\n                setShapeAttributes({\n                  strokeWidth: 12\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke12.png\",\n                alt: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1394,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(15);\n                setShapeAttributes({\n                  strokeWidth: 15\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke15.png\",\n                alt: \"15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1405,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(20);\n                setShapeAttributes({\n                  strokeWidth: 20\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke20.png\",\n                alt: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1416,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setStrokeWidth(25);\n                setShapeAttributes({\n                  strokeWidth: 25\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/stroke25.png\",\n                alt: \"25\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1427,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: tbStyles.dropdown,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: tbStyles.buttontoolbar,\n          id: \"sList\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/LineStyle2.png\",\n            alt: \"Line Style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"lsDropDown\",\n            className: tbStyles.dropdowncontent,\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setDashSize(0);\n                setGapSize(0);\n                setShapeAttributes({\n                  strokeDashArray: [0, 0]\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/lineStyle1.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1446,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setDashSize(10);\n                setGapSize(5);\n                setShapeAttributes({\n                  strokeDashArray: [10, 5]\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/lineStyle2png.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setDashSize(10);\n                setGapSize(5);\n                setShapeAttributes({\n                  strokeDashArray: [10, 5]\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/lineStyle3.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1470,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setDashSize(20);\n                setGapSize(5);\n                setShapeAttributes({\n                  strokeDashArray: [20, 5]\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/lineStyle4.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1482,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1472,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setDashSize(20);\n                setGapSize(10);\n                setShapeAttributes({\n                  strokeDashArray: [20, 10]\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/lineStyle5.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1484,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setDashSize(5);\n                setGapSize(5);\n                setShapeAttributes({\n                  strokeDashArray: [5, 5]\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/lineStyle6.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1506,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: url,\n              onClick: e => {\n                setDashSize(2);\n                setGapSize(2);\n                setShapeAttributes({\n                  strokeDashArray: [2, 2]\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/lineStyle7.png\",\n                alt: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1518,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: tbStyles.buttontoolbar,\n        id: \"dropper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: tbStyles.tooltipDown,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/dropper2.png\",\n            alt: \"Pick a color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: tbStyles.tooltiptextDown,\n            children: \"Pick a color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 9\n      }, this), \"\\xA0Stroke\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"strokePoint\",\n        value: strokeWidth,\n        min: \"0\",\n        max: \"50\",\n        onChange: e => {\n          setStrokeWidth(+e.target.value);\n          setShapeAttributes({\n            strokeWidth: +e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1530,\n        columnNumber: 9\n      }, this), \"\\xA0Dash\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"20\",\n        id: \"dashSize\",\n        value: dashSize,\n        onChange: e => {\n          setDashSize(+e.target.value);\n          setShapeAttributes({\n            strokeDashArray: [+e.target.value, +e.target.value]\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 9\n      }, this), \"\\xA0 Stroke\", /*#__PURE__*/_jsxDEV(ColorPicker, {\n        color: stroke,\n        alpha: 100,\n        onOpen: openStrokeHandler,\n        onChange: changeHandler,\n        onClose: closeStrokeHandler,\n        placement: \"bottomLeft\",\n        className: \"some-class\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rc-color-picker-trigger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1567,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"noStroke\",\n        onClick: e => {\n          setStrokeColor(\"nill\");\n          setShapeAttributes({\n            stroke: \"nill\"\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: tbStyles.tooltipDown,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/noStroke2.png\",\n            alt: \"No stroke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1580,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: tbStyles.tooltiptextDown,\n            children: \"Set No Stroke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1581,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1579,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1570,\n        columnNumber: 9\n      }, this), \"\\xA0Fill\", /*#__PURE__*/_jsxDEV(ColorPicker, {\n        color: fill,\n        alpha: 100,\n        onOpen: openHandler,\n        onChange: changeHandler,\n        onClose: closeHandler,\n        placement: \"topLeft\",\n        className: \"some-class\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rc-color-picker-trigger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1594,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1585,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"noFill\",\n        onClick: e => {\n          setFillColor(\"nill\");\n          setShapeAttributes({\n            fill: \"nill\"\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: tbStyles.tooltipDown,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"images/noFill2.png\",\n            alt: \"No fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: tbStyles.tooltiptextDown,\n            children: \"Set No Fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1608,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1597,\n        columnNumber: 9\n      }, this), \"\\xA0Opacity\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"opacityRange\",\n        value: opacity,\n        onChange: e => {\n          setOpacity(e.target.value);\n          setShapeAttributes({\n            opacity: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1612,\n        columnNumber: 9\n      }, this), \"\\xA0 Angle snap:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"chkSnap\",\n        onChange: e => {\n          setSnap(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1624,\n        columnNumber: 9\n      }, this), \"\\xA0Font\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"fonts\",\n        id: \"fonts\",\n        onChange: e => {\n          setFont(e.target.value);\n          setShapeAttributes({\n            fontFamily: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 9\n      }, this), \"\\xA0Size\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"fontSize\",\n        value: fontSize,\n        min: \"0\",\n        max: \"100\",\n        onChange: e => {\n          setFontSize(+e.target.value);\n          setShapeAttributes({\n            fontSize: +e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1641,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"FontWeight:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fontWeight,\n          onChange: e => {\n            setFontWeight(e.target.value);\n            setShapeAttributes({\n              fontWeight: e.target.value\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"normal\",\n            children: \"Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bold\",\n            children: \"Bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1667,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"FontSyle:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fontStyle,\n          onChange: e => {\n            setFontStyle(e.target.value);\n            setShapeAttributes({\n              fontStyle: e.target.value\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"regular\",\n            children: \"Regular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1681,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"italic\",\n            children: \"Italic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1682,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1672,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 9\n      }, this), \"\\xA0HighlightText\", /*#__PURE__*/_jsxDEV(ColorPicker, {\n        color: textHighlight,\n        alpha: 100,\n        onOpen: openHighlightHandler,\n        onChange: changeHandler,\n        onClose: closeHighlightHandler,\n        placement: \"topLeft\",\n        className: \"some-class\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rc-color-picker-trigger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.right,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tab,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"select\");\n          },\n          id: \"defaultSelect\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Select2.png\",\n              alt: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1710,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1708,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"text\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/TextBox2.png\",\n              alt: \"TextBox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1720,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1721,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1719,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1713,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: freeHand,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/PenTool2.png\",\n              alt: \"Pen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1726,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Free-hand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1727,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1725,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1724,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"cloud\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Cloud2.png\",\n              alt: \"Cloud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1737,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Cloud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1738,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1736,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1730,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"callout\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/CallOut2.png\",\n              alt: \"Callout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1748,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Callout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1749,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1747,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"image\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Image2.png\",\n              alt: \"Image Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1759,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Image Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1760,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1758,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tabspace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"line\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Line2.png\",\n              alt: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1771,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1772,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1770,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"polyline\");\n            initPolyline();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Polyline2.png\",\n              alt: \"Polyline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1783,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Polyline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1784,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1782,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1775,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"arrow\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Arrow2.png\",\n              alt: \"Arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1794,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1795,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1793,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"arc\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Arc2.png\",\n              alt: \"Arc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1805,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Arc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1806,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1804,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1798,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"rect\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Rectangle2.png\",\n              alt: \"Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1816,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1817,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1815,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"polygon\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Polygon2.png\",\n              alt: \"Polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1827,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1828,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1826,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1820,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"rpolygon\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/RPolygon2.png\",\n              alt: \"Regular Polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1838,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Regular Polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1839,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1837,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1831,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"circle\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Circle2.png\",\n              alt: \"Circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1849,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1850,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1848,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"ellipse\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Ellipse2.png\",\n              alt: \"Ellipse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1860,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Ellipse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1861,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1859,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1853,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tabspace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1864,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"dimension\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Dimension2.png\",\n              alt: \"Dimension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1872,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Dimension\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1873,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1871,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"area\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Area2.png\",\n              alt: \"Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1884,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1885,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1883,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1877,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"length\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Length2.png\",\n              alt: \"Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1895,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1896,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1894,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            canvas.isDrawingMode = false;\n            setCanvasTool(\"perimeter\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/Perimeter2.png\",\n              alt: \"Perimeter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1906,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.tooltiptext,\n              children: \"Perimeter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1907,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1905,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1899,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1700,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1699,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"my-fabric-canvas\",\n      width: \"1191\",\n      height: \"842\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1912,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1284,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DGwQhmFy2C0LE34V6Ol/z1Ad6bU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["c:/Tutorials/fabric-drawing/src/App.js"],"names":["React","useRef","useState","useCallback","fabric","styles","tbStyles","ColorPicker","initialState","version","objects","type","originX","originY","left","top","width","height","fill","stroke","strokeWidth","strokeDashArray","strokeLineCap","strokeDashOffset","strokeLineJoin","strokeMiterLimit","scaleX","scaleY","angle","flipX","flipY","opacity","shadow","visible","clipTo","backgroundColor","fillRule","paintFirst","globalCompositeOperation","transformMatrix","skewX","skewY","rx","ry","fontCheck","Set","sort","App","canvasRef","canvas","setCanvas","canvasHistory","setCanvasHistory","canvasState","setCanvasState","canvasTool","setCanvasTool","setStrokeWidth","setStrokeColor","setFillColor","dashSize","setDashSize","gapSize","setGapSize","setOpacity","snap","setSnap","font","setFont","fontSize","setFontSize","fontWeight","setFontWeight","fontStyle","setFontStyle","textHighlight","setHighlight","newShape","Rectangle","ellipse","circle","line","triangle","origX","origY","deltaX","deltaY","x","y","roof","roofPoints","lines","lineCounter","drawingObject","background","border","pgPoints","polyline","polygon","Point","initPolyline","forEach","value","index","ar","remove","makeRoof","add","renderAll","onObjectModified","e","newCanvasState","target","toJSON","history","slice","useEffect","fontAvailable","values","document","fonts","check","getElementById","option","createElement","text","Canvas","current","loadFromJSON","on","setViewportTransform","viewportTransform","isDragging","selection","isDrawingMode","pointer","getPointer","IText","fontFamily","setActiveObject","points","Line","set","x2","y2","Rect","Math","abs","Circle","radius","max","Ellipse","activeShape","getActiveObject","opt","delta","zoom","getZoom","zoomToPoint","offsetX","offsetY","preventDefault","stopPropagation","vpt","getWidth","getHeight","evt","altKey","lastPosX","clientX","lastPosY","clientY","requestRenderAll","dispose","moveHistory","step","currentStateIndex","indexOf","prevState","onUndo","onRedo","_FabricCalcArrowAngle","x1","y1","PI","atan","setStartingPoint","options","pageX","_offset","pageY","findLeftPaddingForRoof","findTopPaddingForRoof","push","Polyline","result","f","i","handleMouseDown","event","freeDrawingBrush","color","setShapeAttributes","attributes","Attributes","textBackgroundColor","openHighlightHandler","colors","closeHighlightHandler","console","log","openHandler","changeHandler","closeHandler","rgba","hexToRGB","alpha","openStrokeHandler","closeStrokeHandler","freeHand","deleteObjects","getActiveObjects","obj","discardActiveObject","hex","r","parseInt","g","b","url","propBar","buttontoolbar","tooltipDown","tooltiptextDown","length","dropdown","dropdowncontent","right","tab","tooltip","tooltiptext","tabspace"],"mappings":"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","sourcesContent":["import \"rc-color-picker/assets/index.css\";\nimport React, { useRef, useState, useCallback } from \"react\";\n////import { PopoverPicker } from \"./PopoverPicker\";\n\nimport { fabric } from \"fabric\";\nimport \"./styles.css\";\nimport styles from \"./rightMenu.module.css\";\nimport tbStyles from \"./toolbar.module.css\";\n//import { RgbaColorPicker } from \"react-colorful\";\nimport ColorPicker from \"rc-color-picker\";\n//import \"react-colorful/dist/index.css\";\n\nconst initialState = {\n  version: \"3.6.3\",\n  objects: [\n    {\n      type: \"rect\",\n      version: \"3.6.3\",\n      originX: \"left\",\n      originY: \"top\",\n      left: 0,\n      top: 0,\n      width: 1,\n      height: 1,\n      fill: \"black\",\n      stroke: null,\n      strokeWidth: 1,\n      strokeDashArray: null,\n      strokeLineCap: \"butt\",\n      strokeDashOffset: 0,\n      strokeLineJoin: \"miter\",\n      strokeMiterLimit: 4,\n      scaleX: 1,\n      scaleY: 1,\n      angle: 0,\n      flipX: false,\n      flipY: false,\n      opacity: 1,\n      shadow: null,\n      visible: false,\n      clipTo: null,\n      backgroundColor: \"\",\n      fillRule: \"nonzero\",\n      paintFirst: \"fill\",\n      globalCompositeOperation: \"source-over\",\n      transformMatrix: null,\n      skewX: 0,\n      skewY: 0,\n      rx: 0,\n      ry: 0,\n    },\n  ],\n};\n\nconst fontCheck = new Set(\n  [\n    // Windows 10\n    \"Arial\",\n    \"Arial Black\",\n    \"Bahnschrift\",\n    \"Calibri\",\n    \"Cambria\",\n    \"Cambria Math\",\n    \"Candara\",\n    \"Comic Sans MS\",\n    \"Consolas\",\n    \"Constantia\",\n    \"Corbel\",\n    \"Courier New\",\n    \"Ebrima\",\n    \"Franklin Gothic Medium\",\n    \"Gabriola\",\n    \"Gadugi\",\n    \"Georgia\",\n    \"HoloLens MDL2 Assets\",\n    \"Impact\",\n    \"Ink Free\",\n    \"Javanese Text\",\n    \"Leelawadee UI\",\n    \"Lucida Console\",\n    \"Lucida Sans Unicode\",\n    \"Malgun Gothic\",\n    \"Marlett\",\n    \"Microsoft Himalaya\",\n    \"Microsoft JhengHei\",\n    \"Microsoft New Tai Lue\",\n    \"Microsoft PhagsPa\",\n    \"Microsoft Sans Serif\",\n    \"Microsoft Tai Le\",\n    \"Microsoft YaHei\",\n    \"Microsoft Yi Baiti\",\n    \"MingLiU-ExtB\",\n    \"Mongolian Baiti\",\n    \"MS Gothic\",\n    \"MV Boli\",\n    \"Myanmar Text\",\n    \"Nirmala UI\",\n    \"Palatino Linotype\",\n    \"Segoe MDL2 Assets\",\n    \"Segoe Print\",\n    \"Segoe Script\",\n    \"Segoe UI\",\n    \"Segoe UI Historic\",\n    \"Segoe UI Emoji\",\n    \"Segoe UI Symbol\",\n    \"SimSun\",\n    \"Sitka\",\n    \"Sylfaen\",\n    \"Symbol\",\n    \"Tahoma\",\n    \"Times New Roman\",\n    \"Trebuchet MS\",\n    \"Verdana\",\n    \"Webdings\",\n    \"Wingdings\",\n    \"Yu Gothic\",\n    // macOS\n    \"American Typewriter\",\n    \"Andale Mono\",\n    \"Arial\",\n    \"Arial Black\",\n    \"Arial Narrow\",\n    \"Arial Rounded MT Bold\",\n    \"Arial Unicode MS\",\n    \"Avenir\",\n    \"Avenir Next\",\n    \"Avenir Next Condensed\",\n    \"Baskerville\",\n    \"Big Caslon\",\n    \"Bodoni 72\",\n    \"Bodoni 72 Oldstyle\",\n    \"Bodoni 72 Smallcaps\",\n    \"Bradley Hand\",\n    \"Brush Script MT\",\n    \"Chalkboard\",\n    \"Chalkboard SE\",\n    \"Chalkduster\",\n    \"Charter\",\n    \"Cochin\",\n    \"Comic Sans MS\",\n    \"Copperplate\",\n    \"Courier\",\n    \"Courier New\",\n    \"Didot\",\n    \"DIN Alternate\",\n    \"DIN Condensed\",\n    \"Futura\",\n    \"Geneva\",\n    \"Georgia\",\n    \"Gill Sans\",\n    \"Helvetica\",\n    \"Helvetica Neue\",\n    \"Herculanum\",\n    \"Hoefler Text\",\n    \"Impact\",\n    \"Lucida Grande\",\n    \"Luminari\",\n    \"Marker Felt\",\n    \"Menlo\",\n    \"Microsoft Sans Serif\",\n    \"Monaco\",\n    \"Noteworthy\",\n    \"Optima\",\n    \"Palatino\",\n    \"Papyrus\",\n    \"Phosphate\",\n    \"Rockwell\",\n    \"Savoye LET\",\n    \"SignPainter\",\n    \"Skia\",\n    \"Snell Roundhand\",\n    \"Tahoma\",\n    \"Times\",\n    \"Times New Roman\",\n    \"Trattatello\",\n    \"Trebuchet MS\",\n    \"Verdana\",\n    \"Zapfino\",\n  ].sort()\n);\n// Or you can use:\n// const fabric = require(\"fabric\").fabric;\n//const canvas = new fabric.Canvas(\"my-fabric-canvas\");\nconst App = () => {\n  const canvasRef = useRef();\n  const [canvas, setCanvas] = useState();\n  const [canvasHistory, setCanvasHistory] = useState([initialState]);\n  //const [canvasHistory, setCanvasHistory] = useState([]);\n  const [canvasState, setCanvasState] = useState(initialState);\n  //const [canvasState, setCanvasState] = useState();\n  const [canvasTool, setCanvasTool] = useState(\"select\");\n  const [strokeWidth, setStrokeWidth] = useState(1);\n  const [stroke, setStrokeColor] = useState(\"black\");\n  const [fill, setFillColor] = useState(null);\n  const [dashSize, setDashSize] = useState(0);\n  const [gapSize, setGapSize] = useState(0);\n  const [opacity, setOpacity] = useState(100);\n  const [snap, setSnap] = useState(false);\n  const [font, setFont] = useState(\"\");\n  const [fontSize, setFontSize] = useState(30);\n  const [fontWeight, setFontWeight] = useState(\"normal\");\n  const [fontStyle, setFontStyle] = useState(\"regular\");\n  const [textHighlight, setHighlight] = useState(\"yellow\");\n\n  var newShape = true;\n  var Rectangle = null;\n  var ellipse = null;\n  var circle = null;\n  var line = null;\n  var triangle = null;\n  var origX, origY, deltaX, deltaY;\n  var x = 0;\n  var y = 0;\n  var roof = null;\n  var roofPoints = [];\n  var lines = [];\n  var lineCounter = 0;\n  var drawingObject = {};\n  drawingObject.type = \"\";\n  drawingObject.background = \"\";\n  drawingObject.border = \"\";\n  var pgPoints = [];\n  var polyline = null;\n\n  var polygon = null;\n\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  const initPolyline = () => {\n    if (drawingObject.type == \"roof\") {\n      drawingObject.type = \"\";\n      lines.forEach(function (value, index, ar) {\n        canvas.remove(value);\n      });\n      //canvas.remove(lines[lineCounter - 1]);\n      roof = makeRoof(roofPoints);\n      canvas.add(roof);\n      canvas.renderAll();\n    } else {\n      drawingObject.type = \"roof\"; // roof type\n    }\n  };\n\n  const onObjectModified = useCallback(\n    (e) => {\n      const newCanvasState = e.target.canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Limit history depth\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n    },\n    [setCanvasState, setCanvasHistory]\n  );\n\n  React.useEffect(() => {\n    const fontAvailable = new Set();\n    for (const font of fontCheck.values()) {\n      if (document.fonts.check(`12px \"${font}\"`)) {\n        fontAvailable.add(font);\n        var x = document.getElementById(\"fonts\");\n        var option = document.createElement(\"option\");\n        option.text = font;\n        x.add(option);\n      }\n      //console.log(\"Available Fonts:\", [...fontAvailable.values()]);\n    }\n  }, []);\n  React.useEffect(() => {}, [canvasState]);\n\n  React.useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current);\n    canvas.loadFromJSON(canvasState);\n    //canvas.on(\"object:added\", onObjectModified);\n    canvas.on(\"object:modified\", onObjectModified);\n    canvas.on(\"mouse:up\", function (e) {\n      this.setViewportTransform(this.viewportTransform);\n      this.isDragging = false;\n      this.selection = true;\n      if (canvas.isDrawingMode) {\n        canvas.renderAll();\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n        // }\n      }\n      if (canvasTool === \"text\") {\n        var pointer = canvas.getPointer(e);\n        var text = new fabric.IText(\"click to edit\", {\n          left: pointer.x,\n          top: pointer.y,\n          fontFamily: font,\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n        });\n        //console.log(text);\n        canvas.add(text);\n        canvas.setActiveObject(text);\n        canvas.renderAll();\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n      if (canvasTool === \"line\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          var points = [pointer.x, pointer.y, pointer.x, pointer.y];\n          line = new fabric.Line(points, {\n            strokeWidth: strokeWidth,\n            fill: fill,\n            stroke: stroke,\n            originX: \"center\",\n            originY: \"center\",\n          });\n          canvas.add(line);\n          newShape = false;\n        } else {\n          pointer = canvas.getPointer(e);\n          line.set({ x2: pointer.x, y2: pointer.y });\n\n          canvas.setActiveObject(line);\n          canvas.renderAll();\n          newShape = true;\n          // Save the canvas to State variable\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState);\n          // Save state to History and Limit history depth to 32\n          setCanvasHistory((history) =>\n            [...history, newCanvasState].slice(-32)\n          );\n        }\n      }\n      if (canvasTool === \"rect\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          origX = pointer.x;\n          origY = pointer.y;\n          Rectangle = new fabric.Rect({\n            left: origX,\n            top: origY,\n            fill: fill,\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n            strokeDashArray: [dashSize, gapSize],\n            opacity: opacity,\n          });\n          //console.log(Rectangle);\n          canvas.add(Rectangle);\n          setCanvas(canvas);\n          //canvas.renderAll();\n          //setRect((prevState) => (prevState = false));\n          newShape = false;\n          //setNewRectangle(false);\n        } else {\n          pointer = canvas.getPointer(e);\n          if (origX > pointer.x) {\n            Rectangle.set({ left: Math.abs(pointer.x) });\n          }\n          if (origY > pointer.y) {\n            Rectangle.set({ top: Math.abs(pointer.y) });\n          }\n          Rectangle.set({ width: Math.abs(origX - pointer.x) });\n          Rectangle.set({ height: Math.abs(origY - pointer.y) });\n          canvas.setActiveObject(Rectangle);\n          //setNewRectangle(true);\n          newShape = true;\n          // Render the Canvas\n          canvas.renderAll();\n\n          // Save the canvas to State variable\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState);\n          // Save state to History and Limit history depth to 32\n          setCanvasHistory((history) =>\n            [...history, newCanvasState].slice(-32)\n          );\n        }\n      }\n      if (canvasTool === \"circle\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          origX = pointer.x;\n          origY = pointer.y;\n          circle = new fabric.Circle({\n            left: origX,\n            top: origY,\n            originX: \"left\",\n            originY: \"top\",\n            radius: pointer.x - origX,\n            angle: 0,\n            fill: fill,\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n          });\n          canvas.add(circle);\n          newShape = false;\n        } else {\n          pointer = canvas.getPointer(e);\n          var radius =\n            Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) /\n            2;\n          if (radius > circle.strokeWidth) {\n            radius -= circle.strokeWidth / 2;\n          }\n          circle.set({ radius: radius });\n\n          if (origX > pointer.x) {\n            circle.set({ originX: \"right\" });\n          } else {\n            circle.set({ originX: \"left\" });\n          }\n          if (origY > pointer.y) {\n            circle.set({ originY: \"bottom\" });\n          } else {\n            circle.set({ originY: \"top\" });\n          }\n          canvas.setActiveObject(circle);\n          //setNewRectangle(true);\n          newShape = true;\n          // Render the Canvas\n          canvas.renderAll();\n          // Save the canvas to State variable\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState);\n          // Save state to History and Limit history depth to 32\n          setCanvasHistory((history) =>\n            [...history, newCanvasState].slice(-32)\n          );\n        }\n      }\n      if (canvasTool === \"ellipse\") {\n        if (newShape) {\n          pointer = canvas.getPointer(e);\n          origX = pointer.x;\n          origY = pointer.y;\n          ellipse = new fabric.Ellipse({\n            left: origX,\n            top: origY,\n            originX: \"left\",\n            originY: \"top\",\n            rx: pointer.x - origX,\n            ry: pointer.y - origY,\n            angle: 0,\n            fill: fill,\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n            type: \"ellipse\",\n            //uuid: generateUUID(),\n          });\n          canvas.add(ellipse);\n          newShape = false;\n          //activeObj = ellipse;\n        } else {\n          pointer = canvas.getPointer(e);\n          var rx = Math.abs(origX - pointer.x) / 2;\n          var ry = Math.abs(origY - pointer.y) / 2;\n          if (rx > ellipse.strokeWidth) {\n            rx -= ellipse.strokeWidth / 2;\n          }\n          if (ry > ellipse.strokeWidth) {\n            ry -= ellipse.strokeWidth / 2;\n          }\n          ellipse.set({ rx: rx, ry: ry });\n\n          if (origX > pointer.x) {\n            ellipse.set({ originX: \"right\" });\n          } else {\n            ellipse.set({ originX: \"left\" });\n          }\n          if (origY > pointer.y) {\n            ellipse.set({ originY: \"bottom\" });\n          } else {\n            ellipse.set({ originY: \"top\" });\n          }\n          canvas.setActiveObject(ellipse);\n          //setNewRectangle(true);\n          newShape = true;\n          // Render the Canvas\n          canvas.renderAll();\n\n          // Save the canvas to State variable\n          const newCanvasState = canvas.toJSON();\n          setCanvasState(newCanvasState);\n          // Save state to History and Limit history depth to 32\n          setCanvasHistory((history) =>\n            [...history, newCanvasState].slice(-32)\n          );\n        }\n      }\n      //check if user clicked an object\n      if (e.target) {\n        var activeShape = canvas.getActiveObject();\n        if (activeShape) {\n          setFillColor(activeShape.fill);\n          setStrokeColor(activeShape.stroke);\n          setStrokeWidth(activeShape.strokeWidth);\n          setOpacity(activeShape.opacity);\n          setFont(activeShape.fontFamily);\n          setFontSize(activeShape.fontSize);\n          setFontWeight(activeShape.fontWeight);\n          setFontStyle(activeShape.fontStyle);\n        }\n      }\n    });\n\n    canvas.on(\"mouse:wheel\", function (opt) {\n      var delta = opt.e.deltaY;\n      var zoom = canvas.getZoom();\n      zoom *= 0.999 ** delta;\n      if (zoom > 20) zoom = 20;\n      if (zoom < 0.01) zoom = 0.01;\n      canvas.zoomToPoint({ x: opt.e.offsetX, y: opt.e.offsetY }, zoom);\n      opt.e.preventDefault();\n      opt.e.stopPropagation();\n      var vpt = this.viewportTransform;\n      if (zoom < 400 / 1000) {\n        vpt[4] = 200 - (1000 * zoom) / 2;\n        vpt[5] = 200 - (1000 * zoom) / 2;\n      } else {\n        if (vpt[4] >= 0) {\n          vpt[4] = 0;\n        } else if (vpt[4] < canvas.getWidth() - 1000 * zoom) {\n          vpt[4] = canvas.getWidth() - 1000 * zoom;\n        }\n        if (vpt[5] >= 0) {\n          vpt[5] = 0;\n        } else if (vpt[5] < canvas.getHeight() - 1000 * zoom) {\n          vpt[5] = canvas.getHeight() - 1000 * zoom;\n        }\n      }\n    });\n    canvas.on(\"mouse:down\", function (opt) {\n      var evt = opt.e;\n      if (evt.altKey === true) {\n        this.isDragging = true;\n        this.selection = false;\n        this.lastPosX = evt.clientX;\n        this.lastPosY = evt.clientY;\n      }\n    });\n    canvas.on(\"mouse:move\", function (opt) {\n      if (this.isDragging) {\n        var e = opt.e;\n        var vpt = this.viewportTransform;\n        vpt[4] += e.clientX - this.lastPosX;\n        vpt[5] += e.clientY - this.lastPosY;\n        this.requestRenderAll();\n        this.lastPosX = e.clientX;\n        this.lastPosY = e.clientY;\n      }\n      if (newShape === true && canvasTool !== \"pen\") return;\n      //canvas.renderAll();\n      if (canvasTool === \"rect\") {\n        var pointer = canvas.getPointer(opt);\n        if (origX > pointer.x) {\n          Rectangle.set({ left: Math.abs(pointer.x) });\n        }\n        if (origY > pointer.y) {\n          Rectangle.set({ top: Math.abs(pointer.y) });\n        }\n        Rectangle.set({ width: Math.abs(origX - pointer.x) });\n        Rectangle.set({ height: Math.abs(origY - pointer.y) });\n\n        canvas.renderAll();\n      }\n      if (canvasTool === \"line\") {\n        pointer = canvas.getPointer(opt);\n        line.set({ x2: pointer.x, y2: pointer.y });\n        canvas.renderAll();\n      }\n\n      if (canvasTool === \"circle\") {\n        pointer = canvas.getPointer(opt);\n        var radius =\n          Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) /\n          2;\n        if (radius > circle.strokeWidth) {\n          radius -= circle.strokeWidth / 2;\n        }\n        circle.set({ radius: radius });\n\n        if (origX > pointer.x) {\n          circle.set({ originX: \"right\" });\n        } else {\n          circle.set({ originX: \"left\" });\n        }\n        if (origY > pointer.y) {\n          circle.set({ originY: \"bottom\" });\n        } else {\n          circle.set({ originY: \"top\" });\n        }\n        // Render the Canvas\n        canvas.renderAll();\n      }\n      if (canvasTool === \"ellipse\") {\n        pointer = canvas.getPointer(opt);\n        var rx = Math.abs(origX - pointer.x) / 2;\n        var ry = Math.abs(origY - pointer.y) / 2;\n        if (rx > ellipse.strokeWidth) {\n          rx -= ellipse.strokeWidth / 2;\n        }\n        if (ry > ellipse.strokeWidth) {\n          ry -= ellipse.strokeWidth / 2;\n        }\n        ellipse.set({ rx: rx, ry: ry });\n\n        if (origX > pointer.x) {\n          ellipse.set({ originX: \"right\" });\n        } else {\n          ellipse.set({ originX: \"left\" });\n        }\n        if (origY > pointer.y) {\n          ellipse.set({ originY: \"bottom\" });\n        } else {\n          ellipse.set({ originY: \"top\" });\n        }\n\n        // Render the Canvas\n        canvas.renderAll();\n      }\n      if (canvasTool === \"polygon\") {\n        canvas.renderAll();\n      }\n    });\n\n    setCanvas(canvas);\n    return () => {\n      canvas.dispose();\n    };\n  }, [canvasRef, canvasTool, onObjectModified, setCanvas]);\n\n  const moveHistory = useCallback(\n    (step) => {\n      const currentStateIndex = canvasHistory.indexOf(canvasState);\n      const prevState = canvasHistory[currentStateIndex + step];\n      canvas.loadFromJSON(prevState);\n      setCanvasState(prevState);\n    },\n    [canvas, canvasState, canvasHistory, setCanvasState]\n  );\n\n  const onUndo = useCallback(() => moveHistory(-1), [moveHistory]);\n\n  const onRedo = useCallback(() => moveHistory(1), [moveHistory]);\n  var _FabricCalcArrowAngle = function (x1, y1, x2, y2) {\n    var angle = 0,\n      x,\n      y;\n    x = x2 - x1;\n    y = y2 - y1;\n    if (x === 0) {\n      angle = y === 0 ? 0 : y > 0 ? Math.PI / 2 : (Math.PI * 3) / 2;\n    } else if (y === 0) {\n      angle = x > 0 ? 0 : Math.PI;\n    } else {\n      angle =\n        x < 0\n          ? Math.atan(y / x) + Math.PI\n          : y < 0\n          ? Math.atan(y / x) + 2 * Math.PI\n          : Math.atan(y / x);\n    }\n    return (angle * 180) / Math.PI + 90;\n  };\n  /*\n  const handleMouseClick = (event) => {\n    if (canvasTool === \"select\") {\n    }\n    if (canvasTool === \"text\") {\n      var pointer = canvas.getPointer(event);\n      var text = new fabric.IText(\"click to edit\", {\n        left: pointer.x,\n        top: pointer.y,\n        fontFamily: font,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n      });\n      //console.log(text);\n      canvas.add(text);\n      canvas.setActiveObject(text);\n      canvas.renderAll();\n      // Save the canvas to State variable\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Save state to History and Limit history depth to 32\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n    }\n    if (canvasTool === \"line\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        var points = [pointer.x, pointer.y, pointer.x, pointer.y];\n        line = new fabric.Line(points, {\n          strokeWidth: strokeWidth,\n          fill: fill,\n          stroke: stroke,\n          originX: \"center\",\n          originY: \"center\",\n        });\n        canvas.add(line);\n        newShape = false;\n      } else {\n        pointer = canvas.getPointer(event);\n        line.set({ x2: pointer.x, y2: pointer.y });\n\n        canvas.setActiveObject(line);\n        canvas.renderAll();\n        newShape = true;\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"arrow\") {\n      if (newShape) {\n        newShape = false;\n        pointer = canvas.getPointer(event);\n        points = [pointer.x, pointer.y, pointer.x, pointer.y];\n        line = new fabric.Line(points, {\n          strokeWidth: strokeWidth,\n          fill: fill,\n          stroke: stroke,\n          originX: \"center\",\n          originY: \"center\",\n          //id: \"arrow_line\",\n          //uuid: generateUUID(),\n          type: \"arrow\",\n        });\n        var centerX = (line.x1 + line.x2) / 2;\n        var centerY = (line.y1 + line.y2) / 2;\n        deltaX = line.left - centerX;\n        deltaY = line.top - centerY;\n        triangle = new fabric.Triangle({\n          left: line.get(\"x1\") + deltaX,\n          top: line.get(\"y1\") + deltaY,\n          originX: \"center\",\n          originY: \"center\",\n          selectable: false,\n          pointType: \"arrow_start\",\n          angle: -45,\n          width: 20,\n          height: 20,\n          fill: fill,\n          stroke: stroke,\n          //id: \"arrow_triangle\",\n          //uuid: line.uuid,\n        });\n        canvas.add(line, triangle);\n      } else {\n        pointer = canvas.getPointer(event);\n        line.set({\n          x2: pointer.x,\n          y2: pointer.y,\n        });\n        triangle.set({\n          left: pointer.x + deltaX,\n          top: pointer.y + deltaY,\n          angle: _FabricCalcArrowAngle(line.x1, line.y1, line.x2, line.y2),\n        });\n        var group = new window.fabric.Group([line, triangle], {\n          borderColor: \"black\",\n          cornerColor: \"green\",\n          lockScalingFlip: true,\n          typeOfGroup: \"arrow\",\n          userLevel: 1,\n          name: \"my_ArrowGroup\",\n          //uuid : activeObj.uuid,\n          type: \"arrow\",\n        });\n        canvas.remove(line, triangle); // removing old object\n        //activeObj = group;\n        canvas.add(group);\n        canvas.setActiveObject(group);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"polyline\") {\n      if (drawingObject.type == \"roof\") {\n        canvas.selection = false;\n        setStartingPoint(event); // set x,y\n        roofPoints.push(new Point(x, y));\n        var points = [x, y, x, y];\n        lines.push(\n          new fabric.Line(points, {\n            strokeWidth: strokeWidth,\n            selectable: false,\n            stroke: stroke,\n          })\n            .set(\"originX\", x)\n            .set(\"originY\", y)\n        );\n        canvas.add(lines[lineCounter]);\n        lineCounter++;\n        //canvas.on(\"mouse:up\", function (options) {\n        //  canvas.selection = true;\n        //});\n      }\n    }\n    if (canvasTool === \"rect\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        origX = pointer.x;\n        origY = pointer.y;\n        Rectangle = new fabric.Rect({\n          left: origX,\n          top: origY,\n          fill: fill,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n          strokeDashArray: [dashSize, gapSize],\n          opacity: opacity,\n        });\n        //console.log(Rectangle);\n        canvas.add(Rectangle);\n        setCanvas(canvas);\n        //canvas.renderAll();\n        //setRect((prevState) => (prevState = false));\n        newShape = false;\n        //setNewRectangle(false);\n      } else {\n        pointer = canvas.getPointer(event);\n        if (origX > pointer.x) {\n          Rectangle.set({ left: Math.abs(pointer.x) });\n        }\n        if (origY > pointer.y) {\n          Rectangle.set({ top: Math.abs(pointer.y) });\n        }\n        Rectangle.set({ width: Math.abs(origX - pointer.x) });\n        Rectangle.set({ height: Math.abs(origY - pointer.y) });\n        canvas.setActiveObject(Rectangle);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"circle\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        origX = pointer.x;\n        origY = pointer.y;\n        circle = new fabric.Circle({\n          left: origX,\n          top: origY,\n          originX: \"left\",\n          originY: \"top\",\n          radius: pointer.x - origX,\n          angle: 0,\n          fill: fill,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n        });\n        canvas.add(circle);\n        newShape = false;\n      } else {\n        pointer = canvas.getPointer(event);\n        var radius =\n          Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) /\n          2;\n        if (radius > circle.strokeWidth) {\n          radius -= circle.strokeWidth / 2;\n        }\n        circle.set({ radius: radius });\n\n        if (origX > pointer.x) {\n          circle.set({ originX: \"right\" });\n        } else {\n          circle.set({ originX: \"left\" });\n        }\n        if (origY > pointer.y) {\n          circle.set({ originY: \"bottom\" });\n        } else {\n          circle.set({ originY: \"top\" });\n        }\n        canvas.setActiveObject(circle);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"ellipse\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        origX = pointer.x;\n        origY = pointer.y;\n        ellipse = new fabric.Ellipse({\n          left: origX,\n          top: origY,\n          originX: \"left\",\n          originY: \"top\",\n          rx: pointer.x - origX,\n          ry: pointer.y - origY,\n          angle: 0,\n          fill: fill,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n          type: \"ellipse\",\n          //uuid: generateUUID(),\n        });\n        canvas.add(ellipse);\n        newShape = false;\n        //activeObj = ellipse;\n      } else {\n        pointer = canvas.getPointer(event);\n        var rx = Math.abs(origX - pointer.x) / 2;\n        var ry = Math.abs(origY - pointer.y) / 2;\n        if (rx > ellipse.strokeWidth) {\n          rx -= ellipse.strokeWidth / 2;\n        }\n        if (ry > ellipse.strokeWidth) {\n          ry -= ellipse.strokeWidth / 2;\n        }\n        ellipse.set({ rx: rx, ry: ry });\n\n        if (origX > pointer.x) {\n          ellipse.set({ originX: \"right\" });\n        } else {\n          ellipse.set({ originX: \"left\" });\n        }\n        if (origY > pointer.y) {\n          ellipse.set({ originY: \"bottom\" });\n        } else {\n          ellipse.set({ originY: \"top\" });\n        }\n        canvas.setActiveObject(ellipse);\n        //setNewRectangle(true);\n        newShape = true;\n        // Render the Canvas\n        canvas.renderAll();\n\n        // Save the canvas to State variable\n        const newCanvasState = canvas.toJSON();\n        setCanvasState(newCanvasState);\n        // Save state to History and Limit history depth to 32\n        setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      }\n    }\n    if (canvasTool === \"polygon\") {\n      if (newShape) {\n        pointer = canvas.getPointer(event);\n        polygon = new fabric.Polygon(\n          [\n            {\n              x: pointer.x,\n              y: pointer.y,\n            },\n            {\n              x: pointer.x + 1,\n              y: pointer.y + 1,\n            },\n          ],\n          {\n            fill: fill,\n            stroke: stroke,\n            perPixelTargetFind: true,\n            top: pointer.y,\n            left: pointer.x,\n            strokeWidth: strokeWidth,\n          }\n        );\n        canvas.add(polygon);\n        newShape = false;\n      } else {\n        pointer = canvas.getPointer(event);\n        polygon.points.push({\n          x: pointer.x,\n          y: pointer.y,\n        });\n        canvas.remove(polygon);\n        var obj = polygon.toObject();\n        delete obj.top;\n        delete obj.left;\n        polygon = new fabric.Polygon(polygon.points, obj);\n        canvas.add(polygon);\n        canvas.renderAll();\n      }\n\n      canvas.setActiveObject(polygon);\n      // Save the canvas to State variable\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Save state to History and Limit history depth to 32\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n    }\n  };\n \n  const handleMouseMove = (event) => {\n    if (newShape === true && canvasTool !== \"pen\") return;\n    //canvas.renderAll();\n    if (canvasTool === \"rect\") {\n      var pointer = canvas.getPointer(event);\n      if (origX > pointer.x) {\n        Rectangle.set({ left: Math.abs(pointer.x) });\n      }\n      if (origY > pointer.y) {\n        Rectangle.set({ top: Math.abs(pointer.y) });\n      }\n      Rectangle.set({ width: Math.abs(origX - pointer.x) });\n      Rectangle.set({ height: Math.abs(origY - pointer.y) });\n\n      canvas.renderAll();\n    }\n    if (canvasTool === \"line\") {\n      pointer = canvas.getPointer(event);\n      line.set({ x2: pointer.x, y2: pointer.y });\n      canvas.renderAll();\n    }\n    if (canvasTool === \"arrow\") {\n      pointer = canvas.getPointer(event);\n      line.set({\n        x2: pointer.x,\n        y2: pointer.y,\n      });\n      triangle.set({\n        left: pointer.x + deltaX,\n        top: pointer.y + deltaY,\n        angle: _FabricCalcArrowAngle(line.x1, line.y1, line.x2, line.y2),\n      });\n      canvas.renderAll();\n    }\n    if (canvasTool === \"polyline\") {\n      if (\n        lines[0] !== null &&\n        lines[0] !== undefined &&\n        drawingObject.type == \"roof\"\n      ) {\n        setStartingPoint(event);\n        lines[lineCounter - 1].set({\n          x2: x,\n          y2: y,\n        });\n        canvas.renderAll();\n      }\n    }\n    if (canvasTool === \"circle\") {\n      pointer = canvas.getPointer(event);\n      var radius =\n        Math.max(Math.abs(origY - pointer.y), Math.abs(origX - pointer.x)) / 2;\n      if (radius > circle.strokeWidth) {\n        radius -= circle.strokeWidth / 2;\n      }\n      circle.set({ radius: radius });\n\n      if (origX > pointer.x) {\n        circle.set({ originX: \"right\" });\n      } else {\n        circle.set({ originX: \"left\" });\n      }\n      if (origY > pointer.y) {\n        circle.set({ originY: \"bottom\" });\n      } else {\n        circle.set({ originY: \"top\" });\n      }\n      // Render the Canvas\n      canvas.renderAll();\n    }\n    if (canvasTool === \"ellipse\") {\n      pointer = canvas.getPointer(event);\n      var rx = Math.abs(origX - pointer.x) / 2;\n      var ry = Math.abs(origY - pointer.y) / 2;\n      if (rx > ellipse.strokeWidth) {\n        rx -= ellipse.strokeWidth / 2;\n      }\n      if (ry > ellipse.strokeWidth) {\n        ry -= ellipse.strokeWidth / 2;\n      }\n      ellipse.set({ rx: rx, ry: ry });\n\n      if (origX > pointer.x) {\n        ellipse.set({ originX: \"right\" });\n      } else {\n        ellipse.set({ originX: \"left\" });\n      }\n      if (origY > pointer.y) {\n        ellipse.set({ originY: \"bottom\" });\n      } else {\n        ellipse.set({ originY: \"top\" });\n      }\n\n      // Render the Canvas\n      canvas.renderAll();\n    }\n    if (canvasTool === \"polygon\") {\n      canvas.renderAll();\n    }\n  };\n */\n  function setStartingPoint(options) {\n    //var offset = canvasRef.current.offset();\n    // console.log(options.pageX);\n    // console.log(canvas._offset.left);\n    x = options.pageX - canvas._offset.left;\n    y = options.pageY - canvas._offset.top;\n  }\n  function makeRoof(roofPoints) {\n    var left = findLeftPaddingForRoof(roofPoints);\n    var top = findTopPaddingForRoof(roofPoints);\n    roofPoints.push(new Point(roofPoints[0].x, roofPoints[0].y));\n    var roof = new fabric.Polyline(roofPoints, {\n      fill: fill,\n      stroke: stroke,\n    });\n    roof.set({\n      left: left,\n      top: top,\n    });\n\n    return roof;\n  }\n  function findTopPaddingForRoof(roofPoints) {\n    var result = 999999;\n    for (var f = 0; f < lineCounter; f++) {\n      if (roofPoints[f].y < result) {\n        result = roofPoints[f].y;\n      }\n    }\n    return Math.abs(result);\n  }\n\n  function findLeftPaddingForRoof(roofPoints) {\n    var result = 999999;\n    for (var i = 0; i < lineCounter; i++) {\n      if (roofPoints[i].x < result) {\n        result = roofPoints[i].x;\n      }\n    }\n    return Math.abs(result);\n  }\n  const handleMouseDown = (event) => {\n    if (canvas.isDrawingMode) {\n      canvas.freeDrawingBrush.color = stroke;\n      canvas.freeDrawingBrush.width = strokeWidth;\n    }\n  };\n  /*\n  const handleMouseUp = (event) => {\n    //console.log(\"mouseup\");\n    if (canvas.isDrawingMode) {\n      canvas.renderAll();\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Save state to History and Limit history depth to 32\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      // }\n    }\n  };\n*/\n  const setShapeAttributes = (attributes) => {\n    var activeShape = canvas.getActiveObject();\n    if (activeShape) {\n      var Attributes = attributes || {};\n      activeShape.set({\n        strokeWidth: Attributes.strokeWidth || activeShape.strokeWidth,\n        stroke:\n          Attributes.stroke === \"nill\"\n            ? null\n            : Attributes.stroke || activeShape.stroke,\n        fill:\n          Attributes.fill === \"nill\"\n            ? null\n            : Attributes.fill || activeShape.fill,\n        opacity: Attributes.opacity / 100 || activeShape.opacity,\n        strokeDashArray:\n          Attributes.strokeDashArray || activeShape.strokeDashArray,\n        fontFamily: Attributes.fontFamily || activeShape.fontFamily,\n        fontSize: Attributes.fontSize || activeShape.fontSize,\n        fontWeight: Attributes.fontWeight || activeShape.fontWeight,\n        fontStyle: Attributes.fontStyle || activeShape.fontStyle,\n        textBackgroundColor:\n          Attributes.textBackgroundColor || activeShape.textBackgroundColor,\n      });\n      canvas.renderAll();\n      canvas.setActiveObject(activeShape);\n      // Save the canvas to State variable\n      // if (attributes.fill === undefined) {\n      const newCanvasState = canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Save state to History and Limit history depth to 32\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n      // }\n    }\n  };\n\n  function openHighlightHandler(colors) {\n    setHighlight(colors.color);\n  }\n  function closeHighlightHandler(colors) {\n    if (colors.color !== textHighlight) {\n      console.log(colors);\n      // var rgba = hexToRGB(colors.color, colors.alpha / 100);\n      setHighlight(colors.color);\n      setShapeAttributes({ textBackgroundColor: colors.color });\n    }\n  }\n  function openHandler(colors) {\n    setFillColor(colors.color);\n  }\n  function changeHandler(colors) {\n    //setFillColor(colors.color);\n    //setShapeAttributes({ fill: colors.color });\n    //console.log(colors);\n  }\n\n  function closeHandler(colors) {\n    if (colors.color !== fill) {\n      console.log(colors);\n      var rgba = hexToRGB(colors.color, colors.alpha / 100);\n      setFillColor(rgba);\n      setShapeAttributes({ fill: rgba });\n    }\n  }\n  function openStrokeHandler(colors) {\n    setStrokeColor(colors.color);\n  }\n  function closeStrokeHandler(colors) {\n    if (colors.color !== stroke) {\n      var rgba = hexToRGB(colors.color, colors.alpha / 100);\n      setStrokeColor(rgba);\n      setShapeAttributes({ stroke: rgba });\n    }\n  }\n  function freeHand(event) {\n    setCanvasTool(\"pen\");\n    canvas.isDrawingMode = 1;\n    canvas.freeDrawingBrush.color = stroke;\n    canvas.freeDrawingBrush.width = strokeWidth;\n    canvas.renderAll();\n  }\n\n  function deleteObjects() {\n    canvas.getActiveObjects().forEach((obj) => {\n      canvas.remove(obj);\n    });\n    canvas.discardActiveObject().renderAll();\n    const newCanvasState = canvas.toJSON();\n    setCanvasState(newCanvasState);\n    // Save state to History and Limit history depth to 32\n    setCanvasHistory((history) => [...history, newCanvasState].slice(-32));\n  }\n  function hexToRGB(hex, alpha) {\n    var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n\n  let url = \"#\";\n  return (\n    <div\n      // onMouseMove={handleMouseMove}\n      // onClick={handleMouseClick}\n      // onMouseDown={handleMouseDown}\n      //onMouseUp={handleMouseUp}\n      className=\"App\"\n    >\n      <div className={tbStyles.propBar}>\n        <a href={url}>\n          <button\n            className={tbStyles.buttontoolbar}\n            onClick={onUndo}\n            id=\"undo\"\n            disabled={canvasHistory[0] === canvasState}\n          >\n            <div className={tbStyles.tooltipDown}>\n              <img src=\"images/undo2.png\" alt=\"Undo\"></img>\n              <span className={tbStyles.tooltiptextDown}>Undo</span>\n            </div>\n          </button>\n          <button\n            className={tbStyles.buttontoolbar}\n            onClick={onRedo}\n            id=\"redo\"\n            disabled={canvasHistory[canvasHistory.length - 1] === canvasState}\n          >\n            <div className={tbStyles.tooltipDown}>\n              <img src=\"images/redo2.png\" alt=\"Redo\"></img>\n              <span className={tbStyles.tooltiptextDown}>Redo</span>\n            </div>\n          </button>\n          <button\n            className={tbStyles.buttontoolbar}\n            onClick={deleteObjects}\n            id=\"del\"\n          >\n            <div className={tbStyles.tooltipDown}>\n              <img src=\"images/delete2.png\" alt=\"Delete\"></img>\n              <span className={tbStyles.tooltiptextDown}>Delete</span>\n            </div>\n          </button>\n        </a>\n        <div className={tbStyles.dropdown}>\n          <button className={tbStyles.buttontoolbar} id=\"wList\">\n            <img src=\"images/lineWidth2.png\" alt=\"Line Width\"></img>\n            <div id=\"wlDropDown\" className={tbStyles.dropdowncontent}>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(1);\n                  setShapeAttributes({\n                    strokeWidth: 1,\n                  });\n                }}\n              >\n                <img src=\"images/stroke1.png\" alt=\"1\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(2);\n                  setShapeAttributes({\n                    strokeWidth: 2,\n                  });\n                }}\n              >\n                <img src=\"images/stroke2.png\" alt=\"2\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(4);\n                  setShapeAttributes({\n                    strokeWidth: 4,\n                  });\n                }}\n              >\n                <img src=\"images/stroke4.png\" alt=\"4\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(5);\n                  setShapeAttributes({\n                    strokeWidth: 5,\n                  });\n                }}\n              >\n                <img src=\"images/stroke5.png\" alt=\"5\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(10);\n                  setShapeAttributes({\n                    strokeWidth: 10,\n                  });\n                }}\n              >\n                <img src=\"images/stroke10.png\" alt=\"10\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(12);\n                  setShapeAttributes({\n                    strokeWidth: 12,\n                  });\n                }}\n              >\n                <img src=\"images/stroke12.png\" alt=\"12\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(15);\n                  setShapeAttributes({\n                    strokeWidth: 15,\n                  });\n                }}\n              >\n                <img src=\"images/stroke15.png\" alt=\"15\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(20);\n                  setShapeAttributes({\n                    strokeWidth: 20,\n                  });\n                }}\n              >\n                <img src=\"images/stroke20.png\" alt=\"20\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setStrokeWidth(25);\n                  setShapeAttributes({\n                    strokeWidth: 25,\n                  });\n                }}\n              >\n                <img src=\"images/stroke25.png\" alt=\"25\"></img>\n              </a>\n            </div>\n          </button>\n        </div>\n        <div className={tbStyles.dropdown}>\n          <button className={tbStyles.buttontoolbar} id=\"sList\">\n            <img src=\"images/LineStyle2.png\" alt=\"Line Style\"></img>\n            <div id=\"lsDropDown\" className={tbStyles.dropdowncontent}>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setDashSize(0);\n                  setGapSize(0);\n                  setShapeAttributes({\n                    strokeDashArray: [0, 0],\n                  });\n                }}\n              >\n                <img src=\"images/lineStyle1.png\" alt=\"1\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setDashSize(10);\n                  setGapSize(5);\n                  setShapeAttributes({\n                    strokeDashArray: [10, 5],\n                  });\n                }}\n              >\n                <img src=\"images/lineStyle2png.png\" alt=\"1\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setDashSize(10);\n                  setGapSize(5);\n                  setShapeAttributes({\n                    strokeDashArray: [10, 5],\n                  });\n                }}\n              >\n                <img src=\"images/lineStyle3.png\" alt=\"1\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setDashSize(20);\n                  setGapSize(5);\n                  setShapeAttributes({\n                    strokeDashArray: [20, 5],\n                  });\n                }}\n              >\n                <img src=\"images/lineStyle4.png\" alt=\"1\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setDashSize(20);\n                  setGapSize(10);\n                  setShapeAttributes({\n                    strokeDashArray: [20, 10],\n                  });\n                }}\n              >\n                <img src=\"images/lineStyle5.png\" alt=\"1\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setDashSize(5);\n                  setGapSize(5);\n                  setShapeAttributes({\n                    strokeDashArray: [5, 5],\n                  });\n                }}\n              >\n                <img src=\"images/lineStyle6.png\" alt=\"1\"></img>\n              </a>\n              <a\n                href={url}\n                onClick={(e) => {\n                  setDashSize(2);\n                  setGapSize(2);\n                  setShapeAttributes({\n                    strokeDashArray: [2, 2],\n                  });\n                }}\n              >\n                <img src=\"images/lineStyle7.png\" alt=\"1\"></img>\n              </a>\n            </div>\n          </button>\n        </div>\n        <button className={tbStyles.buttontoolbar} id=\"dropper\">\n          <div className={tbStyles.tooltipDown}>\n            <img src=\"images/dropper2.png\" alt=\"Pick a color\"></img>\n            <span className={tbStyles.tooltiptextDown}>Pick a color</span>\n          </div>\n        </button>\n        &nbsp;Stroke&nbsp;\n        <input\n          type=\"number\"\n          id=\"strokePoint\"\n          value={strokeWidth}\n          min=\"0\"\n          max=\"50\"\n          onChange={(e) => {\n            setStrokeWidth(+e.target.value);\n            setShapeAttributes({\n              strokeWidth: +e.target.value,\n            });\n          }}\n        ></input>\n        &nbsp;Dash&nbsp;\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"20\"\n          id=\"dashSize\"\n          value={dashSize}\n          onChange={(e) => {\n            setDashSize(+e.target.value);\n            setShapeAttributes({\n              strokeDashArray: [+e.target.value, +e.target.value],\n            });\n          }}\n        ></input>\n        &nbsp; Stroke\n        <ColorPicker\n          color={stroke}\n          alpha={100}\n          onOpen={openStrokeHandler}\n          onChange={changeHandler}\n          onClose={closeStrokeHandler}\n          placement=\"bottomLeft\"\n          className=\"some-class\"\n        >\n          <span className=\"rc-color-picker-trigger\" />\n        </ColorPicker>\n        &nbsp;\n        <button\n          id=\"noStroke\"\n          onClick={(e) => {\n            setStrokeColor(\"nill\");\n            setShapeAttributes({\n              stroke: \"nill\",\n            });\n          }}\n        >\n          <div className={tbStyles.tooltipDown}>\n            <img src=\"images/noStroke2.png\" alt=\"No stroke\"></img>\n            <span className={tbStyles.tooltiptextDown}>Set No Stroke</span>\n          </div>\n        </button>\n        &nbsp;Fill\n        <ColorPicker\n          color={fill}\n          alpha={100}\n          onOpen={openHandler}\n          onChange={changeHandler}\n          onClose={closeHandler}\n          placement=\"topLeft\"\n          className=\"some-class\"\n        >\n          <span className=\"rc-color-picker-trigger\" />\n        </ColorPicker>\n        &nbsp;\n        <button\n          id=\"noFill\"\n          onClick={(e) => {\n            setFillColor(\"nill\");\n            setShapeAttributes({\n              fill: \"nill\",\n            });\n          }}\n        >\n          <div className={tbStyles.tooltipDown}>\n            <img src=\"images/noFill2.png\" alt=\"No fill\"></img>\n            <span className={tbStyles.tooltiptextDown}>Set No Fill</span>\n          </div>\n        </button>\n        &nbsp;Opacity\n        <input\n          type=\"range\"\n          id=\"opacityRange\"\n          value={opacity}\n          onChange={(e) => {\n            setOpacity(e.target.value);\n            setShapeAttributes({\n              opacity: e.target.value,\n            });\n          }}\n        ></input>\n        &nbsp; Angle snap:\n        <input\n          type=\"checkbox\"\n          id=\"chkSnap\"\n          onChange={(e) => {\n            setSnap(e.target.value);\n          }}\n        ></input>\n        &nbsp;Font\n        <select\n          name=\"fonts\"\n          id=\"fonts\"\n          onChange={(e) => {\n            setFont(e.target.value);\n            setShapeAttributes({ fontFamily: e.target.value });\n          }}\n        ></select>\n        &nbsp;Size\n        <input\n          type=\"number\"\n          id=\"fontSize\"\n          value={fontSize}\n          min=\"0\"\n          max=\"100\"\n          onChange={(e) => {\n            setFontSize(+e.target.value);\n            setShapeAttributes({\n              fontSize: +e.target.value,\n            });\n          }}\n        ></input>\n        &nbsp;\n        <label>\n          FontWeight:\n          <select\n            value={fontWeight}\n            onChange={(e) => {\n              setFontWeight(e.target.value);\n              setShapeAttributes({\n                fontWeight: e.target.value,\n              });\n            }}\n          >\n            <option value=\"normal\">Normal</option>\n            <option value=\"bold\">Bold</option>\n          </select>\n        </label>\n        <label>\n          FontSyle:\n          <select\n            value={fontStyle}\n            onChange={(e) => {\n              setFontStyle(e.target.value);\n              setShapeAttributes({\n                fontStyle: e.target.value,\n              });\n            }}\n          >\n            <option value=\"regular\">Regular</option>\n            <option value=\"italic\">Italic</option>\n          </select>\n        </label>\n        &nbsp;HighlightText\n        <ColorPicker\n          color={textHighlight}\n          alpha={100}\n          onOpen={openHighlightHandler}\n          onChange={changeHandler}\n          onClose={closeHighlightHandler}\n          placement=\"topLeft\"\n          className=\"some-class\"\n        >\n          <span className=\"rc-color-picker-trigger\" />\n        </ColorPicker>\n      </div>\n\n      <div className={styles.right}>\n        <div className={styles.tab}>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"select\");\n            }}\n            id=\"defaultSelect\"\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Select2.png\"} alt=\"Select\"></img>\n              <span className={styles.tooltiptext}>Selection</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"text\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/TextBox2.png\"} alt=\"TextBox\"></img>\n              <span className={styles.tooltiptext}>Text</span>\n            </div>\n          </button>\n          <button onClick={freeHand}>\n            <div className={styles.tooltip}>\n              <img src={\"images/PenTool2.png\"} alt=\"Pen\"></img>\n              <span className={styles.tooltiptext}>Free-hand</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"cloud\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Cloud2.png\"} alt=\"Cloud\"></img>\n              <span className={styles.tooltiptext}>Cloud</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"callout\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/CallOut2.png\"} alt=\"Callout\"></img>\n              <span className={styles.tooltiptext}>Callout</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"image\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Image2.png\"} alt=\"Image Edit\"></img>\n              <span className={styles.tooltiptext}>Image Edit</span>\n            </div>\n          </button>\n          <div className={styles.tabspace}></div>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"line\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Line2.png\"} alt=\"Line\"></img>\n              <span className={styles.tooltiptext}>Line</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"polyline\");\n              initPolyline();\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Polyline2.png\"} alt=\"Polyline\"></img>\n              <span className={styles.tooltiptext}>Polyline</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"arrow\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Arrow2.png\"} alt=\"Arrow\"></img>\n              <span className={styles.tooltiptext}>Arrow</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"arc\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Arc2.png\"} alt=\"Arc\"></img>\n              <span className={styles.tooltiptext}>Arc</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"rect\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Rectangle2.png\"} alt=\"Rectangle\"></img>\n              <span className={styles.tooltiptext}>Rectangle</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"polygon\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Polygon2.png\"} alt=\"Polygon\"></img>\n              <span className={styles.tooltiptext}>Polygon</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"rpolygon\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/RPolygon2.png\"} alt=\"Regular Polygon\"></img>\n              <span className={styles.tooltiptext}>Regular Polygon</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"circle\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Circle2.png\"} alt=\"Circle\"></img>\n              <span className={styles.tooltiptext}>Circle</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"ellipse\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Ellipse2.png\"} alt=\"Ellipse\"></img>\n              <span className={styles.tooltiptext}>Ellipse</span>\n            </div>\n          </button>\n          <div className={styles.tabspace}></div>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"dimension\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Dimension2.png\"} alt=\"Dimension\"></img>\n              <span className={styles.tooltiptext}>Dimension</span>\n            </div>\n          </button>\n\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"area\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Area2.png\"} alt=\"Area\"></img>\n              <span className={styles.tooltiptext}>Area</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"length\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Length2.png\"} alt=\"Length\"></img>\n              <span className={styles.tooltiptext}>Length</span>\n            </div>\n          </button>\n          <button\n            onClick={(e) => {\n              canvas.isDrawingMode = false;\n              setCanvasTool(\"perimeter\");\n            }}\n          >\n            <div className={styles.tooltip}>\n              <img src={\"images/Perimeter2.png\"} alt=\"Perimeter\"></img>\n              <span className={styles.tooltiptext}>Perimeter</span>\n            </div>\n          </button>\n        </div>\n      </div>\n      <canvas\n        ref={canvasRef}\n        id=\"my-fabric-canvas\"\n        width=\"1191\"\n        height=\"842\"\n      ></canvas>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}