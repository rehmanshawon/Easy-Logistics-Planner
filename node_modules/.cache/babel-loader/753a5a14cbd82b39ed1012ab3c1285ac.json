{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport config from \"./config\";\nconst {\n  squareSize,\n  barSize\n} = config;\n\nconst usePaintHue = canvas => {\n  _s();\n\n  useEffect(() => {\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.rect(0, 0, squareSize, barSize);\n    const gradient = ctx.createLinearGradient(0, 0, squareSize, 0);\n\n    for (let i = 0; i <= 360; i += 30) {\n      gradient.addColorStop(i / 360, `hsl(${i}, 100%, 50%)`);\n    }\n\n    ctx.fillStyle = gradient;\n    ctx.fill();\n  }, [canvas]);\n};\n\n_s(usePaintHue, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default usePaintHue;","map":{"version":3,"sources":["C:/Tutorials/elp-app/src/components/Picker/usePaintHue.js"],"names":["React","useEffect","config","squareSize","barSize","usePaintHue","canvas","ctx","current","getContext","rect","gradient","createLinearGradient","i","addColorStop","fillStyle","fill"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAM;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAA0BF,MAAhC;;AAEA,MAAMG,WAAW,GAAGC,MAAM,IAAI;AAAA;;AAC5BL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,GAAG,GAAGD,MAAM,CAACE,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAZ;AACAF,IAAAA,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAeP,UAAf,EAA2BC,OAA3B;AAEA,UAAMO,QAAQ,GAAGJ,GAAG,CAACK,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+BT,UAA/B,EAA2C,CAA3C,CAAjB;;AACA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,IAAI,EAA/B,EAAmC;AACjCF,MAAAA,QAAQ,CAACG,YAAT,CAAsBD,CAAC,GAAG,GAA1B,EAAgC,OAAMA,CAAE,cAAxC;AACD;;AACDN,IAAAA,GAAG,CAACQ,SAAJ,GAAgBJ,QAAhB;AACAJ,IAAAA,GAAG,CAACS,IAAJ;AACD,GAVQ,EAUN,CAACV,MAAD,CAVM,CAAT;AAWD,CAZD;;GAAMD,W;;AAcN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport config from \"./config\"\r\n\r\nconst { squareSize, barSize } = config\r\n\r\nconst usePaintHue = canvas => {\r\n  useEffect(() => {\r\n    const ctx = canvas.current.getContext(\"2d\")\r\n    ctx.rect(0, 0, squareSize, barSize)\r\n\r\n    const gradient = ctx.createLinearGradient(0, 0, squareSize, 0)\r\n    for (let i = 0; i <= 360; i += 30) {\r\n      gradient.addColorStop(i / 360, `hsl(${i}, 100%, 50%)`)\r\n    }\r\n    ctx.fillStyle = gradient\r\n    ctx.fill()\r\n  }, [canvas])\r\n}\r\n\r\nexport default usePaintHue\r\n"]},"metadata":{},"sourceType":"module"}