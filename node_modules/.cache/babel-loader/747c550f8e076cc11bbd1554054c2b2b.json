{"ast":null,"code":"var _jsxFileName = \"C:\\\\Tutorials\\\\elp-app\\\\src\\\\components\\\\Picker\\\\Square.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport throttle from \"lodash.throttle\";\nimport { convertRGBtoHSL } from \"./utils\";\nimport Svg from \"./Svg\";\nimport usePaintSquare from \"./usePaintSquare\";\nimport config from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  squareSize,\n  crossSize,\n  delay\n} = config;\nexport const SquareWrapper = styled.div`\n  position: relative;\n  width: ${squareSize + \"px\"};\n  height: ${squareSize + \"px\"};\n  cursor: crosshair;\n`;\n_c = SquareWrapper;\nexport const Canvas = styled.canvas.attrs(p => ({\n  width: squareSize,\n  height: squareSize\n}))``;\n_c2 = Canvas;\nexport const Cross = styled.div.attrs(p => ({\n  style: {\n    top: p.top + \"px\",\n    left: p.left + \"px\",\n    width: crossSize + \"px\",\n    height: crossSize + \"px\",\n    transition: p.animate ? \"top .2s ease-out, left .2s ease-out\" : \"0s\"\n  }\n}))`\n  position: absolute;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n_c3 = Cross;\n\nconst Square = ({\n  hue,\n  squareXY,\n  animate,\n  setSquare,\n  offsetTop,\n  offsetLeft,\n  setSquareXY,\n  setAnimate\n}) => {\n  _s();\n\n  const square = useRef(null);\n  const canvas = useRef(null);\n  usePaintSquare(canvas, hue);\n  useEffect(() => {\n    const canvasRef = canvas.current;\n    const ctx = canvasRef.getContext(\"2d\");\n\n    function computePosition(e) {\n      const x = Math.max(crossSize / -2, Math.min(e.clientX - offsetLeft - crossSize + 2.5, squareSize - crossSize / 2));\n      const y = Math.max(crossSize / -2, Math.min(e.clientY - offsetTop - crossSize + 2.5, squareSize - crossSize / 2));\n      return [x, y];\n    }\n\n    function changeColor(e) {\n      const [x, y] = computePosition(e);\n      const x1 = Math.min(x + crossSize / 2, squareSize - 1);\n      const y1 = Math.min(y + crossSize / 2, squareSize - 1);\n      const [r, g, b] = ctx.getImageData(x1, y1, 1, 1).data;\n      const [h, s, l] = convertRGBtoHSL([r, g, b]);\n      setSquare([s, l]);\n      setSquareXY([x, y]);\n    }\n\n    const onMouseMove = throttle(e => {\n      changeColor(e);\n    }, delay);\n\n    function onMouseUp(e) {\n      changeColor(e);\n      document.body.removeEventListener(\"mousemove\", onMouseMove);\n      document.body.removeEventListener(\"mouseup\", onMouseUp);\n    }\n\n    function onMouseDown(e) {\n      setAnimate(false);\n      document.body.addEventListener(\"mousemove\", onMouseMove);\n      document.body.addEventListener(\"mouseup\", onMouseUp);\n    }\n\n    canvasRef.addEventListener(\"mousedown\", onMouseDown);\n    return () => {\n      canvasRef.removeEventListener(\"mousedown\", onMouseDown);\n    };\n  }, [offsetTop, offsetLeft, setSquare, setSquareXY, setAnimate]);\n  return /*#__PURE__*/_jsxDEV(SquareWrapper, {\n    ref: square,\n    children: [/*#__PURE__*/_jsxDEV(Cross, {\n      top: squareXY[1],\n      left: squareXY[0],\n      animate: animate,\n      children: /*#__PURE__*/_jsxDEV(Svg, {\n        name: \"cross\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Square, \"mIjb7zZ0qlepcvmgdpH1zE82zRQ=\", false, function () {\n  return [usePaintSquare];\n});\n\n_c4 = Square;\nexport default Square;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SquareWrapper\");\n$RefreshReg$(_c2, \"Canvas\");\n$RefreshReg$(_c3, \"Cross\");\n$RefreshReg$(_c4, \"Square\");","map":{"version":3,"sources":["C:/Tutorials/elp-app/src/components/Picker/Square.js"],"names":["React","useRef","useEffect","styled","throttle","convertRGBtoHSL","Svg","usePaintSquare","config","squareSize","crossSize","delay","SquareWrapper","div","Canvas","canvas","attrs","p","width","height","Cross","style","top","left","transition","animate","Square","hue","squareXY","setSquare","offsetTop","offsetLeft","setSquareXY","setAnimate","square","canvasRef","current","ctx","getContext","computePosition","e","x","Math","max","min","clientX","y","clientY","changeColor","x1","y1","r","g","b","getImageData","data","h","s","l","onMouseMove","onMouseUp","document","body","removeEventListener","onMouseDown","addEventListener"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport throttle from \"lodash.throttle\"\r\nimport { convertRGBtoHSL } from \"./utils\"\r\nimport Svg from \"./Svg\"\r\nimport usePaintSquare from \"./usePaintSquare\"\r\nimport config from \"./config\"\r\n\r\nconst { squareSize, crossSize, delay } = config\r\n\r\nexport const SquareWrapper = styled.div`\r\n  position: relative;\r\n  width: ${squareSize + \"px\"};\r\n  height: ${squareSize + \"px\"};\r\n  cursor: crosshair;\r\n`\r\n\r\nexport const Canvas = styled.canvas.attrs(p => ({\r\n  width: squareSize,\r\n  height: squareSize\r\n}))``\r\n\r\nexport const Cross = styled.div.attrs(p => ({\r\n  style: {\r\n    top: p.top + \"px\",\r\n    left: p.left + \"px\",\r\n    width: crossSize + \"px\",\r\n    height: crossSize + \"px\",\r\n    transition: p.animate ? \"top .2s ease-out, left .2s ease-out\" : \"0s\"\r\n  }\r\n}))`\r\n  position: absolute;\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst Square = ({\r\n  hue,\r\n  squareXY,\r\n  animate,\r\n  setSquare,\r\n  offsetTop,\r\n  offsetLeft,\r\n  setSquareXY,\r\n  setAnimate\r\n}) => {\r\n  const square = useRef(null)\r\n  const canvas = useRef(null)\r\n\r\n  usePaintSquare(canvas, hue)\r\n\r\n  useEffect(() => {\r\n    const canvasRef = canvas.current\r\n    const ctx = canvasRef.getContext(\"2d\")\r\n\r\n    function computePosition(e) {\r\n      const x = Math.max(\r\n        crossSize / -2,\r\n        Math.min(\r\n          e.clientX - offsetLeft - crossSize + 2.5,\r\n          squareSize - crossSize / 2\r\n        )\r\n      )\r\n      const y = Math.max(\r\n        crossSize / -2,\r\n        Math.min(\r\n          e.clientY - offsetTop - crossSize + 2.5,\r\n          squareSize - crossSize / 2\r\n        )\r\n      )\r\n\r\n      return [x, y]\r\n    }\r\n\r\n    function changeColor(e) {\r\n      const [x, y] = computePosition(e)\r\n      const x1 = Math.min(x + crossSize / 2, squareSize - 1)\r\n      const y1 = Math.min(y + crossSize / 2, squareSize - 1)\r\n      const [r, g, b] = ctx.getImageData(x1, y1, 1, 1).data\r\n      const [h, s, l] = convertRGBtoHSL([r, g, b])\r\n      setSquare([s, l])\r\n      setSquareXY([x, y])\r\n    }\r\n\r\n    const onMouseMove = throttle(e => {\r\n      changeColor(e)\r\n    }, delay)\r\n\r\n    function onMouseUp(e) {\r\n      changeColor(e)\r\n      document.body.removeEventListener(\"mousemove\", onMouseMove)\r\n      document.body.removeEventListener(\"mouseup\", onMouseUp)\r\n    }\r\n\r\n    function onMouseDown(e) {\r\n      setAnimate(false)\r\n      document.body.addEventListener(\"mousemove\", onMouseMove)\r\n      document.body.addEventListener(\"mouseup\", onMouseUp)\r\n    }\r\n\r\n    canvasRef.addEventListener(\"mousedown\", onMouseDown)\r\n\r\n    return () => {\r\n      canvasRef.removeEventListener(\"mousedown\", onMouseDown)\r\n    }\r\n  }, [offsetTop, offsetLeft, setSquare, setSquareXY, setAnimate])\r\n\r\n  return (\r\n    <SquareWrapper ref={square}>\r\n      <Cross top={squareXY[1]} left={squareXY[0]} animate={animate}>\r\n        <Svg name=\"cross\" />\r\n      </Cross>\r\n      <Canvas ref={canvas} />\r\n    </SquareWrapper>\r\n  )\r\n}\r\n\r\nexport default Square\r\n"]},"metadata":{},"sourceType":"module"}