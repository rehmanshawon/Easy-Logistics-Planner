{"ast":null,"code":"var _jsxFileName = \"C:\\\\Tutorials\\\\elp-app\\\\src\\\\components\\\\Picker\\\\Picker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { parseHSL, convertHSLToRGB, copyToClipboard, RGBAToHSLA } from \"./utils\";\nimport Modal from \"./Modal\";\nimport Hue from \"./Hue\";\nimport Square from \"./Square\";\nimport Input from \"./Input\";\nimport Alpha from \"./Alpha\";\nimport Svg from \"./Svg\";\nimport Menu from \"./Menu\";\nimport config from \"./config\";\nimport imgNone from \"./../../images/no.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultColors = Array.from({\n  length: 10\n}, () => \"\");\nconst {\n  squareSize,\n  barSize,\n  crossSize,\n  inputSize,\n  outputSize,\n  colorsSize\n} = config;\nexport const PickerWrapper = styled.div`\n  user-select: none;\n`;\n_c = PickerWrapper;\nexport const SwatchWrapper = styled.div.attrs(p => ({\n  style: {\n    backgroundColor: p.color,\n    backgroundImage: p.color !== \"nill\" ? \"none\" : `url(${p.bg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\"\n  }\n}))`\n  width: 50px;\n  height: 20px;\n  display: inline-block;\n  cursor: pointer;\n`;\n_c2 = SwatchWrapper;\nexport const PickerOuter = styled.div`\n  width: ${squareSize + 20}px;\n  display: grid;\n  border-radius: 2px;\n  background: #ffffff;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);\n`;\n_c3 = PickerOuter;\nexport const PickerInner = styled.div.attrs(p => ({\n  style: {\n    gridTemplateRows: p.showColors ? `${squareSize + 20}px ${barSize}px ${barSize + 10}px ${inputSize}px ${outputSize}px ${colorsSize}px` : `${squareSize + 20}px ${barSize}px ${barSize + 10}px ${inputSize}px ${outputSize}px`\n  }\n}))`\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n_c4 = PickerInner;\nexport const Inputs = styled.div`\n  align-self: flex-end;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  align-items: center;\n  justify-items: center;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n_c5 = Inputs;\nexport const Outputs = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 10px;\n  justify-items: center;\n  padding-left: 10px;\n  padding-right: 10px;\n  .arrow {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    &:hover svg {\n      fill: #333333;\n    }\n    svg {\n      width: 12px;\n      height: 12px;\n      fill: #606060;\n    }\n  }\n  .noColor {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    &:hover svg {\n      fill: #dd0000;\n    }\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n_c6 = Outputs;\nexport const OutputText = styled.div`\n  align-self: center;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  align-items: center;\n  border: 1px solid #ddd;\n  .cycle {\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    svg {\n      width: 12px;\n      height: 12px;\n      fill: #606060;\n    }\n  }\n  input {\n    justify-self: flex-start;\n    width: 100%;\n    text-align: center;\n    font-family: monospace;\n    font-size: 15px;\n    outline: 0;\n    border: 0;\n    padding: 4px 2px;\n    cursor: auto;\n    &::selection {\n      background: transparent;\n    }\n  }\n`;\n_c7 = OutputText;\nexport const Colors = styled.div`\n  width: 100%;\n  height: ${colorsSize}px;\n  display: ${p => p.show ? \"grid\" : \"none\"};\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: 1fr 1fr;\n  align-items: center;\n  justify-items: center;\n  padding-bottom: 5px;\n`;\n_c8 = Colors;\nexport const Color = styled.div`\n  width: 30px;\n  height: 30px;\n  background: ${p => p.color || \"#fafafa\"};\n  border: 1px solid #ddd;\n`;\n_c9 = Color;\nexport const ColorAction = styled.div.attrs(p => ({\n  style: {\n    gridColumn: p.col,\n    gridRow: p.row\n  }\n}))`\n  width: 25px;\n  height: 25px;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  font-size: 14px;\n  svg {\n    width: 12px;\n    height: 12px;\n    fill: #606060;\n  }\n`;\n_c10 = ColorAction;\n\nfunction computeHueX(h) {\n  return Math.round(squareSize / 360 * h - barSize / 2);\n}\n\nfunction computeSquareXY(s, l) {\n  const t = s * (l < 50 ? l : 100 - l) / 100;\n  const s1 = Math.round(200 * t / (l + t)) | 0;\n  const b1 = Math.round(t + l);\n  const x = squareSize / 100 * s1 - crossSize / 2;\n  const y = squareSize - squareSize / 100 * b1 - crossSize / 2;\n  return [x, y];\n}\n\nfunction computeAlphaX(a) {\n  return Math.round(squareSize / 100 * a - barSize / 2);\n}\n\nconst Picker = /*#__PURE__*/forwardRef(_c11 = _s(({\n  swatchStyle,\n  setPickerColor,\n  strokeColor\n}, ref) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [position, setPosition] = useState([0, 0]);\n  const [hue, setHue] = useState(180);\n  const [hueX, setHueX] = useState(() => squareSize / 2 - barSize / 2);\n  const [square, setSquare] = useState([100, 50]);\n  const [squareXY, setSquareXY] = useState(() => [squareSize - crossSize / 2, crossSize / -2]);\n  const [alpha, setAlpha] = useState(100);\n  const [alphaX, setAlphaX] = useState(squareSize - barSize / 2);\n  const [offsetTop, setOffsetTop] = useState(0);\n  const [offsetLeft, setOffsetLeft] = useState(0);\n  const [color, setColor] = useState(`hsla(180, 100%, 50%, 1)`);\n  const [outputFormat, setOutputFormat] = useState(\"hsla\");\n  const [copied, setCopied] = useState(false);\n  const [animate, setAnimate] = useState(false);\n  const [showColors, setShowColors] = useState(false);\n  const [colors, setColors] = useState(defaultColors);\n  const [showMenu, setShowMenu] = useState(false);\n  const [positionMenu, setPositionMenu] = useState([0, 0]);\n  const [swatchBG, setSwatchBG] = useState(\"\");\n  const modalPicker = useRef(null);\n  const modalMenu = useRef(null);\n\n  const setActiveStrokeColor = strokeColor => {\n    //console.log(\"calling child fn... params are: \", strokeColor);\n    let c = RGBAToHSLA(strokeColor);\n    setColor(c);\n  };\n\n  ref.current = setActiveStrokeColor;\n  useEffect(() => {\n    let initalColors = JSON.parse(window.localStorage.getItem(\"colors\")) || defaultColors;\n    setColors(initalColors); //activeObjectStrokeRef.current = changeColor;\n  }, []); // function changeColor() {\n  //   console.log(\"I was called\");\n  //   console.log(strokeColor);\n  //   RGBAToHSLA(strokeColor);\n  //   setColor(strokeColor);\n  // }\n\n  useEffect(() => {\n    window.localStorage.setItem(\"colors\", JSON.stringify(colors));\n  }, [colors]);\n  useEffect(() => {\n    function onResize() {\n      const {\n        innerWidth,\n        innerHeight\n      } = window;\n      const x = innerWidth / 2 - (squareSize + 20) / 2;\n      const y = innerHeight / 2 - (squareSize + 20 + barSize + barSize + 5 + inputSize + outputSize + colorsSize) / 2;\n      setPosition([x, y]);\n      setOffsetTop(modalPicker.current.offsetTop);\n      setOffsetLeft(modalPicker.current.offsetLeft);\n    }\n\n    if (modalPicker.current) {\n      onResize();\n      window.addEventListener(\"resize\", onResize);\n    } else {\n      window.removeEventListener(\"resize\", onResize);\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [show]);\n  useEffect(() => {\n    let id;\n\n    if (copied) {\n      id = setTimeout(() => setCopied(false), 4000);\n    }\n\n    return () => {\n      clearTimeout(id);\n    };\n  }, [copied]);\n  useEffect(() => {\n    setColor(`hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`);\n    let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba); //let { red, green, blue, a } = convertHSLToRGB(parseHSL(c));\n    //console.log(red, green, blue, a);\n  }, [hue, square, alpha, setPickerColor]);\n\n  function onHueChange(n) {\n    setAnimate(true);\n    setHue(n);\n    setHueX(computeHueX(n));\n    let c = `hsla(${n}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function onSaturationChange(n) {\n    setAnimate(true);\n    setSquare([n, square[1]]);\n    setSquareXY(computeSquareXY(n, square[1]));\n    let c = `hsla(${hue}, ${n}%, ${square[1]}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function onLightnessChange(n) {\n    setAnimate(true);\n    setSquare([square[0], n]);\n    setSquareXY(computeSquareXY(square[0], n));\n    let c = `hsla(${hue}, ${square[0]}%, ${n}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function onAlphaChange(n) {\n    setAnimate(true);\n    setAlpha(n);\n    setAlphaX(computeAlphaX(n));\n    let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${n})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function addColor() {\n    let index = colors.findIndex(c => !c);\n\n    if (index !== -1) {\n      let newColors = colors.slice();\n      newColors[index] = color;\n      setColors(newColors);\n    }\n  }\n\n  function removeColor(e, i) {\n    e.preventDefault();\n    let shouldRemove = window.confirm(\"Delete color?\");\n\n    if (shouldRemove) {\n      let newColors = colors.slice();\n      newColors.splice(i, 1, \"\");\n      setColors(newColors);\n    }\n  }\n\n  function resetColors() {\n    let shouldReset = window.confirm(\"Delete all colors?\");\n\n    if (shouldReset) {\n      setColors(defaultColors);\n      setShowMenu(false);\n    }\n  }\n\n  function onColorClick(c) {\n    if (c) {\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n      let [h, s, l, a] = parseHSL(c);\n      onHueChange(h);\n      setSquare([s, l]);\n      setSquareXY(computeSquareXY(s, l));\n      onAlphaChange(a * 100);\n      copyToClipboard(formatOutput(c));\n      setCopied(true);\n    }\n  }\n\n  function formatOutput(c) {\n    if (outputFormat === \"hsla\") return c;else if (outputFormat === \"rgba\") return convertHSLToRGB(parseHSL(c)).rgba;else if (outputFormat === \"hexa\") return convertHSLToRGB(parseHSL(c)).hexa;\n  }\n\n  function cycleFormat() {\n    setOutputFormat(curr => curr === \"hsla\" ? \"rgba\" : curr === \"rgba\" ? \"hexa\" : \"hsla\");\n  }\n\n  function openMenu(e) {\n    const {\n      clientX,\n      clientY\n    } = e;\n    setPositionMenu([clientX + 20, clientY - 100]);\n    setShowMenu(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PickerWrapper, {\n      color: color,\n      children: [/*#__PURE__*/_jsxDEV(SwatchWrapper, {\n        styles: swatchStyle,\n        color: color,\n        bg: swatchBG,\n        onClick: () => setShow(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modalPicker,\n        show: show,\n        position: position,\n        zIndex: 2,\n        backdrop: true,\n        animate: true,\n        onClose: () => setShow(false),\n        children: /*#__PURE__*/_jsxDEV(PickerOuter, {\n          children: /*#__PURE__*/_jsxDEV(PickerInner, {\n            showColors: showColors,\n            children: [/*#__PURE__*/_jsxDEV(Square, {\n              hue: hue,\n              squareXY: squareXY,\n              offsetTop: offsetTop,\n              offsetLeft: offsetLeft,\n              animate: animate,\n              setSquare: setSquare,\n              setSquareXY: setSquareXY,\n              setAnimate: setAnimate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Hue, {\n              hueX: hueX,\n              offsetLeft: offsetLeft,\n              animate: animate,\n              setHueX: setHueX,\n              setHue: setHue,\n              setAnimate: setAnimate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Alpha, {\n              hue: hue,\n              alphaX: alphaX,\n              offsetLeft: offsetLeft,\n              animate: animate,\n              setAlpha: setAlpha,\n              setAlphaX: setAlphaX,\n              setAnimate: setAnimate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"H\",\n                value: hue,\n                min: 0,\n                max: 360,\n                defaultValue: 180,\n                setValue: onHueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"S\",\n                value: square[0],\n                min: 0,\n                max: 100,\n                defaultValue: 100,\n                setValue: onSaturationChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"L\",\n                value: square[1],\n                min: 0,\n                max: 100,\n                defaultValue: 50,\n                setValue: onLightnessChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"A\",\n                value: alpha,\n                min: 0,\n                max: 100,\n                defaultValue: 100,\n                setValue: onAlphaChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Outputs, {\n              children: /*#__PURE__*/_jsxDEV(OutputText, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cycle\",\n                  onClick: cycleFormat,\n                  children: /*#__PURE__*/_jsxDEV(Svg, {\n                    name: \"refresh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: copied ? \"Copied...\" : formatOutput(color),\n                  readOnly: true,\n                  onClick: () => onColorClick(color)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Colors, {\n              show: true,\n              children: [colors.map((c, i) => /*#__PURE__*/_jsxDEV(Color, {\n                color: c,\n                onClick: () => onColorClick(c),\n                onContextMenu: e => removeColor(e, i)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(ColorAction, {\n                col: 6,\n                row: 1,\n                onClick: addColor,\n                children: /*#__PURE__*/_jsxDEV(Svg, {\n                  name: \"add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ColorAction, {\n                col: 6,\n                row: 2,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setSwatchBG(imgNone);\n                    setColor(\"nill\");\n                    setPickerColor(\"nill\"); //console.log(\"clicked\");\n                  },\n                  children: \"none\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modalMenu,\n        show: showMenu,\n        position: positionMenu,\n        zIndex: 4,\n        backdrop: false,\n        animate: false,\n        onClose: () => setShowMenu(false),\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          resetColors: resetColors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"IfdUmKBeyM1/EcDpO3VizvfbUC8=\"));\n_c12 = Picker;\nexport default Picker;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"PickerWrapper\");\n$RefreshReg$(_c2, \"SwatchWrapper\");\n$RefreshReg$(_c3, \"PickerOuter\");\n$RefreshReg$(_c4, \"PickerInner\");\n$RefreshReg$(_c5, \"Inputs\");\n$RefreshReg$(_c6, \"Outputs\");\n$RefreshReg$(_c7, \"OutputText\");\n$RefreshReg$(_c8, \"Colors\");\n$RefreshReg$(_c9, \"Color\");\n$RefreshReg$(_c10, \"ColorAction\");\n$RefreshReg$(_c11, \"Picker$forwardRef\");\n$RefreshReg$(_c12, \"Picker\");","map":{"version":3,"sources":["C:/Tutorials/elp-app/src/components/Picker/Picker.js"],"names":["React","useState","useRef","useEffect","forwardRef","styled","parseHSL","convertHSLToRGB","copyToClipboard","RGBAToHSLA","Modal","Hue","Square","Input","Alpha","Svg","Menu","config","imgNone","defaultColors","Array","from","length","squareSize","barSize","crossSize","inputSize","outputSize","colorsSize","PickerWrapper","div","SwatchWrapper","attrs","p","style","backgroundColor","color","backgroundImage","bg","backgroundRepeat","backgroundSize","PickerOuter","PickerInner","gridTemplateRows","showColors","Inputs","Outputs","OutputText","Colors","show","Color","ColorAction","gridColumn","col","gridRow","row","computeHueX","h","Math","round","computeSquareXY","s","l","t","s1","b1","x","y","computeAlphaX","a","Picker","swatchStyle","setPickerColor","strokeColor","ref","setShow","position","setPosition","hue","setHue","hueX","setHueX","square","setSquare","squareXY","setSquareXY","alpha","setAlpha","alphaX","setAlphaX","offsetTop","setOffsetTop","offsetLeft","setOffsetLeft","setColor","outputFormat","setOutputFormat","copied","setCopied","animate","setAnimate","setShowColors","colors","setColors","showMenu","setShowMenu","positionMenu","setPositionMenu","swatchBG","setSwatchBG","modalPicker","modalMenu","setActiveStrokeColor","c","current","initalColors","JSON","parse","window","localStorage","getItem","setItem","stringify","onResize","innerWidth","innerHeight","addEventListener","removeEventListener","id","setTimeout","clearTimeout","rgba","onHueChange","n","onSaturationChange","onLightnessChange","onAlphaChange","addColor","index","findIndex","newColors","slice","removeColor","e","i","preventDefault","shouldRemove","confirm","splice","resetColors","shouldReset","onColorClick","formatOutput","hexa","cycleFormat","curr","openMenu","clientX","clientY","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, forwardRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  parseHSL,\r\n  convertHSLToRGB,\r\n  copyToClipboard,\r\n  RGBAToHSLA,\r\n} from \"./utils\";\r\nimport Modal from \"./Modal\";\r\nimport Hue from \"./Hue\";\r\nimport Square from \"./Square\";\r\nimport Input from \"./Input\";\r\nimport Alpha from \"./Alpha\";\r\nimport Svg from \"./Svg\";\r\nimport Menu from \"./Menu\";\r\nimport config from \"./config\";\r\nimport imgNone from \"./../../images/no.png\";\r\n\r\nconst defaultColors = Array.from({ length: 10 }, () => \"\");\r\n\r\nconst { squareSize, barSize, crossSize, inputSize, outputSize, colorsSize } =\r\n  config;\r\n\r\nexport const PickerWrapper = styled.div`\r\n  user-select: none;\r\n`;\r\n\r\nexport const SwatchWrapper = styled.div.attrs((p) => ({\r\n  style: {\r\n    backgroundColor: p.color,\r\n    backgroundImage: p.color !== \"nill\" ? \"none\" : `url(${p.bg})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n}))`\r\n  width: 50px;\r\n  height: 20px;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const PickerOuter = styled.div`\r\n  width: ${squareSize + 20}px;\r\n  display: grid;\r\n  border-radius: 2px;\r\n  background: #ffffff;\r\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nexport const PickerInner = styled.div.attrs((p) => ({\r\n  style: {\r\n    gridTemplateRows: p.showColors\r\n      ? `${squareSize + 20}px ${barSize}px ${\r\n          barSize + 10\r\n        }px ${inputSize}px ${outputSize}px ${colorsSize}px`\r\n      : `${squareSize + 20}px ${barSize}px ${\r\n          barSize + 10\r\n        }px ${inputSize}px ${outputSize}px`,\r\n  },\r\n}))`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport const Inputs = styled.div`\r\n  align-self: flex-end;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  align-items: center;\r\n  justify-items: center;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`;\r\n\r\nexport const Outputs = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 10px;\r\n  justify-items: center;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  .arrow {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    align-items: center;\r\n    justify-items: center;\r\n    &:hover svg {\r\n      fill: #333333;\r\n    }\r\n    svg {\r\n      width: 12px;\r\n      height: 12px;\r\n      fill: #606060;\r\n    }\r\n  }\r\n  .noColor {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    align-items: center;\r\n    justify-items: center;\r\n    &:hover svg {\r\n      fill: #dd0000;\r\n    }\r\n    svg {\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.div`\r\n  align-self: center;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 20px 1fr;\r\n  align-items: center;\r\n  border: 1px solid #ddd;\r\n  .cycle {\r\n    display: grid;\r\n    align-items: center;\r\n    justify-items: center;\r\n    svg {\r\n      width: 12px;\r\n      height: 12px;\r\n      fill: #606060;\r\n    }\r\n  }\r\n  input {\r\n    justify-self: flex-start;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-family: monospace;\r\n    font-size: 15px;\r\n    outline: 0;\r\n    border: 0;\r\n    padding: 4px 2px;\r\n    cursor: auto;\r\n    &::selection {\r\n      background: transparent;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Colors = styled.div`\r\n  width: 100%;\r\n  height: ${colorsSize}px;\r\n  display: ${(p) => (p.show ? \"grid\" : \"none\")};\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-template-rows: 1fr 1fr;\r\n  align-items: center;\r\n  justify-items: center;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nexport const Color = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  background: ${(p) => p.color || \"#fafafa\"};\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nexport const ColorAction = styled.div.attrs((p) => ({\r\n  style: {\r\n    gridColumn: p.col,\r\n    gridRow: p.row,\r\n  },\r\n}))`\r\n  width: 25px;\r\n  height: 25px;\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  font-size: 14px;\r\n  svg {\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: #606060;\r\n  }\r\n`;\r\n\r\nfunction computeHueX(h) {\r\n  return Math.round((squareSize / 360) * h - barSize / 2);\r\n}\r\n\r\nfunction computeSquareXY(s, l) {\r\n  const t = (s * (l < 50 ? l : 100 - l)) / 100;\r\n  const s1 = Math.round((200 * t) / (l + t)) | 0;\r\n  const b1 = Math.round(t + l);\r\n  const x = (squareSize / 100) * s1 - crossSize / 2;\r\n  const y = squareSize - (squareSize / 100) * b1 - crossSize / 2;\r\n  return [x, y];\r\n}\r\n\r\nfunction computeAlphaX(a) {\r\n  return Math.round((squareSize / 100) * a - barSize / 2);\r\n}\r\n\r\nconst Picker = forwardRef(\r\n  ({ swatchStyle, setPickerColor, strokeColor }, ref) => {\r\n    const [show, setShow] = useState(false);\r\n    const [position, setPosition] = useState([0, 0]);\r\n    const [hue, setHue] = useState(180);\r\n    const [hueX, setHueX] = useState(() => squareSize / 2 - barSize / 2);\r\n    const [square, setSquare] = useState([100, 50]);\r\n    const [squareXY, setSquareXY] = useState(() => [\r\n      squareSize - crossSize / 2,\r\n      crossSize / -2,\r\n    ]);\r\n    const [alpha, setAlpha] = useState(100);\r\n    const [alphaX, setAlphaX] = useState(squareSize - barSize / 2);\r\n    const [offsetTop, setOffsetTop] = useState(0);\r\n    const [offsetLeft, setOffsetLeft] = useState(0);\r\n    const [color, setColor] = useState(`hsla(180, 100%, 50%, 1)`);\r\n    const [outputFormat, setOutputFormat] = useState(\"hsla\");\r\n    const [copied, setCopied] = useState(false);\r\n    const [animate, setAnimate] = useState(false);\r\n    const [showColors, setShowColors] = useState(false);\r\n    const [colors, setColors] = useState(defaultColors);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [positionMenu, setPositionMenu] = useState([0, 0]);\r\n    const [swatchBG, setSwatchBG] = useState(\"\");\r\n    const modalPicker = useRef(null);\r\n    const modalMenu = useRef(null);\r\n    const setActiveStrokeColor = (strokeColor) => {\r\n      //console.log(\"calling child fn... params are: \", strokeColor);\r\n      let c = RGBAToHSLA(strokeColor);\r\n      setColor(c);\r\n    };\r\n\r\n    ref.current = setActiveStrokeColor;\r\n    useEffect(() => {\r\n      let initalColors =\r\n        JSON.parse(window.localStorage.getItem(\"colors\")) || defaultColors;\r\n      setColors(initalColors);\r\n      //activeObjectStrokeRef.current = changeColor;\r\n    }, []);\r\n\r\n    // function changeColor() {\r\n    //   console.log(\"I was called\");\r\n    //   console.log(strokeColor);\r\n    //   RGBAToHSLA(strokeColor);\r\n    //   setColor(strokeColor);\r\n    // }\r\n    useEffect(() => {\r\n      window.localStorage.setItem(\"colors\", JSON.stringify(colors));\r\n    }, [colors]);\r\n\r\n    useEffect(() => {\r\n      function onResize() {\r\n        const { innerWidth, innerHeight } = window;\r\n        const x = innerWidth / 2 - (squareSize + 20) / 2;\r\n        const y =\r\n          innerHeight / 2 -\r\n          (squareSize +\r\n            20 +\r\n            barSize +\r\n            barSize +\r\n            5 +\r\n            inputSize +\r\n            outputSize +\r\n            colorsSize) /\r\n            2;\r\n        setPosition([x, y]);\r\n        setOffsetTop(modalPicker.current.offsetTop);\r\n        setOffsetLeft(modalPicker.current.offsetLeft);\r\n      }\r\n      if (modalPicker.current) {\r\n        onResize();\r\n        window.addEventListener(\"resize\", onResize);\r\n      } else {\r\n        window.removeEventListener(\"resize\", onResize);\r\n      }\r\n\r\n      return () => {\r\n        window.removeEventListener(\"resize\", onResize);\r\n      };\r\n    }, [show]);\r\n\r\n    useEffect(() => {\r\n      let id;\r\n      if (copied) {\r\n        id = setTimeout(() => setCopied(false), 4000);\r\n      }\r\n      return () => {\r\n        clearTimeout(id);\r\n      };\r\n    }, [copied]);\r\n\r\n    useEffect(() => {\r\n      setColor(`hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`);\r\n      let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\r\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n      //let { red, green, blue, a } = convertHSLToRGB(parseHSL(c));\r\n      //console.log(red, green, blue, a);\r\n    }, [hue, square, alpha, setPickerColor]);\r\n\r\n    function onHueChange(n) {\r\n      setAnimate(true);\r\n      setHue(n);\r\n      setHueX(computeHueX(n));\r\n      let c = `hsla(${n}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\r\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n    }\r\n\r\n    function onSaturationChange(n) {\r\n      setAnimate(true);\r\n      setSquare([n, square[1]]);\r\n      setSquareXY(computeSquareXY(n, square[1]));\r\n      let c = `hsla(${hue}, ${n}%, ${square[1]}%, ${alpha / 100})`;\r\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n    }\r\n\r\n    function onLightnessChange(n) {\r\n      setAnimate(true);\r\n      setSquare([square[0], n]);\r\n      setSquareXY(computeSquareXY(square[0], n));\r\n      let c = `hsla(${hue}, ${square[0]}%, ${n}%, ${alpha / 100})`;\r\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n    }\r\n\r\n    function onAlphaChange(n) {\r\n      setAnimate(true);\r\n      setAlpha(n);\r\n      setAlphaX(computeAlphaX(n));\r\n      let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${n})`;\r\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n    }\r\n\r\n    function addColor() {\r\n      let index = colors.findIndex((c) => !c);\r\n      if (index !== -1) {\r\n        let newColors = colors.slice();\r\n        newColors[index] = color;\r\n        setColors(newColors);\r\n      }\r\n    }\r\n\r\n    function removeColor(e, i) {\r\n      e.preventDefault();\r\n      let shouldRemove = window.confirm(\"Delete color?\");\r\n      if (shouldRemove) {\r\n        let newColors = colors.slice();\r\n        newColors.splice(i, 1, \"\");\r\n        setColors(newColors);\r\n      }\r\n    }\r\n\r\n    function resetColors() {\r\n      let shouldReset = window.confirm(\"Delete all colors?\");\r\n      if (shouldReset) {\r\n        setColors(defaultColors);\r\n        setShowMenu(false);\r\n      }\r\n    }\r\n\r\n    function onColorClick(c) {\r\n      if (c) {\r\n        setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n        let [h, s, l, a] = parseHSL(c);\r\n        onHueChange(h);\r\n        setSquare([s, l]);\r\n        setSquareXY(computeSquareXY(s, l));\r\n        onAlphaChange(a * 100);\r\n        copyToClipboard(formatOutput(c));\r\n        setCopied(true);\r\n      }\r\n    }\r\n\r\n    function formatOutput(c) {\r\n      if (outputFormat === \"hsla\") return c;\r\n      else if (outputFormat === \"rgba\")\r\n        return convertHSLToRGB(parseHSL(c)).rgba;\r\n      else if (outputFormat === \"hexa\")\r\n        return convertHSLToRGB(parseHSL(c)).hexa;\r\n    }\r\n\r\n    function cycleFormat() {\r\n      setOutputFormat((curr) =>\r\n        curr === \"hsla\" ? \"rgba\" : curr === \"rgba\" ? \"hexa\" : \"hsla\"\r\n      );\r\n    }\r\n\r\n    function openMenu(e) {\r\n      const { clientX, clientY } = e;\r\n      setPositionMenu([clientX + 20, clientY - 100]);\r\n      setShowMenu(true);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <PickerWrapper color={color}>\r\n          <SwatchWrapper\r\n            styles={swatchStyle}\r\n            color={color}\r\n            bg={swatchBG}\r\n            onClick={() => setShow(true)}\r\n          />\r\n          <Modal\r\n            modal={modalPicker}\r\n            show={show}\r\n            position={position}\r\n            zIndex={2}\r\n            backdrop={true}\r\n            animate={true}\r\n            onClose={() => setShow(false)}\r\n          >\r\n            <PickerOuter>\r\n              <PickerInner showColors={showColors}>\r\n                <Square\r\n                  hue={hue}\r\n                  squareXY={squareXY}\r\n                  offsetTop={offsetTop}\r\n                  offsetLeft={offsetLeft}\r\n                  animate={animate}\r\n                  setSquare={setSquare}\r\n                  setSquareXY={setSquareXY}\r\n                  setAnimate={setAnimate}\r\n                />\r\n                <Hue\r\n                  hueX={hueX}\r\n                  offsetLeft={offsetLeft}\r\n                  animate={animate}\r\n                  setHueX={setHueX}\r\n                  setHue={setHue}\r\n                  setAnimate={setAnimate}\r\n                />\r\n                <Alpha\r\n                  hue={hue}\r\n                  alphaX={alphaX}\r\n                  offsetLeft={offsetLeft}\r\n                  animate={animate}\r\n                  setAlpha={setAlpha}\r\n                  setAlphaX={setAlphaX}\r\n                  setAnimate={setAnimate}\r\n                />\r\n                <Inputs>\r\n                  <Input\r\n                    label=\"H\"\r\n                    value={hue}\r\n                    min={0}\r\n                    max={360}\r\n                    defaultValue={180}\r\n                    setValue={onHueChange}\r\n                  />\r\n                  <Input\r\n                    label=\"S\"\r\n                    value={square[0]}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={100}\r\n                    setValue={onSaturationChange}\r\n                  />\r\n                  <Input\r\n                    label=\"L\"\r\n                    value={square[1]}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={50}\r\n                    setValue={onLightnessChange}\r\n                  />\r\n                  <Input\r\n                    label=\"A\"\r\n                    value={alpha}\r\n                    min={0}\r\n                    max={100}\r\n                    defaultValue={100}\r\n                    setValue={onAlphaChange}\r\n                  />\r\n                </Inputs>\r\n                <Outputs>\r\n                  <OutputText>\r\n                    <div className=\"cycle\" onClick={cycleFormat}>\r\n                      <Svg name=\"refresh\" />\r\n                    </div>\r\n                    <input\r\n                      value={copied ? \"Copied...\" : formatOutput(color)}\r\n                      readOnly={true}\r\n                      onClick={() => onColorClick(color)}\r\n                    />\r\n                  </OutputText>\r\n                  {/* <div\r\n                    className=\"noColor\"\r\n                    // onClick={() => setShowColors(!showColors)}\r\n                  >\r\n                    <Svg name=\"noColor\" />\r\n                  </div> */}\r\n                </Outputs>\r\n                <Colors show={true}>\r\n                  {colors.map((c, i) => (\r\n                    <Color\r\n                      key={i}\r\n                      color={c}\r\n                      onClick={() => onColorClick(c)}\r\n                      onContextMenu={(e) => removeColor(e, i)}\r\n                    />\r\n                  ))}\r\n                  <ColorAction col={6} row={1} onClick={addColor}>\r\n                    <Svg name=\"add\" />\r\n                  </ColorAction>\r\n                  <ColorAction col={6} row={2}>\r\n                    <button\r\n                      onClick={() => {\r\n                        setSwatchBG(imgNone);\r\n                        setColor(\"nill\");\r\n                        setPickerColor(\"nill\");\r\n                        //console.log(\"clicked\");\r\n                      }}\r\n                    >\r\n                      none\r\n                    </button>\r\n                  </ColorAction>\r\n                  {/* <ColorAction col={6} row={2} onClick={openMenu}>\r\n                  <Svg name=\"menu\" />\r\n                </ColorAction> */}\r\n                </Colors>\r\n              </PickerInner>\r\n            </PickerOuter>\r\n          </Modal>\r\n          <Modal\r\n            modal={modalMenu}\r\n            show={showMenu}\r\n            position={positionMenu}\r\n            zIndex={4}\r\n            backdrop={false}\r\n            animate={false}\r\n            onClose={() => setShowMenu(false)}\r\n          >\r\n            <Menu resetColors={resetColors} />\r\n          </Modal>\r\n        </PickerWrapper>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Picker;\r\n"]},"metadata":{},"sourceType":"module"}