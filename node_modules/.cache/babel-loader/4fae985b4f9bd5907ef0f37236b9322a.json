{"ast":null,"code":"var _jsxFileName = \"C:\\\\Tutorials\\\\elp-app\\\\src\\\\components\\\\Picker\\\\Picker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { parseHSL, convertHSLToRGB, copyToClipboard, RGBAToHSLA } from \"./utils\";\nimport Modal from \"./Modal\";\nimport Hue from \"./Hue\";\nimport Square from \"./Square\";\nimport Input from \"./Input\";\nimport Alpha from \"./Alpha\";\nimport Svg from \"./Svg\";\nimport Menu from \"./Menu\";\nimport config from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultColors = Array.from({\n  length: 10\n}, () => \"\");\nconst {\n  squareSize,\n  barSize,\n  crossSize,\n  inputSize,\n  outputSize,\n  colorsSize\n} = config;\nexport const PickerWrapper = styled.div`\n  user-select: none;\n`;\n_c = PickerWrapper;\nexport const SwatchWrapper = styled.div.attrs(p => ({\n  style: {\n    background: p.color\n  }\n}))`\n  width: 50px;\n  height: 20px;\n  display: inline-block;\n  cursor: pointer;\n`;\n_c2 = SwatchWrapper;\nexport const PickerOuter = styled.div`\n  width: ${squareSize + 10}px;\n  display: grid;\n  border-radius: 2px;\n  background: #ffffff;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);\n`;\n_c3 = PickerOuter;\nexport const PickerInner = styled.div.attrs(p => ({\n  style: {\n    gridTemplateRows: p.showColors ? `${squareSize + 10}px ${barSize}px ${barSize + 5}px ${inputSize}px ${outputSize}px ${colorsSize}px` : `${squareSize + 10}px ${barSize}px ${barSize + 5}px ${inputSize}px ${outputSize}px`\n  }\n}))`\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n_c4 = PickerInner;\nexport const Inputs = styled.div`\n  align-self: flex-end;\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  align-items: center;\n  justify-items: center;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n_c5 = Inputs;\nexport const Outputs = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr 25px;\n  grid-gap: 10px;\n  justify-items: center;\n  padding-left: 5px;\n  padding-right: 5px;\n  .arrow {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    &:hover svg {\n      fill: #333333;\n    }\n    svg {\n      width: 12px;\n      height: 12px;\n      fill: #606060;\n    }\n  }\n  .noColor {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    &:hover svg {\n      fill: #dd0000;\n    }\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n_c6 = Outputs;\nexport const OutputText = styled.div`\n  align-self: center;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  align-items: center;\n  border: 1px solid #ddd;\n  .cycle {\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    svg {\n      width: 12px;\n      height: 12px;\n      fill: #606060;\n    }\n  }\n  input {\n    justify-self: flex-start;\n    width: 100%;\n    text-align: center;\n    font-family: monospace;\n    font-size: 9px;\n    outline: 0;\n    border: 0;\n    padding: 4px 2px;\n    cursor: auto;\n    &::selection {\n      background: transparent;\n    }\n  }\n`;\n_c7 = OutputText;\nexport const Colors = styled.div`\n  width: 100%;\n  height: ${colorsSize}px;\n  display: ${p => p.show ? \"grid\" : \"none\"};\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: 1fr 1fr;\n  align-items: center;\n  justify-items: center;\n`;\n_c8 = Colors;\nexport const Color = styled.div`\n  width: 25px;\n  height: 25px;\n  background: ${p => p.color || \"#fafafa\"};\n  border: 1px solid #ddd;\n`;\n_c9 = Color;\nexport const ColorAction = styled.div.attrs(p => ({\n  style: {\n    gridColumn: p.col,\n    gridRow: p.row\n  }\n}))`\n  width: 25px;\n  height: 25px;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  font-size: 14px;\n  svg {\n    width: 12px;\n    height: 12px;\n    fill: #606060;\n  }\n`;\n_c10 = ColorAction;\n\nfunction computeHueX(h) {\n  return Math.round(squareSize / 360 * h - barSize / 2);\n}\n\nfunction computeSquareXY(s, l) {\n  const t = s * (l < 50 ? l : 100 - l) / 100;\n  const s1 = Math.round(200 * t / (l + t)) | 0;\n  const b1 = Math.round(t + l);\n  const x = squareSize / 100 * s1 - crossSize / 2;\n  const y = squareSize - squareSize / 100 * b1 - crossSize / 2;\n  return [x, y];\n}\n\nfunction computeAlphaX(a) {\n  return Math.round(squareSize / 100 * a - barSize / 2);\n}\n\nconst Picker = ({\n  swatchStyle,\n  setPickerColor,\n  strokeColor,\n  activeObjectColorRef\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [position, setPosition] = useState([0, 0]);\n  const [hue, setHue] = useState(180);\n  const [hueX, setHueX] = useState(() => squareSize / 2 - barSize / 2);\n  const [square, setSquare] = useState([100, 50]);\n  const [squareXY, setSquareXY] = useState(() => [squareSize - crossSize / 2, crossSize / -2]);\n  const [alpha, setAlpha] = useState(100);\n  const [alphaX, setAlphaX] = useState(squareSize - barSize / 2);\n  const [offsetTop, setOffsetTop] = useState(0);\n  const [offsetLeft, setOffsetLeft] = useState(0);\n  const [color, setColor] = useState(`hsla(180, 100%, 50%, 1)`);\n  const [outputFormat, setOutputFormat] = useState(\"hsla\");\n  const [copied, setCopied] = useState(false);\n  const [animate, setAnimate] = useState(false);\n  const [showColors, setShowColors] = useState(false);\n  const [colors, setColors] = useState(defaultColors);\n  const [showMenu, setShowMenu] = useState(false);\n  const [positionMenu, setPositionMenu] = useState([0, 0]);\n  const modalPicker = useRef(null);\n  const modalMenu = useRef(null);\n  useEffect(() => {\n    let initalColors = JSON.parse(window.localStorage.getItem(\"colors\")) || defaultColors;\n    setColors(initalColors);\n    activeObjectColorRef.current = changeColor;\n  }, []);\n\n  function changeColor() {\n    RGBAToHSLA(strokeColor);\n    setColor(strokeColor);\n  }\n\n  useEffect(() => {\n    window.localStorage.setItem(\"colors\", JSON.stringify(colors));\n  }, [colors]);\n  useEffect(() => {\n    function onResize() {\n      const {\n        innerWidth,\n        innerHeight\n      } = window;\n      const x = innerWidth / 2 - (squareSize + 20) / 2;\n      const y = innerHeight / 2 - (squareSize + 20 + barSize + barSize + 5 + inputSize + outputSize + colorsSize) / 2;\n      setPosition([x, y]);\n      setOffsetTop(modalPicker.current.offsetTop);\n      setOffsetLeft(modalPicker.current.offsetLeft);\n    }\n\n    if (modalPicker.current) {\n      onResize();\n      window.addEventListener(\"resize\", onResize);\n    } else {\n      window.removeEventListener(\"resize\", onResize);\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [show]);\n  useEffect(() => {\n    let id;\n\n    if (copied) {\n      id = setTimeout(() => setCopied(false), 4000);\n    }\n\n    return () => {\n      clearTimeout(id);\n    };\n  }, [copied]);\n  useEffect(() => {\n    setColor(`hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`);\n    let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n    let {\n      red,\n      green,\n      blue,\n      a\n    } = convertHSLToRGB(parseHSL(c));\n    console.log(red, green, blue, a);\n  }, [hue, square, alpha, setPickerColor]);\n\n  function onHueChange(n) {\n    setAnimate(true);\n    setHue(n);\n    setHueX(computeHueX(n));\n    let c = `hsla(${n}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function onSaturationChange(n) {\n    setAnimate(true);\n    setSquare([n, square[1]]);\n    setSquareXY(computeSquareXY(n, square[1]));\n    let c = `hsla(${hue}, ${n}%, ${square[1]}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function onLightnessChange(n) {\n    setAnimate(true);\n    setSquare([square[0], n]);\n    setSquareXY(computeSquareXY(square[0], n));\n    let c = `hsla(${hue}, ${square[0]}%, ${n}%, ${alpha / 100})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function onAlphaChange(n) {\n    setAnimate(true);\n    setAlpha(n);\n    setAlphaX(computeAlphaX(n));\n    let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${n})`;\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n  }\n\n  function addColor() {\n    let index = colors.findIndex(c => !c);\n\n    if (index !== -1) {\n      let newColors = colors.slice();\n      newColors[index] = color;\n      setColors(newColors);\n    }\n  }\n\n  function removeColor(e, i) {\n    e.preventDefault();\n    let shouldRemove = window.confirm(\"Delete color?\");\n\n    if (shouldRemove) {\n      let newColors = colors.slice();\n      newColors.splice(i, 1, \"\");\n      setColors(newColors);\n    }\n  }\n\n  function resetColors() {\n    let shouldReset = window.confirm(\"Delete all colors?\");\n\n    if (shouldReset) {\n      setColors(defaultColors);\n      setShowMenu(false);\n    }\n  }\n\n  function onColorClick(c) {\n    if (c) {\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\n      let [h, s, l, a] = parseHSL(c);\n      onHueChange(h);\n      setSquare([s, l]);\n      setSquareXY(computeSquareXY(s, l));\n      onAlphaChange(a * 100);\n      copyToClipboard(formatOutput(c));\n      setCopied(true);\n    }\n  }\n\n  function formatOutput(c) {\n    if (outputFormat === \"hsla\") return c;else if (outputFormat === \"rgba\") return convertHSLToRGB(parseHSL(c)).rgba;else if (outputFormat === \"hexa\") return convertHSLToRGB(parseHSL(c)).hexa;\n  }\n\n  function cycleFormat() {\n    setOutputFormat(curr => curr === \"hsla\" ? \"rgba\" : curr === \"rgba\" ? \"hexa\" : \"hsla\");\n  }\n\n  function openMenu(e) {\n    const {\n      clientX,\n      clientY\n    } = e;\n    setPositionMenu([clientX + 20, clientY - 100]);\n    setShowMenu(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PickerWrapper, {\n      color: color,\n      children: [/*#__PURE__*/_jsxDEV(SwatchWrapper, {\n        styles: swatchStyle,\n        color: color,\n        onClick: () => setShow(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modalPicker,\n        show: show,\n        position: position,\n        zIndex: 2,\n        backdrop: true,\n        animate: true,\n        onClose: () => setShow(false),\n        children: /*#__PURE__*/_jsxDEV(PickerOuter, {\n          children: /*#__PURE__*/_jsxDEV(PickerInner, {\n            showColors: showColors,\n            children: [/*#__PURE__*/_jsxDEV(Square, {\n              hue: hue,\n              squareXY: squareXY,\n              offsetTop: offsetTop,\n              offsetLeft: offsetLeft,\n              animate: animate,\n              setSquare: setSquare,\n              setSquareXY: setSquareXY,\n              setAnimate: setAnimate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Hue, {\n              hueX: hueX,\n              offsetLeft: offsetLeft,\n              animate: animate,\n              setHueX: setHueX,\n              setHue: setHue,\n              setAnimate: setAnimate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Alpha, {\n              hue: hue,\n              alphaX: alphaX,\n              offsetLeft: offsetLeft,\n              animate: animate,\n              setAlpha: setAlpha,\n              setAlphaX: setAlphaX,\n              setAnimate: setAnimate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"H\",\n                value: hue,\n                min: 0,\n                max: 360,\n                defaultValue: 180,\n                setValue: onHueChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"S\",\n                value: square[0],\n                min: 0,\n                max: 100,\n                defaultValue: 100,\n                setValue: onSaturationChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"L\",\n                value: square[1],\n                min: 0,\n                max: 100,\n                defaultValue: 50,\n                setValue: onLightnessChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"A\",\n                value: alpha,\n                min: 0,\n                max: 100,\n                defaultValue: 100,\n                setValue: onAlphaChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Outputs, {\n              children: [/*#__PURE__*/_jsxDEV(OutputText, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cycle\",\n                  onClick: cycleFormat,\n                  children: /*#__PURE__*/_jsxDEV(Svg, {\n                    name: \"refresh\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: copied ? \"Copied...\" : formatOutput(color),\n                  readOnly: true,\n                  onClick: () => onColorClick(color)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"noColor\" // onClick={() => setShowColors(!showColors)}\n                ,\n                children: /*#__PURE__*/_jsxDEV(Svg, {\n                  name: \"noColor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Colors, {\n              show: true,\n              children: [colors.map((c, i) => /*#__PURE__*/_jsxDEV(Color, {\n                color: c,\n                onClick: () => onColorClick(c),\n                onContextMenu: e => removeColor(e, i)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(ColorAction, {\n                col: 6,\n                row: 1,\n                onClick: addColor,\n                children: /*#__PURE__*/_jsxDEV(Svg, {\n                  name: \"add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        modal: modalMenu,\n        show: showMenu,\n        position: positionMenu,\n        zIndex: 4,\n        backdrop: false,\n        animate: false,\n        onClose: () => setShowMenu(false),\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          resetColors: resetColors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Picker, \"HxZQdxSXXz0tpNR2Hc5dfHVF78o=\");\n\n_c11 = Picker;\nexport default Picker;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"PickerWrapper\");\n$RefreshReg$(_c2, \"SwatchWrapper\");\n$RefreshReg$(_c3, \"PickerOuter\");\n$RefreshReg$(_c4, \"PickerInner\");\n$RefreshReg$(_c5, \"Inputs\");\n$RefreshReg$(_c6, \"Outputs\");\n$RefreshReg$(_c7, \"OutputText\");\n$RefreshReg$(_c8, \"Colors\");\n$RefreshReg$(_c9, \"Color\");\n$RefreshReg$(_c10, \"ColorAction\");\n$RefreshReg$(_c11, \"Picker\");","map":{"version":3,"sources":["C:/Tutorials/elp-app/src/components/Picker/Picker.js"],"names":["React","useState","useRef","useEffect","styled","parseHSL","convertHSLToRGB","copyToClipboard","RGBAToHSLA","Modal","Hue","Square","Input","Alpha","Svg","Menu","config","defaultColors","Array","from","length","squareSize","barSize","crossSize","inputSize","outputSize","colorsSize","PickerWrapper","div","SwatchWrapper","attrs","p","style","background","color","PickerOuter","PickerInner","gridTemplateRows","showColors","Inputs","Outputs","OutputText","Colors","show","Color","ColorAction","gridColumn","col","gridRow","row","computeHueX","h","Math","round","computeSquareXY","s","l","t","s1","b1","x","y","computeAlphaX","a","Picker","swatchStyle","setPickerColor","strokeColor","activeObjectColorRef","setShow","position","setPosition","hue","setHue","hueX","setHueX","square","setSquare","squareXY","setSquareXY","alpha","setAlpha","alphaX","setAlphaX","offsetTop","setOffsetTop","offsetLeft","setOffsetLeft","setColor","outputFormat","setOutputFormat","copied","setCopied","animate","setAnimate","setShowColors","colors","setColors","showMenu","setShowMenu","positionMenu","setPositionMenu","modalPicker","modalMenu","initalColors","JSON","parse","window","localStorage","getItem","current","changeColor","setItem","stringify","onResize","innerWidth","innerHeight","addEventListener","removeEventListener","id","setTimeout","clearTimeout","c","rgba","red","green","blue","console","log","onHueChange","n","onSaturationChange","onLightnessChange","onAlphaChange","addColor","index","findIndex","newColors","slice","removeColor","e","i","preventDefault","shouldRemove","confirm","splice","resetColors","shouldReset","onColorClick","formatOutput","hexa","cycleFormat","curr","openMenu","clientX","clientY","map"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  parseHSL,\r\n  convertHSLToRGB,\r\n  copyToClipboard,\r\n  RGBAToHSLA,\r\n} from \"./utils\";\r\nimport Modal from \"./Modal\";\r\nimport Hue from \"./Hue\";\r\nimport Square from \"./Square\";\r\nimport Input from \"./Input\";\r\nimport Alpha from \"./Alpha\";\r\nimport Svg from \"./Svg\";\r\nimport Menu from \"./Menu\";\r\nimport config from \"./config\";\r\n\r\nconst defaultColors = Array.from({ length: 10 }, () => \"\");\r\n\r\nconst { squareSize, barSize, crossSize, inputSize, outputSize, colorsSize } =\r\n  config;\r\n\r\nexport const PickerWrapper = styled.div`\r\n  user-select: none;\r\n`;\r\n\r\nexport const SwatchWrapper = styled.div.attrs((p) => ({\r\n  style: {\r\n    background: p.color,\r\n  },\r\n}))`\r\n  width: 50px;\r\n  height: 20px;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const PickerOuter = styled.div`\r\n  width: ${squareSize + 10}px;\r\n  display: grid;\r\n  border-radius: 2px;\r\n  background: #ffffff;\r\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nexport const PickerInner = styled.div.attrs((p) => ({\r\n  style: {\r\n    gridTemplateRows: p.showColors\r\n      ? `${squareSize + 10}px ${barSize}px ${\r\n          barSize + 5\r\n        }px ${inputSize}px ${outputSize}px ${colorsSize}px`\r\n      : `${squareSize + 10}px ${barSize}px ${\r\n          barSize + 5\r\n        }px ${inputSize}px ${outputSize}px`,\r\n  },\r\n}))`\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport const Inputs = styled.div`\r\n  align-self: flex-end;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  align-items: center;\r\n  justify-items: center;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`;\r\n\r\nexport const Outputs = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 25px;\r\n  grid-gap: 10px;\r\n  justify-items: center;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  .arrow {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    align-items: center;\r\n    justify-items: center;\r\n    &:hover svg {\r\n      fill: #333333;\r\n    }\r\n    svg {\r\n      width: 12px;\r\n      height: 12px;\r\n      fill: #606060;\r\n    }\r\n  }\r\n  .noColor {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    align-items: center;\r\n    justify-items: center;\r\n    &:hover svg {\r\n      fill: #dd0000;\r\n    }\r\n    svg {\r\n      width: 20px;\r\n      height: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.div`\r\n  align-self: center;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 20px 1fr;\r\n  align-items: center;\r\n  border: 1px solid #ddd;\r\n  .cycle {\r\n    display: grid;\r\n    align-items: center;\r\n    justify-items: center;\r\n    svg {\r\n      width: 12px;\r\n      height: 12px;\r\n      fill: #606060;\r\n    }\r\n  }\r\n  input {\r\n    justify-self: flex-start;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-family: monospace;\r\n    font-size: 9px;\r\n    outline: 0;\r\n    border: 0;\r\n    padding: 4px 2px;\r\n    cursor: auto;\r\n    &::selection {\r\n      background: transparent;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Colors = styled.div`\r\n  width: 100%;\r\n  height: ${colorsSize}px;\r\n  display: ${(p) => (p.show ? \"grid\" : \"none\")};\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-template-rows: 1fr 1fr;\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport const Color = styled.div`\r\n  width: 25px;\r\n  height: 25px;\r\n  background: ${(p) => p.color || \"#fafafa\"};\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nexport const ColorAction = styled.div.attrs((p) => ({\r\n  style: {\r\n    gridColumn: p.col,\r\n    gridRow: p.row,\r\n  },\r\n}))`\r\n  width: 25px;\r\n  height: 25px;\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  font-size: 14px;\r\n  svg {\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: #606060;\r\n  }\r\n`;\r\n\r\nfunction computeHueX(h) {\r\n  return Math.round((squareSize / 360) * h - barSize / 2);\r\n}\r\n\r\nfunction computeSquareXY(s, l) {\r\n  const t = (s * (l < 50 ? l : 100 - l)) / 100;\r\n  const s1 = Math.round((200 * t) / (l + t)) | 0;\r\n  const b1 = Math.round(t + l);\r\n  const x = (squareSize / 100) * s1 - crossSize / 2;\r\n  const y = squareSize - (squareSize / 100) * b1 - crossSize / 2;\r\n  return [x, y];\r\n}\r\n\r\nfunction computeAlphaX(a) {\r\n  return Math.round((squareSize / 100) * a - barSize / 2);\r\n}\r\n\r\nconst Picker = ({\r\n  swatchStyle,\r\n  setPickerColor,\r\n  strokeColor,\r\n  activeObjectColorRef,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [position, setPosition] = useState([0, 0]);\r\n  const [hue, setHue] = useState(180);\r\n  const [hueX, setHueX] = useState(() => squareSize / 2 - barSize / 2);\r\n  const [square, setSquare] = useState([100, 50]);\r\n  const [squareXY, setSquareXY] = useState(() => [\r\n    squareSize - crossSize / 2,\r\n    crossSize / -2,\r\n  ]);\r\n  const [alpha, setAlpha] = useState(100);\r\n  const [alphaX, setAlphaX] = useState(squareSize - barSize / 2);\r\n  const [offsetTop, setOffsetTop] = useState(0);\r\n  const [offsetLeft, setOffsetLeft] = useState(0);\r\n  const [color, setColor] = useState(`hsla(180, 100%, 50%, 1)`);\r\n  const [outputFormat, setOutputFormat] = useState(\"hsla\");\r\n  const [copied, setCopied] = useState(false);\r\n  const [animate, setAnimate] = useState(false);\r\n  const [showColors, setShowColors] = useState(false);\r\n  const [colors, setColors] = useState(defaultColors);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [positionMenu, setPositionMenu] = useState([0, 0]);\r\n\r\n  const modalPicker = useRef(null);\r\n  const modalMenu = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let initalColors =\r\n      JSON.parse(window.localStorage.getItem(\"colors\")) || defaultColors;\r\n    setColors(initalColors);\r\n    activeObjectColorRef.current = changeColor;\r\n  }, []);\r\n\r\n  function changeColor() {\r\n    RGBAToHSLA(strokeColor);\r\n    setColor(strokeColor);\r\n  }\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"colors\", JSON.stringify(colors));\r\n  }, [colors]);\r\n\r\n  useEffect(() => {\r\n    function onResize() {\r\n      const { innerWidth, innerHeight } = window;\r\n      const x = innerWidth / 2 - (squareSize + 20) / 2;\r\n      const y =\r\n        innerHeight / 2 -\r\n        (squareSize +\r\n          20 +\r\n          barSize +\r\n          barSize +\r\n          5 +\r\n          inputSize +\r\n          outputSize +\r\n          colorsSize) /\r\n          2;\r\n      setPosition([x, y]);\r\n      setOffsetTop(modalPicker.current.offsetTop);\r\n      setOffsetLeft(modalPicker.current.offsetLeft);\r\n    }\r\n    if (modalPicker.current) {\r\n      onResize();\r\n      window.addEventListener(\"resize\", onResize);\r\n    } else {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, [show]);\r\n\r\n  useEffect(() => {\r\n    let id;\r\n    if (copied) {\r\n      id = setTimeout(() => setCopied(false), 4000);\r\n    }\r\n    return () => {\r\n      clearTimeout(id);\r\n    };\r\n  }, [copied]);\r\n\r\n  useEffect(() => {\r\n    setColor(`hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`);\r\n    let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\r\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n    let { red, green, blue, a } = convertHSLToRGB(parseHSL(c));\r\n    console.log(red, green, blue, a);\r\n  }, [hue, square, alpha, setPickerColor]);\r\n\r\n  function onHueChange(n) {\r\n    setAnimate(true);\r\n    setHue(n);\r\n    setHueX(computeHueX(n));\r\n    let c = `hsla(${n}, ${square[0]}%, ${square[1]}%, ${alpha / 100})`;\r\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n  }\r\n\r\n  function onSaturationChange(n) {\r\n    setAnimate(true);\r\n    setSquare([n, square[1]]);\r\n    setSquareXY(computeSquareXY(n, square[1]));\r\n    let c = `hsla(${hue}, ${n}%, ${square[1]}%, ${alpha / 100})`;\r\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n  }\r\n\r\n  function onLightnessChange(n) {\r\n    setAnimate(true);\r\n    setSquare([square[0], n]);\r\n    setSquareXY(computeSquareXY(square[0], n));\r\n    let c = `hsla(${hue}, ${square[0]}%, ${n}%, ${alpha / 100})`;\r\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n  }\r\n\r\n  function onAlphaChange(n) {\r\n    setAnimate(true);\r\n    setAlpha(n);\r\n    setAlphaX(computeAlphaX(n));\r\n    let c = `hsla(${hue}, ${square[0]}%, ${square[1]}%, ${n})`;\r\n    setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n  }\r\n\r\n  function addColor() {\r\n    let index = colors.findIndex((c) => !c);\r\n    if (index !== -1) {\r\n      let newColors = colors.slice();\r\n      newColors[index] = color;\r\n      setColors(newColors);\r\n    }\r\n  }\r\n\r\n  function removeColor(e, i) {\r\n    e.preventDefault();\r\n    let shouldRemove = window.confirm(\"Delete color?\");\r\n    if (shouldRemove) {\r\n      let newColors = colors.slice();\r\n      newColors.splice(i, 1, \"\");\r\n      setColors(newColors);\r\n    }\r\n  }\r\n\r\n  function resetColors() {\r\n    let shouldReset = window.confirm(\"Delete all colors?\");\r\n    if (shouldReset) {\r\n      setColors(defaultColors);\r\n      setShowMenu(false);\r\n    }\r\n  }\r\n\r\n  function onColorClick(c) {\r\n    if (c) {\r\n      setPickerColor(convertHSLToRGB(parseHSL(c)).rgba);\r\n      let [h, s, l, a] = parseHSL(c);\r\n      onHueChange(h);\r\n      setSquare([s, l]);\r\n      setSquareXY(computeSquareXY(s, l));\r\n      onAlphaChange(a * 100);\r\n      copyToClipboard(formatOutput(c));\r\n      setCopied(true);\r\n    }\r\n  }\r\n\r\n  function formatOutput(c) {\r\n    if (outputFormat === \"hsla\") return c;\r\n    else if (outputFormat === \"rgba\") return convertHSLToRGB(parseHSL(c)).rgba;\r\n    else if (outputFormat === \"hexa\") return convertHSLToRGB(parseHSL(c)).hexa;\r\n  }\r\n\r\n  function cycleFormat() {\r\n    setOutputFormat((curr) =>\r\n      curr === \"hsla\" ? \"rgba\" : curr === \"rgba\" ? \"hexa\" : \"hsla\"\r\n    );\r\n  }\r\n\r\n  function openMenu(e) {\r\n    const { clientX, clientY } = e;\r\n    setPositionMenu([clientX + 20, clientY - 100]);\r\n    setShowMenu(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PickerWrapper color={color}>\r\n        <SwatchWrapper\r\n          styles={swatchStyle}\r\n          color={color}\r\n          onClick={() => setShow(true)}\r\n        />\r\n        <Modal\r\n          modal={modalPicker}\r\n          show={show}\r\n          position={position}\r\n          zIndex={2}\r\n          backdrop={true}\r\n          animate={true}\r\n          onClose={() => setShow(false)}\r\n        >\r\n          <PickerOuter>\r\n            <PickerInner showColors={showColors}>\r\n              <Square\r\n                hue={hue}\r\n                squareXY={squareXY}\r\n                offsetTop={offsetTop}\r\n                offsetLeft={offsetLeft}\r\n                animate={animate}\r\n                setSquare={setSquare}\r\n                setSquareXY={setSquareXY}\r\n                setAnimate={setAnimate}\r\n              />\r\n              <Hue\r\n                hueX={hueX}\r\n                offsetLeft={offsetLeft}\r\n                animate={animate}\r\n                setHueX={setHueX}\r\n                setHue={setHue}\r\n                setAnimate={setAnimate}\r\n              />\r\n              <Alpha\r\n                hue={hue}\r\n                alphaX={alphaX}\r\n                offsetLeft={offsetLeft}\r\n                animate={animate}\r\n                setAlpha={setAlpha}\r\n                setAlphaX={setAlphaX}\r\n                setAnimate={setAnimate}\r\n              />\r\n              <Inputs>\r\n                <Input\r\n                  label=\"H\"\r\n                  value={hue}\r\n                  min={0}\r\n                  max={360}\r\n                  defaultValue={180}\r\n                  setValue={onHueChange}\r\n                />\r\n                <Input\r\n                  label=\"S\"\r\n                  value={square[0]}\r\n                  min={0}\r\n                  max={100}\r\n                  defaultValue={100}\r\n                  setValue={onSaturationChange}\r\n                />\r\n                <Input\r\n                  label=\"L\"\r\n                  value={square[1]}\r\n                  min={0}\r\n                  max={100}\r\n                  defaultValue={50}\r\n                  setValue={onLightnessChange}\r\n                />\r\n                <Input\r\n                  label=\"A\"\r\n                  value={alpha}\r\n                  min={0}\r\n                  max={100}\r\n                  defaultValue={100}\r\n                  setValue={onAlphaChange}\r\n                />\r\n              </Inputs>\r\n              <Outputs>\r\n                <OutputText>\r\n                  <div className=\"cycle\" onClick={cycleFormat}>\r\n                    <Svg name=\"refresh\" />\r\n                  </div>\r\n                  <input\r\n                    value={copied ? \"Copied...\" : formatOutput(color)}\r\n                    readOnly={true}\r\n                    onClick={() => onColorClick(color)}\r\n                  />\r\n                </OutputText>\r\n                <div\r\n                  className=\"noColor\"\r\n                  // onClick={() => setShowColors(!showColors)}\r\n                >\r\n                  <Svg name=\"noColor\" />\r\n                </div>\r\n              </Outputs>\r\n              <Colors show={true}>\r\n                {colors.map((c, i) => (\r\n                  <Color\r\n                    key={i}\r\n                    color={c}\r\n                    onClick={() => onColorClick(c)}\r\n                    onContextMenu={(e) => removeColor(e, i)}\r\n                  />\r\n                ))}\r\n                <ColorAction col={6} row={1} onClick={addColor}>\r\n                  <Svg name=\"add\" />\r\n                </ColorAction>\r\n                {/* <ColorAction col={6} row={2} onClick={openMenu}>\r\n                  <Svg name=\"menu\" />\r\n                </ColorAction> */}\r\n              </Colors>\r\n            </PickerInner>\r\n          </PickerOuter>\r\n        </Modal>\r\n        <Modal\r\n          modal={modalMenu}\r\n          show={showMenu}\r\n          position={positionMenu}\r\n          zIndex={4}\r\n          backdrop={false}\r\n          animate={false}\r\n          onClose={() => setShowMenu(false)}\r\n        >\r\n          <Menu resetColors={resetColors} />\r\n        </Modal>\r\n      </PickerWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n"]},"metadata":{},"sourceType":"module"}