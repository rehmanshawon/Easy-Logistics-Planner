{"ast":null,"code":"var _jsxFileName = \"c:\\\\Tutorials\\\\fabric-drawing\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { fabric } from \"fabric\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  version: \"3.6.3\",\n  objects: [{\n    type: \"rect\",\n    version: \"3.6.3\",\n    originX: \"left\",\n    originY: \"top\",\n    left: 106,\n    top: 33,\n    width: 60,\n    height: 70,\n    fill: \"red\",\n    stroke: null,\n    strokeWidth: 1,\n    strokeDashArray: null,\n    strokeLineCap: \"butt\",\n    strokeDashOffset: 0,\n    strokeLineJoin: \"miter\",\n    strokeMiterLimit: 4,\n    scaleX: 1,\n    scaleY: 1,\n    angle: 0,\n    flipX: false,\n    flipY: false,\n    opacity: 1,\n    shadow: null,\n    visible: true,\n    clipTo: null,\n    backgroundColor: \"\",\n    fillRule: \"nonzero\",\n    paintFirst: \"fill\",\n    globalCompositeOperation: \"source-over\",\n    transformMatrix: null,\n    skewX: 0,\n    skewY: 0,\n    rx: 0,\n    ry: 0\n  }]\n}; // Or you can use:\n// const fabric = require(\"fabric\").fabric;\n\nconst canvas = new fabric.Canvas(\"my-fabric-canvas\");\n\nconst App = () => {\n  _s();\n\n  const canvasRef = useRef();\n  const [canvas, setCanvas] = useState();\n  const [canvasHistory, setCanvasHistory] = useState([initialState]);\n  const [canvasState, setCanvasState] = useState(initialState); //const [mX, setX] = useState(0);\n  //const [mY, setY] = useState(0);\n  //const refCanvas = useRef < fabric.Canvas > null;\n  //const [Rectangles, setRectangles] = useState([]);\n  //const [NewRectangle, setNewRectangle] = useState(true);\n  //const canvasRef = useRef();\n\n  var nRect = true;\n  var Rectangle = null;\n  var origX, origY; //const [gCanvas, setCanvas] = useState(null);\n  //const canvas = new fabric.Canvas(\"my-fabric-canvas\");\n  //const// canvas = new fabric.Canvas(\"my-fabric-canvas\");\n\n  const onObjectModified = useCallback(e => {\n    const newCanvasState = e.target.canvas.toJSON();\n    setCanvasState(newCanvasState); // Limit history depth\n\n    setCanvasHistory(history => [...history, newCanvasState].slice(-4));\n  }, [setCanvasState, setCanvasHistory]);\n  React.useEffect(() => {\n    console.log(JSON.stringify(canvasState));\n  }, [canvasState]);\n  React.useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current);\n    canvas.loadFromJSON(initialState);\n    canvas.on(\"object:modified\", onObjectModified); //const canvas = canvasRef.current;\n    //setCanvas(new fabric.Canvas(\"my-fabric-canvas\"));\n    //const canvas = new fabric.Canvas(\"my-fabric-canvas\");\n    //setCanvas((gCanvas) => canvas);\n\n    const rect = new fabric.Rect({\n      width: 50,\n      height: 50,\n      fill: \"blue\",\n      angle: 10,\n      top: 20,\n      left: 20\n    });\n    const textbox = new fabric.Textbox(\"Click on the Rectangle to move it.\", {\n      fontSize: 20,\n      left: 50,\n      top: 100,\n      width: 200\n    });\n    canvas.add(textbox);\n    canvas.add(rect);\n    setCanvas(canvas); //refCanvas.current = canvas;\n    // UseEffect's cleanup function\n\n    return () => {\n      canvas.dispose(); //setCanvas(null);\n    };\n  }, [canvasRef, onObjectModified, setCanvas]);\n\n  const handleMouseClick = event => {\n    //return;\n    //canvas = new fabric.Canvas(\"my-fabric-canvas\");\n    //console.log(event.clientX);\n    if (nRect) {\n      var pointer = canvas.getPointer(event);\n      origX = pointer.x;\n      origY = pointer.y;\n      Rectangle = new fabric.Rect({\n        left: origX,\n        top: origY,\n        fill: \"transparent\",\n        stroke: \"red\",\n        strokeWidth: 3\n      }); //console.log(Rectangle);\n\n      canvas.add(Rectangle); //canvas.renderAll();\n\n      nRect = false; //setNewRectangle(false);\n    } else {\n      pointer = canvas.getPointer(event);\n\n      if (origX > pointer.x) {\n        Rectangle.set({\n          left: Math.abs(pointer.x)\n        });\n      }\n\n      if (origY > pointer.y) {\n        Rectangle.set({\n          top: Math.abs(pointer.y)\n        });\n      }\n\n      Rectangle.set({\n        width: Math.abs(origX - pointer.x)\n      });\n      Rectangle.set({\n        height: Math.abs(origY - pointer.y)\n      }); //console.log(Rectangle);\n\n      canvas.renderAll();\n      nRect = true; //setNewRectangle(true);\n    } //console.log(pointer);\n\n  };\n\n  const handleMouseMove = event => {\n    if (nRect) return; //canvas.renderAll();\n\n    var pointer = canvas.getPointer(event);\n\n    if (origX > pointer.x) {\n      Rectangle.set({\n        left: Math.abs(pointer.x)\n      });\n    }\n\n    if (origY > pointer.y) {\n      Rectangle.set({\n        top: Math.abs(pointer.y)\n      });\n    }\n\n    Rectangle.set({\n      width: Math.abs(origX - pointer.x)\n    });\n    Rectangle.set({\n      height: Math.abs(origY - pointer.y)\n    }); //console.log(Rectangle);\n\n    canvas.renderAll(); //var pointer = canvas.getPointer(event);\n    //console.log(pointer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: handleMouseMove,\n    onClick: handleMouseClick,\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"my-fabric-canvas\",\n      width: \"1000\",\n      height: \"800\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"79ulFqaFX4/1NMsjexhSjFKNOwA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["c:/Tutorials/fabric-drawing/src/App.js"],"names":["React","useRef","useState","fabric","initialState","version","objects","type","originX","originY","left","top","width","height","fill","stroke","strokeWidth","strokeDashArray","strokeLineCap","strokeDashOffset","strokeLineJoin","strokeMiterLimit","scaleX","scaleY","angle","flipX","flipY","opacity","shadow","visible","clipTo","backgroundColor","fillRule","paintFirst","globalCompositeOperation","transformMatrix","skewX","skewY","rx","ry","canvas","Canvas","App","canvasRef","setCanvas","canvasHistory","setCanvasHistory","canvasState","setCanvasState","nRect","Rectangle","origX","origY","onObjectModified","useCallback","e","newCanvasState","target","toJSON","history","slice","useEffect","console","log","JSON","stringify","current","loadFromJSON","on","rect","Rect","textbox","Textbox","fontSize","add","dispose","handleMouseClick","event","pointer","getPointer","x","y","set","Math","abs","renderAll","handleMouseMove"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./styles.css\";\n\nimport { fabric } from \"fabric\";\n\nconst initialState = {\n  version: \"3.6.3\",\n  objects: [\n    {\n      type: \"rect\",\n      version: \"3.6.3\",\n      originX: \"left\",\n      originY: \"top\",\n      left: 106,\n      top: 33,\n      width: 60,\n      height: 70,\n      fill: \"red\",\n      stroke: null,\n      strokeWidth: 1,\n      strokeDashArray: null,\n      strokeLineCap: \"butt\",\n      strokeDashOffset: 0,\n      strokeLineJoin: \"miter\",\n      strokeMiterLimit: 4,\n      scaleX: 1,\n      scaleY: 1,\n      angle: 0,\n      flipX: false,\n      flipY: false,\n      opacity: 1,\n      shadow: null,\n      visible: true,\n      clipTo: null,\n      backgroundColor: \"\",\n      fillRule: \"nonzero\",\n      paintFirst: \"fill\",\n      globalCompositeOperation: \"source-over\",\n      transformMatrix: null,\n      skewX: 0,\n      skewY: 0,\n      rx: 0,\n      ry: 0,\n    },\n  ],\n};\n\n// Or you can use:\n// const fabric = require(\"fabric\").fabric;\nconst canvas = new fabric.Canvas(\"my-fabric-canvas\");\nconst App = () => {\n  const canvasRef = useRef();\n  const [canvas, setCanvas] = useState();\n  const [canvasHistory, setCanvasHistory] = useState([initialState]);\n  const [canvasState, setCanvasState] = useState(initialState);\n  //const [mX, setX] = useState(0);\n  //const [mY, setY] = useState(0);\n\n  //const refCanvas = useRef < fabric.Canvas > null;\n  //const [Rectangles, setRectangles] = useState([]);\n  //const [NewRectangle, setNewRectangle] = useState(true);\n  //const canvasRef = useRef();\n  var nRect = true;\n  var Rectangle = null;\n  var origX, origY;\n  //const [gCanvas, setCanvas] = useState(null);\n  //const canvas = new fabric.Canvas(\"my-fabric-canvas\");\n  //const// canvas = new fabric.Canvas(\"my-fabric-canvas\");\n\n  const onObjectModified = useCallback(\n    (e) => {\n      const newCanvasState = e.target.canvas.toJSON();\n      setCanvasState(newCanvasState);\n      // Limit history depth\n      setCanvasHistory((history) => [...history, newCanvasState].slice(-4));\n    },\n    [setCanvasState, setCanvasHistory]\n  );\n\n  React.useEffect(() => {\n    console.log(JSON.stringify(canvasState));\n  }, [canvasState]);\n\n  React.useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current);\n    canvas.loadFromJSON(initialState);\n    canvas.on(\"object:modified\", onObjectModified);\n    //const canvas = canvasRef.current;\n    //setCanvas(new fabric.Canvas(\"my-fabric-canvas\"));\n    //const canvas = new fabric.Canvas(\"my-fabric-canvas\");\n    //setCanvas((gCanvas) => canvas);\n    const rect = new fabric.Rect({\n      width: 50,\n      height: 50,\n      fill: \"blue\",\n      angle: 10,\n      top: 20,\n      left: 20,\n    });\n    const textbox = new fabric.Textbox(\"Click on the Rectangle to move it.\", {\n      fontSize: 20,\n      left: 50,\n      top: 100,\n      width: 200,\n    });\n    canvas.add(textbox);\n    canvas.add(rect);\n    setCanvas(canvas);\n    //refCanvas.current = canvas;\n    // UseEffect's cleanup function\n    return () => {\n      canvas.dispose();\n      //setCanvas(null);\n    };\n  }, [canvasRef, onObjectModified, setCanvas]);\n\n  const handleMouseClick = (event) => {\n    //return;\n    //canvas = new fabric.Canvas(\"my-fabric-canvas\");\n    //console.log(event.clientX);\n    if (nRect) {\n      var pointer = canvas.getPointer(event);\n      origX = pointer.x;\n      origY = pointer.y;\n      Rectangle = new fabric.Rect({\n        left: origX,\n        top: origY,\n        fill: \"transparent\",\n        stroke: \"red\",\n        strokeWidth: 3,\n      });\n      //console.log(Rectangle);\n      canvas.add(Rectangle);\n      //canvas.renderAll();\n      nRect = false;\n      //setNewRectangle(false);\n    } else {\n      pointer = canvas.getPointer(event);\n      if (origX > pointer.x) {\n        Rectangle.set({ left: Math.abs(pointer.x) });\n      }\n      if (origY > pointer.y) {\n        Rectangle.set({ top: Math.abs(pointer.y) });\n      }\n      Rectangle.set({ width: Math.abs(origX - pointer.x) });\n      Rectangle.set({ height: Math.abs(origY - pointer.y) });\n      //console.log(Rectangle);\n      canvas.renderAll();\n      nRect = true;\n      //setNewRectangle(true);\n    }\n\n    //console.log(pointer);\n  };\n  const handleMouseMove = (event) => {\n    if (nRect) return;\n    //canvas.renderAll();\n    var pointer = canvas.getPointer(event);\n    if (origX > pointer.x) {\n      Rectangle.set({ left: Math.abs(pointer.x) });\n    }\n    if (origY > pointer.y) {\n      Rectangle.set({ top: Math.abs(pointer.y) });\n    }\n    Rectangle.set({ width: Math.abs(origX - pointer.x) });\n    Rectangle.set({ height: Math.abs(origY - pointer.y) });\n    //console.log(Rectangle);\n    canvas.renderAll();\n    //var pointer = canvas.getPointer(event);\n    //console.log(pointer);\n  };\n\n  return (\n    <div\n      onMouseMove={handleMouseMove}\n      onClick={handleMouseClick}\n      className=\"App\"\n    >\n      <canvas ref={canvasRef} id=\"my-fabric-canvas\" width=\"1000\" height=\"800\" />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}